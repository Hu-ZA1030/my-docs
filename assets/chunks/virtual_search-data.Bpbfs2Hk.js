const t={map:'[{"算法":["0.0"],"demo2":["1.0"],"demo3":["2.0"],"该内容正在努力建设中":["3.0"],"css":["4.0","7.1","8.0","9.0","11.0"],"通配符选择器":["4.1"],"元素选择器":["4.2"],"类选择器":["4.3"],"id":["4.4"],"交集选择器":["4.5"],"并集选择器":["4.6"],"后代选择器":["4.7"],"子选择器":["4.8"],"兄弟选择器":["4.9"],"伪类选择器":["4.10"],"动态伪类选择器":["4.11"],"结构伪类选择器":["4.12"],"属性选择器":["4.13"],"伪元素选择器":["4.14"],"相关链接":["4.15"],"flex":["5.0","5.5"],"如何启用":["5.1"],"主轴和交叉轴":["5.2"],"主轴对齐与交叉轴对齐":["5.3"],"换行与排列":["5.4"],"弹性增长与缩小":["5.6"],"弹性基准值":["5.7"],"嵌套":["5.8"],"多行对齐":["5.9"],"实现常见布局需求":["5.10"],"grid":["6.0"],"选择器优先级":["7.0"],"行内元素":["8.1"],"块级元素":["8.2"],"使用":["8.3","8.7","8.8","16.11","43.9","52.5","78.14","78.17","81.9","83.2","84.2","87.3","97.3","117.0","119.3","126.2","141.1","153.1","156.3"],"使用定位":["8.4"],"定宽高":["8.5"],"不定宽高":["8.6"],"单行溢出隐藏":["9.1"],"多行溢出隐藏":["9.2","9.3"],"滚动条样式":["10.0"],"方法":["11.1","11.2","14.2","21.7","67.2","68.2"],"es6":["12.0","13.1","15.0","17.0","19.0","20.0","21.0","76.4"],"创建类":["12.1"],"创建对象":["12.2","73.1"],"类的继承":["12.3"],"方法重写":["12.4"],"静态方法":["12.5"],"getter":["12.6"],"ecmascript":["13.0","13.2","13.3","13.4"],"map":["14.0","28.32"],"简述":["14.1","16.1"],"对象操作":["14.3"],"转换":["14.4","16.12","21.4","21.5"],"克隆":["14.5"],"合并":["14.6"],"引言":["15.1"],"模块化的意义":["15.2"],"避免命名冲突":["15.3"],"更好的代码组织和维护":["15.4"],"代码重用":["15.5"],"导出模块":["15.6"],"导出变量":["15.7"],"导出函数":["15.8"],"导出类":["15.9"],"导入模块":["15.10"],"导入单个变量":["15.11"],"导入函数":["15.12"],"导入类":["15.13"],"导入全部内容":["15.14"],"默认导出":["15.15"],"默认导出变量":["15.16"],"默认导出函数":["15.17"],"默认导出类":["15.18"],"同时使用命名导出和默认导出":["15.19"],"重命名导入和导出":["15.20"],"重命名导入":["15.21"],"重命名导出":["15.22"],"动态导入":["15.23"],"注意事项":["15.24","17.11","20.10","45.5","54.9","62.4","63.6","64.6","74.4","132.4"],"文件扩展名":["15.25"],"模块的类型":["15.26"],"严格模式":["15.27"],"导入和导出位置":["15.28"],"set":["16.0"],"实例的方法与属性":["16.2"],"add":["16.3"],"clear":["16.4"],"delete":["16.5"],"entries":["16.6","21.12"],"has":["16.7"],"values":["16.8","21.14"],"keys":["16.9","21.13"],"size":["16.10"],"去重":["16.13"],"并集":["16.14"],"交集":["16.15"],"差集":["16.16"],"函数参数的默认值":["17.1"],"认识函数参数的默认值":["17.2"],"函数参数默认值的基本用法":["17.3"],"默认值的生效条件":["17.4"],"与解构赋值默认值结合使用":["17.5"],"参数默认值的位置":["17.6"],"函数参数默认值的应用":["17.7"],"rest":["17.8"],"前言":["17.9"],"函数参数":["17.10"],"剩余参数的应用":["17.12"],"小结":["17.13","34.20"],"箭头函数":["17.14"],"基本语法":["17.15"],"没有参数或多个参数":["17.16"],"箭头函数与":["17.17"],"使用注意事项":["17.18"],"函数参数的尾逗号":["17.19"],"catch":["17.20"],"js":["18.0","50.1","147.3","149.3"],"一":["18.1","28.5","34.1","92.1","93.1","105.9","110.1","110.6","138.2","165.1"],"增":["18.2","28.6"],"concat":["18.3","28.10"],"删":["18.4","28.11"],"改":["18.5","28.16"],"trim":["18.6"],"repeat":["18.7"],"padstart":["18.8"],"tolowercase":["18.9"],"查":["18.10","28.18"],"charat":["18.11"],"indexof":["18.12","28.19"],"startwith":["18.13"],"at":["18.14"],"二":["18.15","28.22","34.8","43.2","92.5","93.2","105.10","138.6","165.5"],"split":["18.16"],"三":["18.17","28.25","34.13","43.7","93.3","138.7","165.11"],"match":["18.18"],"search":["18.19"],"replace":["18.20"],"模板字符串":["19.1"],"字符串插值":["19.2"],"多行字符串":["19.3"],"嵌套模板字符串":["19.4"],"带标签的模板字符串":["19.5"],"属性的简洁表示法":["20.1"],"方括号语法":["20.2"],"方括号语法的用法":["20.3"],"方括号中可以放什么":["20.4"],"方括号语法和点语法的区别":["20.5"],"super":["20.6"],"对象的展开运算符":["20.7"],"展开对象":["20.8"],"合并对象":["20.9"],"空对象的展开":["20.11"],"非对象的展开":["20.12"],"字符串的展开":["20.13"],"数组的展开":["20.14"],"对象中对象属性的展开":["20.15"],"对象展开运算符的应用":["20.16"],"复制对象":["20.17"],"用户参数和默认参数":["20.18"],"对象的新增方法":["20.19"],"object":["20.20","20.21","20.22","34.9","66.2","73.6","73.7","73.8","73.9","73.10","73.11","73.12","73.13","73.14","73.15","73.16","73.17","73.18","73.19","73.20"],"array":["21.1","21.2","34.10","66.3"],"转换类数组":["21.3"],"转换字符串":["21.6"],"find":["21.8","28.21"],"findindex":["21.9"],"fill":["21.10"],"copywithin":["21.11"],"includes":["21.15","28.20"],"flat":["21.16"],"flatmap":["21.17"],"解构赋值":["22.0"],"数组解构赋值":["22.1"],"基本用法":["22.2","22.8"],"忽略不需要的元素":["22.3"],"给变量指定默认值":["22.4","22.10"],"剩余元素":["22.5"],"交换变量的值":["22.6"],"对象解构赋值":["22.7"],"重命名变量":["22.9"],"嵌套解构":["22.11"],"html5":["23.0","23.5","23.6","24.3"],"音视频频格式的":["23.1"],"音频格式":["23.2"],"视频格式":["23.3"],"音视频标签描述":["23.4"],"video":["23.7","23.11"],"音视频对象的方法":["23.8"],"代码实例":["23.9"],"audio":["23.10"],"html":["24.0","24.1","24.2","26.0"],"实践和进阶":["24.4"],"常用标签及用法":["25.0"],"标题标签":["25.1"],"段落标签":["25.2"],"超链接标签":["25.3"],"图像标签":["25.4"],"无序列表和列表项标签":["25.5"],"有序列表和列表项标签":["25.6"],"容器标签":["25.7"],"内联容器标签":["25.8"],"表格标签":["25.9"],"换行标签":["25.10"],"输入标签":["25.11"],"按钮标签":["25.12"],"表单标签":["25.13"],"标题":["25.14"],"多媒体标签":["25.15"],"块级标签":["26.1"],"内联标签":["26.2"],"嵌套标签":["26.3"],"属性":["26.4","67.1","68.1","140.1"],"自定义标签":["26.5"],"input":["27.0","27.1"],"javascript":["28.0","29.0","30.0","31.0","32.0","33.0","34.0","35.0","38.0","43.0","45.0","46.0","47.0","48.0","52.0","53.0","53.5","55.0","57.0","62.0","63.0","64.0","66.0","66.1","72.0","74.0","75.0"],"创建":["28.1","52.1"],"获取数组元素":["28.2"],"数组方法":["28.4"],"push":["28.7"],"unshift":["28.8"],"splice":["28.9","28.14","28.17"],"pop":["28.12"],"shift":["28.13"],"slice":["28.15"],"reverse":["28.23"],"sort":["28.24"],"join":["28.26"],"四":["28.27","34.17","138.8"],"some":["28.28"],"every":["28.29"],"foreach":["28.30"],"filter":["28.31"],"if":["29.1","29.2"],"switch":["29.3"],"循环语句":["29.4"],"while":["29.5"],"do":["29.6"],"for":["29.7","29.8","29.9","29.10","29.11","35.6"],"break":["29.12","30.9"],"函数的使用":["30.1"],"声明函数":["30.2"],"调用函数":["30.3"],"函数的封装":["30.4"],"函数的参数":["30.5"],"形参和实参":["30.6"],"函数形参和实参个数不匹配问题":["30.7"],"函数的返回值":["30.8"],"匿名函数":["30.10"],"函数表达式":["30.11"],"立即执行函数":["30.12"],"输出语句":["31.1"],"引入方式":["31.2"],"内部方式":["31.3"],"外部方式":["31.4"],"注释":["31.5"],"单行注释":["31.6"],"多行注释":["31.7"],"概述":["32.1"],"生成方法":["32.2"],"键名":["32.3"],"对象的引用":["32.4"],"表达式还是语句":["32.5"],"属性的操作":["32.6"],"属性的读取":["32.7"],"属性的赋值":["32.8"],"属性的查看":["32.9"],"属性的删除":["32.10"],"属性是否存在":["32.11"],"属性的遍历":["32.12"],"with":["32.13"],"运算符":["33.1"],"算数运算符":["33.2"],"赋值运算符":["33.3"],"自增和自减":["33.4"],"自增运算符":["33.5"],"自减运算符":["33.6"],"比较运行符":["33.7"],"逻辑运算符":["33.8"],"逻辑与":["33.9"],"逻辑或":["33.10"],"逻辑非":["33.11"],"条件运算符":["33.12"],"运算符的优先级":["33.13"],"number":["34.2","66.5"],"undefined":["34.3"],"string":["34.4","66.4"],"null":["34.5","101.9"],"boolean":["34.6","66.6"],"symbol":["34.7"],"function":["34.11"],"其他引用类型":["34.12"],"转换为字符串":["34.14"],"转换为数字型":["34.15"],"转换为布尔型":["34.16"],"基本类型":["34.18","101.0"],"引用类型":["34.19"],"var":["35.1"],"let":["35.2"],"暂时性死区":["35.3"],"全局声明":["35.4"],"条件声明":["35.5"],"const":["35.7"],"函数声明提升与":["35.8"],"bom":["36.0","37.0","39.0","40.0","41.0","42.0"],"常见操作":["36.1"],"示例":["36.2","37.2","39.2","40.2","41.2","42.2","54.2","146.1","147.1","148.1","149.1","163.2","163.5","163.11"],"常见方法":["37.1"],"常见属性和方法":["39.1","42.1"],"常见属性":["40.1","41.1"],"ajax简介":["43.1"],"封装":["43.8","70.2","98.0"],"轮播图":["44.0"],"代码实现":["44.1"],"创建闭包":["45.1"],"捕获外部变量":["45.2"],"保护数据":["45.3"],"实际用途":["45.4"],"浅拷贝":["46.1"],"深拷贝":["46.2"],"什么是函数柯里化":["47.1"],"函数柯里化的优点和应用场景":["47.2"],"实现函数柯里化的方法":["47.3"],"节流":["48.1"],"定义":["48.2","48.5"],"其他写法":["48.3"],"防抖":["48.4"],"立即执行":["48.6"],"用法":["48.7"],"数组去重":["49.0"],"event":["50.0"],"异步任务分为":["50.2"],"事件循环顺序":["50.3"],"例子":["50.5"],"数组扁平化":["51.0"],"处理":["52.2"],"promise":["52.3","52.4"],"原型":["53.1","74.1"],"原型链":["53.2","74.2"],"原型对象":["53.3"],"原型继承":["53.4"],"原型继承与传统继承的区别":["53.10"],"使用原型的最佳实践":["53.14"],"详解数组中的":["54.0"],"语法如下":["54.1"],"全局作用域":["55.1"],"局部作用域":["55.2"],"作用域链":["55.3"],"词法作用域":["55.4"],"dom":["56.0","57.2","57.3","58.0","59.0","60.0","61.0"],"插入节点":["56.1"],"删除节点":["56.2"],"查找节点":["56.3"],"父子关系":["56.4"],"兄弟关系":["56.5"],"概念":["57.1"],"document":["57.4"],"事件":["58.1"],"事件监听":["58.2"],"事件移除":["58.3"],"事件类型":["58.4"],"鼠标事件":["58.5"],"键盘事件":["58.6"],"焦点事件":["58.7"],"文本框输入事件":["58.8"],"事件对象":["58.9"],"事件冒泡和事件捕获":["58.10"],"常见事件类型":["58.11"],"事件委托":["58.12"],"创建元素":["59.1"],"设置元素属性和内容":["59.2"],"操作元素的父子关系":["59.3"],"样式操作":["60.1"],"类操作":["60.2"],"获取元素":["61.1"],"修改元素":["61.2"],"设置":["62.1"],"获取":["62.2"],"删除":["62.3"],"存储数据":["63.1","64.1"],"获取数据":["63.2","64.2"],"更新数据":["63.3","64.3"],"删除数据":["63.4","64.4"],"清除所有数据":["63.5","64.5"],"内置对象":["65.0","67.0","68.0","69.0"],"date":["65.1","66.7"],"创建日期":["65.2"],"设置日期":["65.3"],"时间戳":["65.4"],"两个日期比较":["65.5"],"math":["66.8","67.3","67.4","67.5","67.6","67.7","67.8","67.9","67.10","67.11","67.12","67.13","67.14"],"regexp":["66.9"],"什么是":["69.1","80.1","81.1","82.1","124.1","138.1"],"正则表达式基础语法":["69.2"],"字面量形式":["69.3"],"构造函数形式":["69.4"],"元字符":["69.5"],"正则表达式修饰符":["69.6"],"常用的正则表达式模式":["69.7"],"正则表达式方法":["69.8"],"正则表达式的分组和捕获":["69.9"],"正则表达式标志":["69.10"],"应用场景":["69.11"],"继承":["70.0","70.1","102.2","106.3"],"多态":["70.3"],"类和构造函数":["71.0"],"构造函数":["71.1"],"类":["71.2","102.0"],"是什么":["72.1","152.1","161.1"],"特点":["72.2","152.2"],"实例对象与方法":["73.0"],"利用":["73.2"],"利用字面量创建对象":["73.3"],"利用构造函数创建对象":["73.4"],"常用方法":["73.5"],"使用原型的好处":["74.3"],"this":["76.0","76.2"],"执行期上下文":["76.1"],"es5":["76.3"],"改变函数内部的":["76.5"],"call":["76.6","76.7","76.8"],"apply":["76.9","76.10","76.11","76.12"],"bind":["76.13","76.14"],"react":["77.0","77.2","77.21","77.22","78.0","79.0","80.0","81.0","81.2","82.0","83.0","84.0"],"简介":["77.1","78.1","85.1"],"核心概念":["77.7","87.1"],"方式一":["77.23"],"方式二":["77.24"],"jsx":["78.2","78.9","78.13","78.16","78.18","78.19","78.20","78.21","78.22"],"基本语法规则":["78.3"],"函数组件":["78.10"],"类组件":["78.11"],"组件的使用":["78.12"],"使用三元表达式":["78.15"],"生命周期阶段":["79.1"],"组件创建阶段":["79.2"],"constructor":["79.3"],"static":["79.4","79.8","102.8"],"render":["79.5"],"componentdidmount":["79.6"],"组件更新阶段":["79.7"],"shouldcomponentupdate":["79.9"],"getsnapshotbeforeupdate":["79.10"],"componentdidupdate":["79.11"],"组件销毁阶段":["79.12"],"componentwillunmount":["79.13"],"props":["80.2","80.6","80.12","80.13","80.14"],"默认":["80.15"],"安装":["81.8","85.3","97.2","105.7","124.2","126.1"],"嵌套路由":["81.13"],"路由参数":["81.14"],"路由链接和导航":["81.15"],"state":["82.2","82.6","82.7"],"什么是列表渲染":["83.1"],"条件渲染列表元素":["83.3"],"列表渲染和数据来源":["83.4"],"添加列表项":["83.5"],"列表渲染的最佳实践":["83.6"],"什么是条件渲染":["84.1"],"使用三元表达式实现条件渲染":["84.3"],"使用逻辑与":["84.4"],"使用条件运算符实现条件渲染":["84.5"],"条件渲染的最佳实践":["84.6"],"vue":["85.0","86.0","88.0"],"开始":["85.2"],"第一个":["85.4"],"数据绑定":["85.5"],"插值表达式":["85.6"],"指令":["85.7"],"条件渲染":["85.8"],"v":["85.9","85.10","85.12","91.17"],"列表渲染":["85.11"],"事件处理":["85.13"],"表单输入绑定":["85.14"],"组件":["85.15"],"定义组件":["85.16"],"使用组件":["85.17"],"生命周期钩子":["85.18"],"vuex":["87.0"],"优点":["87.2","105.5"],"mutations":["87.4"],"actions":["87.5"],"getters":["87.6"],"vue2响应式原理":["88.1"],"vue3响应式原理":["88.2"],"vue3":["89.0","90.0","91.0","94.0","110.0","147.4","149.4"],"setup":["89.1"],"ref":["89.2"],"ref全家桶":["89.3"],"isref":["89.4"],"shallowref":["89.5"],"triggerref":["89.6"],"customref":["89.7"],"reactive全家桶":["89.8"],"readonly":["89.9","102.7"],"shallowreactive":["89.10"],"to系列全家桶":["89.11"],"toref":["89.12"],"torefs":["89.13"],"toraw":["89.14"],"computed":["89.15"],"watch":["89.16"],"watcheffect":["89.21"],"清除副作用":["89.22"],"停止监听":["89.23"],"配置选项":["89.24"],"生命周期":["89.25"],"自定义指令":["89.26"],"vue3指令的钩子函数":["89.27"],"在setup内定义局部指令":["89.28"],"生命周期钩子参数详解":["89.29"],"案列":["89.30"],"自定义hooks":["89.31"],"通信方式":["90.1"],"注册":["91.1"],"全局组件":["91.2"],"批量注册全局组件":["91.4"],"局部组件":["91.5"],"父子组件传参":["91.6"],"插槽":["91.7"],"匿名插槽":["91.8"],"具名插槽":["91.9"],"作用域插槽":["91.10"],"动态插槽":["91.11"],"异步组件":["91.12"],"suspense":["91.13"],"teleport":["91.14"],"keep":["91.15"],"provide":["91.16"],"创建vue3项目":["92.0"],"安装或者升级":["92.2"],"保证":["92.3"],"创建项目":["92.4"],"认识vue3":["93.0"],"defineprops":["94.1"],"defineemits":["94.2"],"defineoptions":["94.3"],"defineslots":["94.4"],"前端导航":["96.0"],"常用工具":["96.2","127.2"],"axios":["97.0"],"什么是axios":["97.1"],"拦截器":["97.4"],"错误处理":["97.5"],"相关文章":["98.8"],"git基本命令使用":["99.0"],"账户配置":["99.1"],"本地基本操作":["99.2"],"初始化本地库":["99.3"],"查看状态":["99.4"],"添加暂存区":["99.5"],"提交本地库":["99.6"],"比较差异":["99.7"],"查看日志信息":["99.8"],"分支命令":["99.9"],"创建分支":["99.10"],"查看本地分支":["99.11"],"删除分支":["99.12"],"切换分支":["99.13"],"合并分支":["99.14"],"版本穿梭与回滚":["99.15"],"修改":["99.16"],"远程仓库交互":["99.17"],"git":["99.18","99.19","99.20","99.21"],"git安装":["100.0"],"tortoisegit安装":["100.7"],"字符串类型":["101.1","113.3"],"数字类型":["101.2"],"布尔类型":["101.3"],"数组":["101.4"],"元组":["101.5"],"枚举":["101.6"],"any":["101.7"],"void":["101.8"],"never":["101.10","101.11"],"联合类型":["101.12"],"交叉类型":["101.13"],"类型断言":["101.14"],"基本实例":["102.1"],"类的修饰符":["102.3"],"默认为":["102.4"],"理解":["102.5","102.6"],"interface":["102.9"],"存储器":["102.10"],"抽象类":["102.11"],"函数":["103.0"],"函数的类型":["103.1"],"可选参数":["103.2"],"默认参数":["103.3"],"剩余参数":["103.4"],"函数重载":["103.5"],"泛型":["104.0"],"函数泛型":["104.1"],"给函数加上类型":["104.2"],"使用泛型优化":["104.3"],"多个泛型参数的函数":["104.4"],"泛型接口":["104.5"],"泛型类":["104.6"],"泛型约束":["104.7"],"初识typescript":["105.0"],"ts是什么":["105.1"],"ts和js的关系":["105.2"],"ts和js的区别":["105.3"],"typescript的优缺点":["105.4"],"缺点":["105.6"],"监视编译和在node下运行typescript":["105.8"],"接口和对象类型":["106.0"],"对象的类型":["106.1"],"重名interface":["106.2"],"可选属性":["106.4"],"任意属性":["106.5"],"只读属性":["106.6"],"添加函数":["106.7"],"对象类型":["107.0"],"tsconfig":["108.0"],"类型推论":["109.0","109.1"],"类型别名":["109.2"],"nginx":["111.0"],"nginx部署项目":["111.1"],"mysql":["112.0","113.0","116.0"],"管理数据库和表的命令":["112.1"],"数据操作命令":["112.2"],"授权和权限管理命令":["112.3"],"整数类型":["113.1"],"浮点数类型":["113.2"],"日期和时间类型":["113.4"],"其他常用类型":["113.5"],"数据库概述":["114.0"],"mysql介绍":["114.1"],"安装mysql":["115.0"],"express":["118.0","118.1","118.4","118.5","122.11","122.14"],"基本使用":["118.2"],"托管静态资源":["118.3"],"全局中间件":["118.6"],"局部中间件":["118.7"],"中间件分类":["118.8"],"cors":["118.9","118.10","118.11","118.12","118.13"],"简单请求":["118.14"],"预检请求":["118.15"],"nodejs":["119.0","119.2","121.4"],"初识":["119.1","152.0","162.0"],"nodejs内置模块":["120.0"],"fs":["120.1"],"读取文件":["120.2"],"简单文件读取":["120.3"],"流式文件读取":["120.4"],"写入文件":["120.5"],"简单文件写入":["120.6"],"流式文件写入":["120.7"],"buffer":["120.8"],"路径动态拼接问题":["120.9"],"其它操作":["120.10"],"path":["120.11"],"路径拼接":["120.12"],"获取路径中文件名":["120.13"],"获取路径中文件扩展名":["120.14"],"http":["120.15"],"创建基本":["120.16"],"实现简陋路由效果":["120.17"],"模块化":["121.0"],"基本概念":["121.1"],"什么是模块化":["121.2"],"模块化的好处":["121.3"],"node":["121.5","121.6","122.1"],"模块作用域的成员":["121.7"],"commonjs":["121.8"],"模块加载机制":["121.9"],"内置模块加载":["121.10"],"自定义模块加载":["121.11"],"第三方模块加载":["121.12"],"目录作为模块加载":["121.13"],"npm":["121.14","121.16","123.0","124.0"],"包":["121.15"],"通过切换源解决":["121.17"],"开发包":["121.18"],"模块的加载机制":["121.19"],"内置模块的加载机制":["121.20"],"自定义模块的加载机制":["121.21"],"第三方模块的加载机制":["121.22"],"目录作为模块":["121.23"],"数据库和身份认证":["122.0"],"配置":["122.2"],"操作":["122.3"],"web":["122.4"],"服务端渲染":["122.5"],"前后端分离":["122.6"],"如何选择":["122.7"],"身份认证":["122.8"],"session":["122.9","122.10"],"jwt":["122.12","122.13"],"常用命令":["124.3"],"package":["124.4"],"使用依赖项":["124.5"],"开发和发布包":["124.6"],"发布包到":["125.0"],"步骤":["125.1","125.2","125.3","125.4","125.5","125.6","125.7"],"yarn":["126.0"],"驴友攻略":["127.0"],"重庆":["128.0"],"第一天":["128.1","130.1","131.1","132.1","134.1","135.1","136.1","137.1"],"第二天":["128.2","130.2","131.2","132.2","134.2","135.2","136.2","137.2"],"第三天":["128.3","130.3","131.3","132.3","134.3","135.3","136.3","137.3"],"第四天":["128.4","130.4","131.4","134.4","135.4","136.4","137.4"],"特色美食":["128.5","136.5"],"广州":["129.0"],"南京":["130.0"],"第五天":["130.5","131.5","135.5","137.5"],"上饶":["131.0"],"南昌":["132.0"],"景德镇":["133.0"],"杭州":["134.0"],"武汉":["135.0"],"长沙":["136.0"],"特色美食街区":["136.6"],"厦门":["137.0"],"初始":["138.0"],"canvas":["139.0","140.0","141.0","142.0","143.0","144.0","145.0"],"属性方法":["141.2"],"绘制图形":["144.1"],"绘制矩形":["144.2"],"绘制圆弧":["144.3","158.4"],"绘制线段":["144.4","158.5"],"绘制图像":["144.5"],"绘制文本":["144.6"],"绘制贝塞尔二次曲线":["145.1"],"绘制贝塞尔三次曲线":["145.2"],"刮刮乐":["146.0"],"代码":["146.2","147.2","148.2","149.2","155.1","159.2","163.3","163.9","163.12","164.5"],"时钟":["147.0"],"梅花特效":["148.0"],"画板":["149.0"],"echarts":["150.0"],"pixijs":["151.0","153.0","154.0","156.0","157.0","158.0","160.0"],"为精灵添加事件":["151.1"],"为图形添加事件":["151.2"],"用法示例":["152.7"],"graphics":["153.2"],"添加文字":["154.1"],"使用文字作为精灵的遮罩":["154.2"],"波纹涟漪效果":["155.0"],"创建应用":["156.1"],"添加滤镜":["156.2"],"绘制椭圆":["158.1"],"绘制多边形":["158.2"],"创建圆角矩形":["158.3"],"谷歌恐龙小游戏":["159.0"],"素材图片":["159.1"],"单次添加资源":["160.1"],"一次添加多个资源":["160.2"],"svg":["161.0"],"基本图形":["161.2"],"线条":["161.3"],"矩形":["161.4"],"圆形":["161.5"],"椭圆":["161.6"],"多边形":["161.7"],"折线":["161.8"],"路径":["161.9"],"渲染场景和物体":["163.0"],"渲染第一个场景和物体":["163.1"],"轨道控制器查看物体":["163.4"],"导入轨道控制器":["163.6"],"创建轨道控制器":["163.7"],"每一帧根据控制器更新画面":["163.8"],"坐标轴辅助器":["163.10"],"物体的缩放":["164.0"],"缩放":["164.1"],"位移":["164.2"],"旋转":["164.3"],"效果":["164.4"],"vitepress":["165.0"],"初始化项目":["165.2"],"npx":["165.3"],"本地运行":["165.4"],"目录结构":["165.6"],"配置导航栏部分":["165.9"],"配置侧边栏部分":["165.10"]},{"0":["11.1","17.12","28.9","34.15","34.16","35.6","65.1","89.1","113.1","142.1","147.3"],"1":["5.10","6.1","6.2","6.3","6.4","6.6","6.18","6.22","6.27","6.30","7.1","9.3","11.1","13.4","14.2","16.15","17.5","17.18","20.5","20.21","21.11","21.16","22.2","28.28","29.1","32.3","32.10","32.12","32.13","33.2","33.5","33.6","34.14","43.3","45.4","47.4","48.3","48.7","49.1","50.3","51.1","53.6","53.11","53.15","54.3","54.9","65.1","68.1","68.2","74.3","76.3","76.8","77.3","77.8","78.4","79.1","80.3","80.7","81.3","81.10","82.3","83.6","84.6","86.1","87.1","87.3","89.1","89.17","90.2","90.4","92.6","98.1","99.1","99.7","99.8","99.14","99.15","99.16","99.18","99.19","99.21","100.1","110.2","110.3","110.4","110.5","110.7","110.8","110.11","111.1","116.1","117.1","118.8","121.18","122.2","122.3","122.11","122.14","125.1","125.5","128.4","128.5","130.2","130.4","132.2","132.4","135.3","136.3","136.5","136.6","137.2","137.3","137.4","138.3","138.4","138.5","139.1","142.1","152.3","157.1","161.1","165.7"],"2":["6.3","6.5","6.6","6.7","6.8","6.9","6.10","6.11","6.12","6.13","6.14","6.15","6.16","6.19","6.23","6.28","11.2","13.4","14.2","20.21","21.11","21.16","29.1","32.12","32.13","33.2","43.4","47.5","49.2","50.3","51.2","53.7","53.12","53.16","54.3","54.4","68.2","77.4","77.9","78.5","80.4","80.8","81.4","81.11","82.4","86.2","87.3","88.1","88.2","89.18","90.3","90.5","92.7","98.2","100.2","110.4","110.8","110.9","110.10","110.11","110.12","116.2","117.2","118.8","121.18","122.3","122.11","122.14","125.2","132.4","136.6","138.4","139.2","142.2","152.4","157.2","165.8"],"3":["6.4","6.8","6.17","6.18","6.19","6.20","6.24","13.4","14.2","20.21","32.3","32.12","43.5","47.6","49.3","51.3","53.8","53.13","53.17","54.3","54.5","77.5","77.10","78.6","80.5","80.9","81.5","81.12","82.5","86.3","88.2","89.19","90.6","94.0","98.3","100.3","113.2","116.3","117.3","125.3","132.4","138.5","139.3","142.3","152.5","157.3"],"4":["6.9","6.21","6.22","6.23","6.24","6.25","6.33","43.6","49.4","51.4","53.9","53.18","54.6","77.6","77.11","78.7","80.10","81.6","86.4","89.20","90.7","98.4","100.4","116.4","117.4","125.4","137.4","139.4","142.4","152.6","157.4"],"5":["6.10","6.26","6.27","6.28","17.5","49.5","54.3","54.7","77.12","78.8","80.11","81.7","86.5","90.8","98.5","100.5","110.9","116.5","117.5","117.6","125.5","139.5"],"6":["6.11","6.29","6.30","6.31","6.32","6.33","49.6","54.8","77.13","86.6","90.9","98.6","100.6","110.10","116.6","117.6","125.6"],"7":["6.12","77.14","86.7","90.10","110.11","116.7","117.6","125.7"],"8":["6.13","77.15","86.8","90.11","110.12","116.8"],"9":["6.14","77.16","86.9","90.12","117.6","137.4"],"10":["6.15","29.6","77.17","86.10"],"11":["6.16","77.18","86.12"],"12":["77.19"],"13":["77.20"],"14":["160.1"],"15":["160.2"],"18":["17.7"],"19":["160.1"],"26":["160.2"],"28":["76.8"],"30":["137.4"],"31":["65.1"],"50":["144.3"],"52":["137.2"],"100":["35.1","144.4"],"123":["0.1","32.5"],"127":["113.1"],"128":["113.1"],"200":["144.3","145.1"],"300":["144.3","145.1","147.3"],"400":["146.2","147.3"],"404":["111.0"],"500":["48.3"],"600":["141.1","146.2","147.3"],"800":["147.3"],"1912":["130.4"],"1970":["65.4"],"1997":["13.4"],"1998":["13.4"],"2013":["110.6"],"2050":["65.3"],"12345":["97.5"],"选择器":["4.0","4.4"],"选择页面所有元素":["4.1"],"通过标签名选择元素":["4.2"],"通过类名选择元素":["4.3"],"html":["4.5","4.9","4.14","6.22","6.23","6.24","6.25","8.2","9.0","9.2","23.10","23.11","24.4","25.11","25.13","26.3","26.4","26.5","27.1","35.5","56.4","57.2","77.23","85.17","91.9","122.5","141.1","146.2","149.3","161.3","161.4","161.5","161.7","161.8","161.9","165.7"],"p":["4.5","25.2","32.7","32.10"],"class":["4.5","9.2","12.0","12.1","53.8","56.4","71.2","80.10","80.11","102.1","102.6","102.8","104.6","149.4"],"good":["4.5"],"作用":["4.6","58.5"],"选中多个选择器对应的元素":["4.6"],"在所有后代节点中选":["4.7"],"只在亲儿子中选":["4.8"],"选择所有指定元素的":["4.9"],"相邻":["4.9"],"后一个兄弟节点":["4.9"],"h1":["4.9","25.1"],"根据元素状态或所处":["4.10"],"css":["4.11","4.14","8.5","8.6","9.1","9.3","10.0","11.1"],"按这个顺序声明":["4.11"],"c3":["4.12","4.13","4.14"],"选择符":["4.12","4.13"],"含义":["4.12","4.13"],"e":["4.12","4.13"],"first":["4.12","14.6"],"child":["4.12","91.8"],"第一个子元素":["4.12"],"last":["4.12"],"最后一个子元素":["4.12"],"att":["4.13"],"选择具有":["4.13"],"伪元素选择器利用":["4.14"],"创建新标签元素":["4.14"],"而不需要":["4.14"],"标签":["4.14","23.0","26.0","78.4"],"从而简化":["4.14"],"结构":["4.14"],"before":["4.14"],"和":["4.14","12.6","20.22","25.5","25.6","25.14","25.15","29.11","29.12","30.3","34.16","77.22","79.4","85.9","87.4","89.2","89.7","99.14","101.5","101.9","102.8","102.10","123.0"],"after":["4.14"],"一篇搞清伪类和伪元素":["4.15"],"布局":["5.0","5.1","6.0","8.7"],"灵活的网页布局解决方案":["5.0"],"flex":["5.1","5.2","5.4","5.6","5.7","5.8","5.9","5.10","8.7"],"要启用":["5.1"],"布局具有一个主轴和一个交叉轴":["5.2"],"默认情况下":["5.2","5.4","58.10"],"主轴是水平方向":["5.2"],"交叉轴是垂直方向":["5.2"],"可以使用":["5.3","5.9","12.3","32.9","36.1","62.1","62.2","63.1","63.2","63.4","63.5","63.6","64.1","64.2","64.4","64.5","64.6","82.4"],"justify":["5.3","5.10","6.13","6.14","6.15"],"content":["5.3","6.14","9.1"],"属性控制主轴上的对齐方式":["5.3"],"align":["5.3","5.9","23.11"],"items":["5.3","6.13"],"属性控制交叉轴上的对齐方式":["5.3"],"项目会在一行中排列":["5.4"],"flow":["5.5"],"是":["5.5","32.2","38.0","57.4","78.22","80.1","80.14","161.1"],"使用":["5.6","8.1","8.6","11.2","12.1","12.5","12.6","15.7","15.8","15.9","15.11","15.12","15.13","15.14","15.20","19.2","22.5","28.2","31.6","31.7","34.15","34.16","35.6","46.2","49.1","49.3","49.4","49.5","49.6","51.1","51.3","59.1","59.2","59.3","60.1","60.2","61.1","61.2","69.4","77.24","83.6","85.13","85.14","86.2","86.5","98.6","102.6","106.4","116.6","116.7","120.13","121.21","122.14","124.5","138.6","138.7","141.0"],"容器":["5.8"],"在多行":["5.9"],"容器中":["5.9"],"布局非常适合实现常见的网页布局需求":["5.10"],"例如":["5.10","24.2","69.11","80.3"],"居中对齐":["5.10"],"通过":["5.10","31.3","43.4","43.5","61.1","76.8","76.11","103.2","118.3","118.6","118.8"],"理解":["6.1","89.1"],"grid":["6.1","6.3","6.6","6.7","6.8","6.10","6.11","6.12","6.16","6.18","6.19","6.20","6.22","6.23","6.24","6.25","8.8"],"网格容器与网格项":["6.2"],"行与列":["6.3"],"布局的核心是行和列":["6.3"],"网格线与网格跨度":["6.4"],"在":["6.4","14.2","15.6","16.3","17.10","30.0","46.2","47.3","48.0","69.2","70.2","70.3","71.0","71.1","71.2","74.1","76.3","78.4","78.5","78.18","79.3","79.9","79.11","79.13","81.10","82.1","82.3","82.6","82.7","83.2","83.3","83.4","83.5","84.1","84.2","87.1","89.0","89.31","90.2","90.6","90.8","91.2","91.13","103.4","110.10","110.12","165.1","165.7","165.9"],"template":["6.6","6.7","6.8","90.12","94.1","94.2","94.4","149.4"],"columns":["6.6"],"areas":["6.7"],"column":["6.10","6.16"],"gap":["6.10"],"auto":["6.11"],"网格轨道的大小和增长":["6.18"],"网格轨道":["6.18"],"网格模板的定义":["6.19"],"通过使用网格模板":["6.19"],"响应式设计与媒体查询":["6.20"],"布局与响应式设计完美结合":["6.20"],"通过使用媒体查询":["6.20"],"media":["6.20"],"简单网页布局":["6.22"],"布局可以用于创建简单的网页布局":["6.22"],"如标题":["6.22"],"导航栏和内容区域":["6.22"],"复杂网页布局":["6.23"],"布局可以应用于创建复杂的网页布局":["6.23"],"如新闻网站的首页布局":["6.23"],"doctype":["6.23","6.24","6.25","57.2"],"布局的嵌套与组合":["6.24"],"布局可以嵌套使用":["6.24"],"从而创建更加复杂和多样化的布局":["6.24"],"网格的动态调整":["6.25"],"布局的一个重要特点是网格项目的动态调整":["6.25"],"网格项可以根据内容的大小自动调整":["6.25"],"也可以通过调整网格容器的大小来实现动态布局":["6.25"],"lang":["6.25","57.2"],"en":["6.25"],"head":["6.25","118.14"],"meta":["6.25"],"最佳实践与优化建议":["6.33"],"一般情况下":["7.0"],"权重":["7.1"],"tip":["7.1","15.28","54.9","58.2","73.4","128.1","128.2","128.3","128.4","128.5","130.1","130.2","130.3","130.4","130.5","131.1","131.2","131.3","131.4","131.5","132.1","132.2","132.3","132.4","134.1","134.2","134.3","134.4","135.1","135.2","135.3","135.4","135.5","136.1","136.2","136.3","136.4","136.5","136.6","137.1","137.2","137.3","137.4","137.5"],"详细描述":["7.1"],"计算方式":["7.1"],"每个选择器":["7.1"],"都可以算出一组权重":["7.1"],"格式为":["7.1","113.4"],"a":["7.1","16.14","16.15","16.16","20.21","25.3","27.1","32.3","32.12","33.3","33.5","33.6","34.18","69.7","92.4","99.14"],"水平垂直居中":["8.0"],"line":["8.1","158.5","161.3"],"height":["8.1","11.1","146.2","160.2"],"div":["8.2","9.2","23.11","25.7","90.12","91.9","94.1","94.2","146.2","149.4"],"margin":["8.3"],"父元素使用":["8.3"],"box":["8.5","8.6"],"transform":["8.6","139.4","164.4"],"width":["8.6","9.1","10.0","11.1","41.1","141.1","146.2","160.1","160.2"],"文本溢出隐藏":["9.0"],"webkit":["9.2","10.0"],"内核":["9.2"],"text":["9.2","9.3","23.11"],"这里是多行文本内容":["9.2"],"兼容较好":["9.3"],"滚动条":["10.0"],"scrollbar":["10.0"],"纵向":["10.0"],"8px":["10.0"],"绘制三角形":["11.0"],"使用边框":["11.1"],"朝上的三角形":["11.1"],"arrow":["11.1"],"up":["11.1"],"border":["11.1"],"clip":["11.2"],"path":["11.2","120.3","120.10","120.12","120.13","120.14","161.9"],"关键字可以定义一个类":["12.1"],"通过类创建对象时":["12.2"],"需要使用":["12.2"],"new":["12.2","14.6","16.15","28.1","52.1","52.5","65.2","71.1","73.2","73.4","158.2","158.3","158.4","158.5","160.1","160.2"],"es6":["12.3","14.2","15.23","17.14","19.1","20.1","20.6","22.0","32.3","53.8","71.2","108.0"],"的类支持继承":["12.3"],"子类可以重写继承自父类的方法":["12.4"],"js":["12.4","12.6","14.4","14.5","14.6","15.16","15.17","15.18","15.19","15.21","15.22","16.12","16.13","16.14","16.15","16.16","17.5","17.6","17.10","17.15","17.16","18.3","18.13","20.1","20.6","20.21","21.3","21.4","21.5","21.6","21.9","21.10","21.12","21.16","28.15","28.21","28.24","28.32","29.2","29.3","29.5","29.6","30.3","30.8","30.11","30.12","33.11","34.2","34.14","34.18","34.19","35.1","35.2","35.3","35.6","35.8","36.2","40.2","41.2","42.2","43.8","43.9","48.3","48.6","48.7","49.0","49.2","49.6","50.3","51.0","51.4","53.2","54.1","54.3","54.4","54.5","54.6","54.7","54.8","58.6","58.7","59.3","60.1","60.2","65.5","73.3","73.6","73.8","73.18","76.8","77.22","77.23","81.11","81.13","81.14","81.15","85.0","85.3","85.4","85.7","89.4","89.6","89.17","97.3","97.5","98.3","98.4","98.5","98.6","103.1","110.8","117.4","118.2","118.4","118.6","118.7","118.12","119.1","120.3","120.4","120.6","120.7","120.12","120.14","120.16","120.17","121.5","121.6","121.12","121.15","122.3","139.4","142.2","142.3","143.0","144.2","144.3","144.4","144.5","145.1","145.2","151.1","151.2","152.7","153.2","154.1","154.2","156.1","156.2","157.1","157.3","158.1","158.2","158.3","158.4","158.5","160.1","160.2","162.0","163.6","163.7","163.8","164.1","164.2","164.3","165.9","165.10"],"static":["12.5","118.3"],"关键字定义静态方法":["12.5"],"静态方法属于类本身":["12.5"],"setter":["12.6"],"get":["12.6","14.2","89.7","97.3","97.5","98.5","102.10","118.8","118.14","118.15"],"set":["12.6","14.2","16.1","16.3","16.4","16.6","16.8","16.10","16.11","16.12","16.15","21.5","21.15","29.10","49.1"],"关键字定义属性的读取器和设置器":["12.6"],"的介绍":["13.0"],"入门教程":["13.1"],"简介":["13.2","86.1"],"简称":["13.2","13.3"],"es":["13.2","13.3"],"与":["13.3","89.15","90.9","90.10","101.11","123.0","165.11"],"javascript":["13.3","15.1","15.2","17.3","17.7","17.12","17.20","19.2","19.3","19.5","20.3","20.4","20.9","20.13","20.14","20.15","20.17","20.18","22.2","22.3","22.5","22.8","22.9","22.11","31.1","31.2","31.4","32.2","32.3","32.4","32.5","32.7","32.8","32.10","32.12","32.13","33.13","34.10","37.2","39.2","45.2","45.3","46.2","47.1","47.4","47.5","47.6","50.1","52.5","53.1","53.2","53.3","53.4","53.10","55.1","55.3","55.4","57.4","58.12","68.1","69.8","69.10","69.11","70.2","70.3","71.0","71.1","71.2","72.1","74.1","77.1","77.9","78.1","84.2","84.3","84.4","85.16","101.4","101.6","103.4","105.3","162.0"],"的关系":["13.3"],"版本发布记录":["13.4"],"以下是每个":["13.4"],"版本的主要内容概述":["13.4"],"es1":["13.4"],"第一个":["13.4","89.29"],"版本":["13.4"],"定义了基本的语法和数据类型":["13.4"],"包括变量":["13.4"],"操作符":["13.4","106.4"],"函数和控制结构等":["13.4"],"es2":["13.4"],"对":["13.4"],"进行了一些修订":["13.4"],"没有引入大的新功能":["13.4"],"es3":["13.4","108.0"],"数据结构":["14.0","16.0"],"map":["14.1","14.2","14.6","21.4","29.10","49.6","78.17","83.2","83.3","83.6"],"中":["14.2","17.10","46.2","48.0","70.2","70.3","71.0","74.1","78.18","79.3","79.9","79.11","79.13","82.1","82.3","82.6","82.7","83.2","83.3","83.4","83.5","84.2","87.1","91.13"],"数据结构提供了以下常用的方法":["14.2"],"key":["14.2","83.6"],"value":["14.2","16.3","16.5","16.7","68.1","89.2","89.5","89.29"],"向":["14.2"],"中添加键值对":["14.2"],"如果键已存在":["14.2"],"则更新对应的值":["14.2"],"获取指定键对应的值":["14.2"],"如果键不存在则返回":["14.2"],"undefined":["14.2","17.5","35.1","101.9"],"has":["14.2"],"var":["14.4","14.5","14.6","16.12","16.13","16.14","16.15","16.16","17.10","30.8","32.3","32.4","32.7","32.10","32.12","32.13","34.19","35.2","35.6","35.8","54.4","54.8","65.5","73.3","120.4","147.3"],"kvarray":["14.4"],"key1":["14.4"],"mymap1":["14.5"],"模块化":["15.0"],"随着前端技术的不断发展":["15.1"],"在传统的":["15.2"],"在模块中定义的变量":["15.3"],"模块化将代码分割成多个小块":["15.4"],"模块化使得代码可以被多个模块共享和复用":["15.5"],"export":["15.9","15.18","98.5"],"关键字导出一个类":["15.9"],"通过使用":["15.10"],"import":["15.11","15.12","15.13","81.11","81.13","81.14","81.15","83.5","89.4","89.6","110.10","153.2","154.1","156.1","160.1","160.2"],"关键字导入其他模块中的类":["15.13"],"as":["15.14","81.15","153.2","154.1","156.1","160.1","160.2"],"来导入整个模块的内容":["15.14"],"并将其绑定到一个变量上":["15.14"],"除了命名导出":["15.15"],"module2":["15.16","15.17","15.18"],"default":["15.18","108.0"],"一个模块可以同时有命名导出和默认导出":["15.19"],"module3":["15.19"],"module4":["15.21","15.22"],"除了静态导入外":["15.23"],"还引入了动态导入":["15.23"],"可以在代码运行时根据条件来导入模块":["15.23"],"在使用":["15.24","83.6","120.9"],"模块文件必须以":["15.25"],"在浏览器环境中":["15.26"],"模块中的代码在严格模式下运行":["15.27"],"导入和导出语句只能位于模块的顶层":["15.28"],"不能嵌套在其他块中":["15.28"],"方法":["16.3","16.4","16.5","16.6","16.7","16.8","16.9","20.22","59.2","59.3","60.2","61.1","65.1","76.9","76.13","76.14","78.17","120.13"],"移除":["16.4"],"移除值为":["16.5"],"的元素":["16.5"],"并返回一个布尔值来表示是否移除成功":["16.5"],"返回一个新的迭代器对象":["16.6","16.8"],"该对象包含":["16.6","16.8"],"对象中的按插入顺序排列的所有元素的值的":["16.6"],"返回一个布尔值":["16.7"],"表示该值在":["16.7"],"属性":["16.10","23.7","61.2","78.5","83.6"],"返回":["16.10"],"array":["16.12","21.0","21.3","54.1"],"转":["16.12"],"myset":["16.12"],"函数的扩展":["17.0"],"调用函数的时候传参了":["17.2"],"之前的默认值实现方式":["17.3"],"const":["17.3","17.7","17.12","17.15","20.1","20.3","20.4","20.6","20.9","20.15","20.17","20.18","20.21","22.2","22.3","22.8","22.11","28.21","47.6","49.0","49.2","51.4","52.5","54.3","58.6","58.7","76.8","89.28","117.4","118.2","118.4","118.6","118.7","120.12","120.16","120.17","122.3","151.2","153.2","154.2","156.1","156.2","158.1","158.2","158.3","158.4","158.5","160.1","160.2"],"multiply":["17.3"],"x":["17.3","17.5","17.6","103.5","139.2"],"y":["17.3","17.5","103.5","139.2","165.2"],"不传参数":["17.4"],"参数默认值可以与解构赋值的默认值":["17.5"],"结合起来使用":["17.5"],"function":["17.5","17.6","19.5","28.24","30.2","30.8","43.8","45.2","45.3","47.4","47.5","48.3","48.6","48.7","52.5","53.2","53.4","76.8","78.15","97.5","98.5","103.1","103.3","103.5","104.4","147.3","163.8"],"foo":["17.5","20.1","20.6","32.3","32.5"],"console":["17.5","17.7","21.16","35.2","41.2","76.8"],"log":["17.5","17.7","21.16","35.2","41.2","76.8","99.8"],"通常情况下":["17.6"],"定义了默认值的参数":["17.6"],"应该是函数的尾参数":["17.6"],"因为这样比较容易看出来":["17.6"],"到底省略了哪些参数":["17.6"],"如果非尾部的参数设置默认值":["17.6"],"实际上这个参数是没法省略的":["17.6"],"例一":["17.6","32.13"],"f":["17.6"],"接收很多参数的时候":["17.7"],"普通时候":["17.7"],"loguser":["17.7","20.18"],"username":["17.7","20.18","98.6"],"zjr":["17.7"],"age":["17.7","20.3","20.4","76.8"],"sex":["17.7"],"male":["17.7"],"需要能够记住参数的顺序":["17.7"],"如果参数较多那么需要配合文档":["17.7"],"使用不方便":["17.7"],"jerry":["17.7"],"接收一个对象作为参数":["17.7"],"不需要记住参数的顺序":["17.7"],"参数":["17.8"],"剩余语法":["17.9"],"在讲解剩余参数前":["17.10"],"我们先来看看":["17.10"],"剩余参数在函数参数中都解决了哪些问题":["17.10"],"为什么会引入剩余参数的概念":["17.10"],"es5":["17.10","17.13","20.20","71.1","108.0"],"函数经常会传入不定参数":["17.10"],"在传入不定参数时":["17.10"],"的给出的解决方案是通过":["17.10"],"arguments":["17.10","17.12"],"对象来获取函数调用时传递的参数":["17.10"],"对象不是一个数组":["17.10"],"它是一个类数组对象":["17.10"],"所谓类数组对象":["17.10"],"就是指可以":["17.10"],"通过索引属性访问元素":["17.10"],"并且":["17.10"],"拥有":["17.10"],"length":["17.10","17.12","28.2"],"属性的对象":["17.10"],"一个简单的类数组对象是长这样的":["17.10"],"箭头函数的剩余参数":["17.11"],"箭头函数的参数部分即使只有一个剩余参数":["17.11"],"作为数组的应用":["17.12"],"add":["17.12","60.2","87.3","99.5","103.1","103.5"],"args":["17.12"],"let":["17.12","21.3","21.10","21.12","28.15","28.32","29.6","33.3","34.18","35.4","35.6","35.7","48.7","54.5","54.7","97.3","98.4","98.6","101.2","101.3","101.9","152.7"],"sum":["17.12"],"for":["17.12","21.12","32.12","49.2","85.12","127.2"],"i":["17.12","29.6","35.6"],"当然此处":["17.12"],"本节结合了":["17.13"],"箭头函数的基本语法如下":["17.15"],"functionname":["17.15"],"当箭头函数没有参数或有多个参数时":["17.16"],"需要使用括号来表示参数列表":["17.16"],"this":["17.17","20.6","76.3","76.4","76.5","76.8","76.11","76.14","82.4","82.5"],"箭头函数与传统函数有一个重要的区别":["17.17"],"箭头函数没有自己的":["17.17"],"它继承自外层作用域的":["17.17"],"在传统函数中":["17.17"],"的值是在函数调用时动态确定的":["17.17"],"取决于调用方式":["17.17"],"如果箭头函数只有一个参数":["17.18"],"可以省略参数列表的括号":["17.18"],"es2017":["17.19","108.0"],"允许函数的最后一个参数有尾逗号":["17.19"],"trailing":["17.19"],"comma":["17.19"],"此前":["17.19"],"函数定义和调用时":["17.19"],"命令的参数省略":["17.20"],"语言的":["17.20"],"try":["17.20"],"字符串的常用方法":["18.0"],"操作方法":["18.1","28.5"],"这里增的意思并不是说直接增添内容":["18.2"],"用于将一个或多个字符串拼接成一个新字符串":["18.3"],"这里的删的意思并不是说删除原字符串的内容":["18.4"],"而是创建字符串的一个副本":["18.4"],"再进行操作":["18.4"],"常见的有":["18.4"],"slice":["18.4"],"substr":["18.4"],"substring":["18.4"],"这里改的意思也不是改变原字符串":["18.5"],"trimleft":["18.6"],"trimright":["18.6"],"删除前":["18.6"],"接收一个整数参数":["18.7"],"padend":["18.8"],"复制字符串":["18.8"],"如果小于指定长度":["18.8"],"则在相应一边填充字符":["18.8"],"touppercase":["18.9"],"大小写转化":["18.9"],"返回给定索引位置的字符":["18.11"],"从字符串开头去搜索传入的字符串":["18.12"],"并返回位置":["18.12"],"includes":["18.13"],"从字符串中搜索传入的字符串":["18.13"],"并返回一个表示是否包含的布尔值":["18.13"],"方法接受一个整数作为参数":["18.14"],"转换方法":["18.15","28.25"],"把字符串按照指定的分割符":["18.16"],"拆分成数组中的每一项":["18.16"],"模板匹配方法":["18.17"],"接收一个参数":["18.18","18.19"],"可以是一个正则表达式字符串":["18.18","18.19"],"也可以是一个":["18.18","18.19"],"接收两个参数":["18.20"],"第一个参数为匹配的内容":["18.20"],"第二个参数为替换的元素":["18.20"],"字符串的扩展":["19.0"],"来在模板字符串中插入变量或表达式":["19.2"],"其中":["19.2"],"中的内容会被解析并替换为实际的值":["19.2"],"使用模板字符串可以很方便地创建多行文本":["19.3"],"不需要使用":["19.3"],"n":["19.3"],"来手动添加换行符":["19.3"],"模板字符串可以嵌套在其他模板字符串中":["19.4"],"使得字符串拼接更加灵活":["19.4"],"可以在模板字符串前添加一个标签函数":["19.5"],"这个标签函数将模板字符串的各个部分解析成多个参数":["19.5"],"使得我们可以对字符串进行自定义处理":["19.5"],"tagfunc":["19.5"],"strings":["19.5"],"对象的扩展":["20.0"],"允许在大括号里面":["20.1"],"直接写入变量和函数":["20.1"],"作为对象的属性和方法":["20.1"],"这样的书写更加简洁":["20.1"],"bar":["20.1","32.3"],"baz":["20.1"],"prop":["20.3","20.4","73.11","73.20"],"值":["20.4"],"可以得到值的表达式":["20.4"],"func":["20.4","47.4","47.5","48.7"],"age2":["20.4"],"点语法是方括号语法的特殊形式":["20.5"],"关键字":["20.6","35.1","71.2","76.0","109.2"],"我们知道":["20.6","76.12"],"关键字总是指向函数所在的当前对象":["20.6"],"又新增了另一个类似的关键字":["20.6"],"指向当前对象的原型对象":["20.6"],"proto":["20.6","73.5","73.7","74.1"],"hello":["20.6","32.3","32.7"],"obj":["20.6","32.3","32.7","32.10","32.12","32.13","73.8","73.11","73.12","73.13","73.14","73.16","73.18","73.19"],"world":["20.6","32.3","32.7"],"find":["20.6"],"对象不能直接展开":["20.8"],"必须在":["20.8"],"中展开":["20.8"],"apple":["20.9","20.15"],"color":["20.9","130.1","130.2","130.3","130.4","131.1","132.2","132.4","134.1","135.3","137.2","137.3","149.3"],"红色":["20.9"],"如果展开一个空对象":["20.11"],"如果展开的不是对象":["20.12"],"则会自动将其转为对象":["20.12"],"再将其属性罗列出来":["20.12"],"如果展开运算符后面是字符串":["20.13"],"它会自动转成一个类似数组的对象":["20.13"],"因此返回的不是空对象":["20.13"],"不会展开对象中的对象属性":["20.15"],"userparam":["20.18"],"defaultperam":["20.18"],"is":["20.20","73.15","119.1"],"比较两个值是否相等":["20.20"],"只有两个运算符":["20.20"],"相等运算符":["20.20"],"和严格相等运算符":["20.20"],"它们都有缺点":["20.20"],"前者会自动转换数据类型":["20.20"],"assign":["20.21","73.5","73.6"],"方法用于对象的合并":["20.21"],"将源对象":["20.21"],"source":["20.21","23.0","140.1"],"的所有可枚举属性":["20.21"],"复制到目标对象":["20.21"],"target":["20.21","73.5","73.6","108.0"],"source1":["20.21"],"b":["20.21","32.12"],"source2":["20.21"],"c":["20.21","32.12","110.6"],"注意":["20.21","32.11","54.9"],"keys":["20.22","32.10","73.16"],"values":["20.22","73.19"],"entries":["20.22","73.8"],"返回一个数组":["20.22"],"成员是参数对象自身的":["20.22"],"不含继承的":["20.22"],"所有可遍历":["20.22"],"enumerable":["20.22"],"属性的键名":["20.22"],"方法返回一个数组":["20.22"],"属性的键值":["20.22"],"of":["21.1","29.10","29.11"],"from":["21.2","21.3","81.13","81.14","81.15","83.5","122.3","153.2","154.1","154.2","156.1","160.1","160.2"],"将类数组对象或可迭代对象转化为数组":["21.2"],"arr":["21.3","49.2","54.4"],"查找":["21.8","21.15"],"则返回符合条件的第一个元素":["21.8"],"查找索引":["21.9"],"则返回符合条件的第一个元素的索引":["21.9"],"填充":["21.10"],"覆盖":["21.11"],"开始覆盖的位置索引":["21.11"],"遍历":["21.12"],"遍历键值对":["21.12"],"遍历键名":["21.13"],"遍历键值":["21.14"],"数组是否包含指定值":["21.15"],"嵌套数组转一维数":["21.16"],"先遍历元素":["21.17"],"再对数组执行":["21.17"],"flat":["21.17"],"引入了解构赋值":["22.0"],"数组解构赋值允许我们根据数组的顺序":["22.1"],"numbers":["22.2","54.3"],"我们可以使用逗号将不需要的元素跳过":["22.3"],"如果数组元素不足以匹配变量的个数":["22.4"],"可以为变量指定默认值":["22.4"],"避免出现":["22.4"],"语法可以将剩余的数组元素赋值给一个新数组":["22.5"],"使用解构赋值":["22.6"],"可以非常简洁地交换两个变量的值":["22.6"],"无需使用第三个变量":["22.6"],"对象解构赋值允许我们根据对象的属性名":["22.7"],"person":["22.8","22.11","73.3","102.1","102.6","106.7"],"我们可以通过在解构时为变量指定新的名称":["22.9"],"来实现重命名":["22.9"],"和数组解构一样":["22.10"],"可以为对象解构赋值时":["22.10"],"为变量指定默认值":["22.10"],"对象解构也支持嵌套解构":["22.11"],"从嵌套对象中提取值":["22.11"],"音视频标签":["23.0"],"音视频标签中的资源除了可以用":["23.0"],"src":["23.0","110.12","129.0","132.0","133.0","135.0"],"属性来指定外":["23.0"],"还可以用":["23.0"],"mime":["23.1"],"format":["23.2"],"格式":["23.3"],"audio":["23.5"],"video":["23.6","25.15"],"标签的属性":["23.7"],"描述":["23.7","33.2","33.3","33.7","65.1","85.18"],"方法名":["23.8"],"音频":["23.10"],"视频":["23.11"],"style":["23.11","60.1"],"center":["23.11"],"button":["23.11","25.12","56.4","149.3"],"onclick":["23.11"],"playpause":["23.11"],"超文本标记语言":["24.0"],"的基本结构":["24.1"],"文档由一系列嵌套的":["24.1"],"标签组成":["24.1"],"一个基本的":["24.1"],"标签和元素":["24.2"],"标签用于定义网页的结构和内容":["24.2"],"它们由尖括号包围":["24.2"],"标签通常成对出现":["24.2"],"包含开始标签和结束标签":["24.2"],"tagname":["24.2"],"的新特性":["24.3"],"学习":["24.4"],"最重要的是通过实践来加深理解":["24.4"],"创建简单的网页":["24.4"],"当描述":["25.0"],"到":["25.1","65.1","113.1"],"img":["25.4","117.6","128.0","129.0","130.0","131.0","132.0","133.0","134.0","135.0","136.0","137.0"],"ul":["25.5","56.4"],"ol":["25.6"],"span":["25.8"],"table":["25.9","112.2","112.3"],"tr":["25.9"],"th":["25.9"],"br":["25.10"],"input":["25.11","58.6","58.8","149.3"],"form":["25.13"],"脚注和导航标签":["25.14"],"header":["25.14"],"footer":["25.14"],"nav":["25.14"],"block":["26.1"],"level":["26.1"],"elements":["26.1","26.2"],"块级标签通常用于创建页面的大型结构和组织":["26.1"],"它们会单独占据一行":["26.1"],"inline":["26.2"],"内联标签用于包裹文本的一部分":["26.2"],"它们不会独占一行":["26.2"],"标签可以嵌套在其他标签中":["26.3"],"标签可以包含属性":["26.4"],"属性用于为标签提供额外的信息或设置":["26.4"],"html5":["26.5"],"允许开发者创建自定义的标签":["26.5"],"这些标签可能在":["26.5"],"type":["27.1","109.2","149.3"],"password":["27.1"],"浏览器自动填充账号和密码":["27.1"],"数组":["28.0"],"创建数组有两种方式":["28.1"],"利用":["28.1"],"数组的长度":["28.2"],"数组名":["28.2"],"可以访问数组元素的数量":["28.2"],"数组长度":["28.2"],"数组的索引":["28.2"],"索引":["28.2"],"下标":["28.2"],"下面前三种是对原数组产生影响的增添方法":["28.6"],"方法接收任意数量的参数":["28.7"],"在数组开头添加任意多个值":["28.8"],"传入三个参数":["28.9","28.17"],"分别是开始位置":["28.9","28.14","28.17"],"要删除的元素数量":["28.9"],"首先会创建一个当前数组的副本":["28.10"],"然后再把它的参数添加到副本末尾":["28.10"],"最后返回这个新构建的数组":["28.10"],"不会影响原始数组":["28.10","28.15"],"下面三种都会影响原数组":["28.11"],"方法用于删除数组的最后一项":["28.12"],"同时减少数组的":["28.12","28.13"],"方法用于删除数组的第一项":["28.13"],"传入两个参数":["28.14"],"删除元素的数量":["28.14"],"用于创建一个包含原有数组中一个或多个元素的新数组":["28.15"],"即修改原来数组的内容":["28.16"],"要删除元素的数量":["28.17"],"要插入的任意多个元素":["28.17"],"即查找元素":["28.18"],"返回要查找的元素在数组中的位置":["28.19","28.20"],"如果没找到则返回":["28.19"],"找到返回":["28.20"],"返回第一个匹配的元素":["28.21"],"排序方法":["28.22"],"顾名思义":["28.23"],"将数组元素方向反转":["28.23"],"方法接受一个比较函数":["28.24"],"用于判断哪个值应该排在前面":["28.24"],"compare":["28.24"],"value1":["28.24","73.15"],"value2":["28.24","73.15"],"方法接收一个参数":["28.26"],"即字符串分隔符":["28.26"],"迭代方法":["28.27"],"对数组每一项都运行传入的测试函数":["28.28","28.29"],"如果至少有":["28.28"],"个元素返回":["28.28"],"如果所有元素都返回":["28.29"],"true":["28.29","28.31","32.10","33.9","34.6","35.2","68.2","110.8","113.5"],"对数组每一项都运行传入的函数":["28.30","28.31","28.32"],"没有返回值":["28.30"],"函数返回":["28.31"],"的项会组成数组之后返回":["28.31"],"返回由每次函数调用的结果构成的数组":["28.32"],"流程控制":["29.0"],"语句":["29.1","29.2","29.3","29.5","32.13","78.14"],"流程控制语句可以用来改变程序执行的顺序":["29.1"],"条件判断语句":["29.1"],"else":["29.2","84.2","84.3","84.4","84.6"],"语法":["29.2","29.3"],"条件表达式":["29.2","29.5","33.12"],"条件表达式1":["29.2"],"通过循环语句可以使指定的代码反复执行":["29.4"],"while":["29.6"],"循环":["29.8","29.9","29.10","32.12","49.2"],"in":["29.9","29.11","32.11","32.12"],"用于迭代对象的属性":["29.9"],"通常是迭代对象的键":["29.9"],"属性名":["29.9"],"适用于对象":["29.9"],"用于迭代可迭代对象的值":["29.10"],"例如数组":["29.10"],"字符串":["29.10","34.15","122.14"],"的区别":["29.11"],"循环和":["29.11"],"continue":["29.12","30.9"],"用来终止":["29.12"],"switch":["29.12"],"和循环语句":["29.12"],"执行后":["29.12"],"当前的":["29.12"],"或循环会立刻停止":["29.12"],"函数":["30.0","67.14","76.3","101.8"],"是声明函数的关键字":["30.2"],"函数名":["30.3","30.8"],"函数使用分为两步":["30.3"],"声明函数":["30.3","30.8"],"在声明函数时":["30.6"],"可以在函数名称后面的小括号中添加一些参数":["30.6"],"这些参数被称为":["30.6"],"形参":["30.6"],"在调用该函数时":["30.6"],"参数个数":["30.7"],"说明":["30.7"],"实参个数等于形参个数":["30.7"],"输出正确结果":["30.7"],"实参个数多于形参个数":["30.7"],"只取到形参的个数":["30.7"],"实参个数少于形参个数":["30.7"],"有的时候":["30.8"],"我们会希望函数将值返回给调用者":["30.8"],"此时通过使用":["30.8"],"return":["30.8","30.9","47.5","52.5"],"语句就可以实现":["30.8"],"语法格式":["30.8","120.3","120.6"],"需要返回的值":["30.8"],"调用函数":["30.8","76.8"],"result":["30.8"],"函数可以分为具名函数和匿名函数":["30.10"],"基本语法":["31.0"],"是一种脚本语言":["31.0"],"以下是一个简单的":["31.1"],"程序不能独立运行":["31.2"],"script":["31.3"],"标签包裹":["31.3"],"一般将":["31.4"],"对象":["32.0","32.2","32.13","57.3","72.2","88.2","121.7","122.14","144.6"],"object":["32.2","32.10","38.0","53.7","53.9","57.1","73.2","73.5","88.1","88.2","107.1"],"语言的核心概念":["32.2"],"也是最重要的数据类型":["32.2"],"对象的所有键名都是字符串":["32.3"],"又引入了":["32.3"],"symbol":["32.3","107.1"],"值也可以作为键名":["32.3"],"所以加不加引号都可以":["32.3"],"上面的代码也可以写成下面这样":["32.3"],"如果键名是数值":["32.3"],"会被自动转为字符串":["32.3"],"如果不同的变量名指向同一个对象":["32.4"],"那么它们都是这个对象的引用":["32.4"],"也就是说指向同一个内存地址":["32.4"],"修改其中一个变量":["32.4"],"会影响到其他所有变量":["32.4"],"o1":["32.4"],"o2":["32.4"],"对象采用大括号表示":["32.5"],"这导致了一个问题":["32.5"],"如果行首是一个大括号":["32.5"],"它到底是表达式还是语句":["32.5"],"读取对象的属性":["32.7"],"有两种方法":["32.7"],"一种是使用点运算符":["32.7"],"还有一种是使用方括号运算符":["32.7"],"点运算符和方括号运算符":["32.8"],"不仅可以用来读取值":["32.8"],"还可以用来赋值":["32.8"],"查看一个对象本身的所有属性":["32.9"],"delete":["32.10"],"命令":["32.10","123.0","124.3"],"命令用于删除对象的属性":["32.10"],"删除成功后返回":["32.10"],"运算符":["32.11","33.0","33.2","84.5"],"运算符用于检查对象是否包含某个属性":["32.11"],"检查的是键名":["32.11"],"不是键值":["32.11"],"循环用来遍历一个对象的全部属性":["32.12"],"语句的格式如下":["32.13"],"它的作用是操作同一个对象的多个属性时":["32.13"],"提供一些书写的方便":["32.13"],"p1":["32.13"],"p2":["32.13"],"实例":["33.2","33.3","52.4"],"加":["33.2"],"运算符名称":["33.3","33.7"],"赋值":["33.3"],"使用后会使得原来的变量立刻增加":["33.5"],"自增分为前自增":["33.5"],"和后自增":["33.5"],"无论是":["33.5"],"使用后会使得原来的变量立刻减小":["33.6"],"自减分为前自减":["33.6"],"案列":["33.7"],"结果":["33.7","52.2"],"一假即假":["33.9"],"可以对两个值进行与运算":["33.9"],"当":["33.9","33.10","76.1","82.7"],"左右都为":["33.9"],"一真即真":["33.10"],"可以对两个值进行或运算":["33.10"],"左右有":["33.10"],"表达式":["33.12","78.7"],"各种运算符的优先级别":["33.13"],"operator":["33.13","84.3"],"数据类型":["34.0","89.8"],"基本类型":["34.1"],"数值最常见的整数类型格式则为十进制":["34.2"],"还可以设置八进制":["34.2"],"零开头":["34.2"],"十六进制":["34.2"],"0x":["34.2"],"开头":["34.2","121.22"],"类型只有一个值":["34.3"],"就是特殊值":["34.3"],"字符串可以使用双引号":["34.4"],"单引号":["34.4"],"或反引号":["34.4"],"类型同样只有一个值":["34.5"],"即特殊值":["34.5"],"布尔值":["34.6"],"类型有两个字面值":["34.6"],"符号":["34.7"],"是原始值":["34.7"],"且符号实例是唯一":["34.7"],"引用类型":["34.8"],"创建":["34.9","77.24","114.0","117.4","120.16"],"数组是一组有序的数据":["34.10"],"函数实际上是对象":["34.11"],"每个函数都是":["34.11"],"类型的实例":["34.11"],"而":["34.11"],"除了上述说的三种之外":["34.12"],"类型转换":["34.13"],"把数字转换为字符串型":["34.14"],"变量":["34.14","35.0"],"将其他的数据类型转换为数值":["34.15"],"number":["34.15","68.0","68.1","68.2","107.1"],"函数来将其他类型转换为数值":["34.15"],"转换的情况":["34.15","34.16"],"如果字符串是一个合法的数字":["34.15"],"则会自动转换为对应的数字":["34.15"],"如果字符串不是合法数字":["34.15"],"则转换为":["34.15"],"nan":["34.15","68.2"],"如果字符串是空串或纯空格的字符串":["34.15"],"boolean":["34.16","101.3","107.1","113.5"],"函数来将其他类型转换为布尔值":["34.16"],"数字":["34.16"],"存储区别":["34.17"],"obj1":["34.19","76.8"],"声明变量时不同的内存地址分配":["34.20"],"msg":["35.1"],"默认":["35.1","80.4","140.1"],"声明后可以改变类型":["35.1"],"但不推荐":["35.1"],"hi":["35.1"],"声明":["35.2","35.6","35.7"],"声明的范围是块作用域":["35.2"],"if":["35.2","78.14","84.2","84.3","84.4","84.6","85.9"],"name":["35.2","35.3","73.3","97.3","102.1","112.1","112.2","112.3","149.3"],"zhangsan":["35.2","76.8"],"在全局作用域中声明的变量不会成为":["35.4"],"window":["35.4","42.0","42.1","76.3","76.8","160.1","160.2"],"对象的属性":["35.4"],"循环中的":["35.6"],"时变量会渗透到外面":["35.6"],"的行为与":["35.7"],"基本相同":["35.7"],"声明提升":["35.8"],"document":["36.0","36.1","57.1","58.6","62.1","147.3"],"获取元素":["36.1"],"获取具有id为":["36.2"],"myelement":["36.2"],"history":["37.0","37.1"],"bom":["38.0"],"browser":["38.0","110.8"],"model":["38.0","57.1","90.7","91.17"],"中用于与浏览器交互的一组对象和方法集合":["38.0"],"它提供了访问和控制浏览器窗口及其内容的功能":["38.0"],"location":["39.0","39.1"],"href":["39.1"],"当前窗口的完整":["39.1"],"获取当前窗口的url":["39.2"],"navigator":["40.0","40.1"],"获取用户代理字符串":["40.2"],"screen":["41.0","41.1"],"获取屏幕的宽度":["41.2"],"open":["42.1"],"打开一个新窗口":["42.2"],"ajax":["43.0","43.1","43.2","43.8","43.9","52.5","122.5","122.6"],"全称":["43.1"],"async":["43.1"],"实现过程":["43.2"],"实现":["43.2","147.3","147.4","149.3","149.4"],"与服务器建立连接":["43.4"],"xmlhttprequest":["43.4","43.5","43.6","43.8","52.5"],"给服务端发送数据":["43.5"],"绑定":["43.6"],"onreadystatechange":["43.6"],"事件":["43.6","58.8","90.4"],"事件用于监听服务器端的通信状态":["43.6"],"主要监听的属性为":["43.6"],"readystate":["43.6"],"关于":["43.6","98.8"],"封装与使用":["43.7"],"通过上面对":["43.8"],"对象的了解":["43.8"],"下面来封装一个简单的":["43.8"],"请求":["43.8","97.3"],"封装一个ajax请求":["43.8"],"options":["43.8","94.3","120.3","120.6"],"使用方式如下":["43.9"],"code":["44.1","163.3","163.9","163.12","164.5"],"闭包":["45.0"],"要创建一个闭包":["45.1"],"通常需要在一个函数内部定义另一个函数":["45.1"],"并将其返回":["45.1"],"返回的函数就是闭包":["45.1"],"闭包可以捕获并访问其外部函数的变量":["45.2"],"即使外部函数已经执行完毕":["45.2"],"这使得闭包可以在不同的上下文中使用和保留外部变量的状态":["45.2"],"通过使用闭包":["45.3","45.4"],"可以创建私有变量":["45.3"],"这些变量无法从外部访问":["45.3"],"只能通过内部函数提供的公共接口访问和修改":["45.3"],"createperson":["45.3"],"封装私有变量和方法":["45.4"],"可以创建私有变量和方法":["45.4"],"将其封装在函数内部":["45.4"],"只暴露公共接口给外部":["45.4"],"闭包会导致内存占用增加":["45.5"],"因为外部函数的变量和作用域在闭包中被保留":["45.5"],"即使外部函数执行完毕也不会被释放":["45.5"],"深浅拷贝":["46.0"],"浅拷贝是创建一个新对象":["46.1"],"新对象的属性值是原始对象属性值的引用":["46.1"],"也就是说":["46.1"],"新对象和原始对象共享相同的引用类型属性":["46.1"],"深拷贝是创建一个新对象":["46.2"],"新对象的属性值与原始对象的属性值完全独立":["46.2"],"二者互不影响":["46.2"],"由于对象的属性可能是引用类型":["46.2"],"所以需要递归复制对象的所有属性":["46.2"],"包括嵌套的对象和数组":["46.2"],"以下是一些常用的实现深拷贝的方法":["46.2"],"json":["46.2","63.6","64.6","108.0","110.7","117.6","122.14","124.4"],"parse":["46.2","110.8"],"函数柯里化":["47.0"],"函数柯里化是一种将多个参数的函数转化为一系列接受单个参数的函数的过程":["47.1"],"通过函数柯里化":["47.1"],"可以将原始函数分解为多个嵌套的函数":["47.1"],"每个函数都接收一个参数":["47.1"],"并返回一个新函数等待接收下一个参数":["47.1"],"最终":["47.1"],"所有参数都被传递完毕后":["47.1"],"原始函数会被调用执行":["47.1"],"函数柯里化有助于创建可复用和可组合的函数":["47.1"],"提供更灵活和精确的函数调用方式":["47.1"],"参数复用和定制":["47.2"],"通过柯里化":["47.2"],"可以将函数的一部分参数预先设置":["47.2"],"然后在后续调用时只传递剩余的参数":["47.2"],"这使得函数的复用和定制变得更加灵活和方便":["47.2"],"延迟执行":["47.2"],"使用闭包递归":["47.4"],"curry":["47.4","47.5"],"使用递归和占位符":["47.5"],"使用箭头函数和递归":["47.6"],"节流和防抖":["48.0"],"节流函数适用事件":["48.1"],"节流是一种控制函数执行频率的技术":["48.2"],"当一个函数被频繁调用时":["48.2","48.5"],"节流可以限制函数在一定时间间隔内只执行一次":["48.2"],"节流的实现思路是设置一个定时器":["48.2"],"在函数被调用时先检查定时器是否存在":["48.2"],"如果定时器不存在":["48.2"],"使用时间戳写法":["48.3"],"事件会立即执行":["48.3"],"停止触发后没有办法再次执行":["48.3"],"throttled1":["48.3"],"fn":["48.3"],"delay":["48.3","48.7"],"防抖函数适用事件":["48.4"],"防抖是一种控制函数执行频率的技术":["48.5"],"防抖可以延迟函数的执行":["48.5"],"直到某个连续的时间段内没有新的函数调用发生":["48.5"],"防抖如果需要立即执行":["48.6"],"可加入第三个参数用于判断":["48.6"],"实现如下":["48.6"],"debounce":["48.6","48.7"],"导入或定义防抖":["48.7"],"节流函数":["48.7"],"unique":["49.2"],"indexof":["49.3"],"include":["49.4"],"loop":["50.0"],"事件执行机制的过程":["50.1"],"是一门单线程语言":["50.1"],"宏任务和微任务":["50.2"],"同步和异步分别进入到不同的执行场所":["50.2"],"同步进入到主线程":["50.2"],"异步的进入到任务队列":["50.2"],"event":["50.2","58.9","58.10"],"在执行上下文栈的同步任务执行完后":["50.3"],"首先会去执行微任务队列":["50.3"],"按照队列先进先出的原则":["50.3"],"一次执行完所有":["50.3"],"数组扁平化是指将一个多维数组变为一个一维数组":["51.0"],"利用正则":["51.2"],"reduce":["51.3","54.0","54.3","54.9"],"函数递归":["51.4"],"promise":["52.0","52.1","52.2","52.5"],"是一种异步编程的解决方案":["52.0"],"它可以避免回调地狱":["52.0"],"使代码更加简洁易读":["52.0"],"可以通过":["52.1","65.2"],"通过调用":["52.2"],"链式调用":["52.3"],"的一个重要特性是可以通过链式调用来串联多个异步操作":["52.3"],"通过在":["52.3"],"then":["52.3"],"all":["52.4"],"方法接收一个":["52.4"],"实例数组":["52.4"],"返回一个新的":["52.4"],"该新实例在数组中的所有":["52.4"],"封装一个":["52.5"],"下面是一个使用":["52.5"],"封装的基本":["52.5"],"请求的示例":["52.5"],"url":["52.5","81.14","118.12"],"method":["52.5"],"data":["52.5","98.4","120.6"],"resolve":["52.5"],"reject":["52.5"],"xhr":["52.5"],"原型":["53.0"],"原型是":["53.1"],"原型链是一个对象和它的原型对象之间的连接":["53.2"],"当你访问一个对象的属性或方法时":["53.2"],"会首先查找该对象本身是否有这个属性或方法":["53.2"],"如果没有":["53.2"],"它会沿着原型链向上查找":["53.2"],"直到找到为止":["53.2","74.2"],"每个":["53.3"],"对象都有一个关联的原型对象":["53.3"],"原型继承是":["53.4"],"中对象之间共享属性和方法的一种方式":["53.4"],"当一个对象继承了另一个对象的原型时":["53.4"],"它可以访问该原型对象上的属性和方法":["53.4"],"让我们再次看一个例子":["53.4"],"animal":["53.4"],"中的原型继承方式":["53.5"],"构造函数和原型链":["53.6"],"这是最常见的原型继承方式":["53.6"],"它使用构造函数来创建对象属性":["53.6"],"同时使用原型链来共享方法":["53.6"],"在前面的例子中":["53.6"],"create":["53.7","73.5","73.7","92.4","112.1"],"类继承":["53.8"],"引入了类":["53.8"],"的概念":["53.8"],"setprototypeof":["53.9"],"在使用原型时":["53.14"],"计算数组累积结果":["54.3"],"演示如何使用":["54.3"],"方法来计算数组中所有元素的和":["54.3"],"计算数组中每个元素出现的次数":["54.4"],"one":["54.4"],"two":["54.4"],"three":["54.4","162.0"],"six":["54.4"],"four":["54.4"],"five":["54.4"],"数组去重":["54.5"],"数组扁平化":["54.6","54.7"],"二维转一维":["54.6"],"多维转一维":["54.7"],"对象属性求和":["54.8"],"方法适用于对数组的每个元素执行同一个累积操作":["54.9"],"作用域":["55.0"],"全局作用域是指在代码的任何地方都可访问的变量和函数":["55.1"],"在全局作用域中声明的变量和函数可以被代码中的任何地方访问":["55.1"],"局部作用域是指在特定代码块":["55.2"],"如函数":["55.2"],"循环或条件语句":["55.2"],"内部声明的变量和函数":["55.2"],"这些变量和函数只能在其声明的代码块内部访问":["55.2"],"作用域链是指":["55.3"],"引擎在查找变量时的嵌套作用域链条":["55.3"],"当访问一个变量时":["55.3"],"引擎首先在当前作用域的变量对象中查找":["55.3"],"中的作用域是通过代码的结构和位置来确定的":["55.4"],"而不是通过运行时的状态":["55.4"],"这被称为词法作用域":["55.4"],"函数在定义时就确定了自己的作用域":["55.4"],"而不是在调用时":["55.4"],"节点":["56.0","56.1","56.2","57.3"],"在已有的":["56.1"],"dom":["56.1","56.2","56.3","57.0","57.1","58.2","58.11","77.4","77.22","79.6","90.4"],"节点中插入新的":["56.1"],"节点时":["56.1"],"需要关注两个关键因素":["56.1"],"首先要得到新的":["56.1"],"其次在哪个位置插入这个节点":["56.1"],"createelement":["56.1","59.1"],"删除现有的":["56.2"],"childnodes":["56.4"],"获取全部的子节点":["56.4"],"回车换行会被认为是空白文本节点":["56.4"],"children":["56.4"],"只获取元素类型节点":["56.4"],"body":["56.4"],"btn1":["56.4"],"所有的子节点":["56.4"],"获取":["56.4","83.4"],"previoussibling":["56.5"],"获取前一个节点":["56.5"],"以相对位置查找节点":["56.5"],"是一种用于表示和操作":["57.1"],"树":["57.2"],"节点是文档树的组成部分":["57.3"],"每一个节点都是一个":["57.3"],"事件处理":["58.0","77.13"],"事件是编程语言中的术语":["58.1"],"结合":["58.2"],"使用事件时":["58.2"],"需要为":["58.2"],"对象添加事件监听":["58.2"],"当我们不再需要一个事件监听器时":["58.3"],"鼠标事件是指跟鼠标操作相关的事件":["58.5"],"如单击":["58.5"],"双击":["58.5"],"移动等":["58.5"],"事件名":["58.5"],"click":["58.5"],"当用户点击鼠标左键时触发":["58.5"],"dblclick":["58.5"],"当用户在文本框中输入":["58.8"],"删除或修改文本时触发":["58.8"],"无论是键盘输入":["58.8"],"粘贴":["58.8"],"事件处理程序的第一个参数是事件对象":["58.9"],"它包含有关事件的信息":["58.9"],"例如事件类型":["58.9"],"事件冒泡":["58.10"],"事件会从触发它的元素向上冒泡到祖先元素":["58.10"],"你可以使用":["58.10","102.7"],"stoppropagation":["58.10"],"以下是一些常见的":["58.11"],"事件类型":["58.11"],"鼠标事件":["58.11"],"事件委托是一种利用事件冒泡原理来简化事件处理的技术":["58.12"],"通过将事件监听器绑定到一个父元素上":["58.12"],"然后利用事件冒泡机制":["58.12"],"从父元素中捕获和处理子元素触发的事件":["58.12"],"这样可以减少事件处理程序的数量":["58.12"],"并且可以动态地处理后续添加的子元素":["58.12"],"提高性能和代码的可维护性":["58.12"],"创建和操作元素":["59.0"],"设置元素的属性":["59.2"],"setattribute":["59.2"],"将新元素添加到父元素中":["59.3"],"appendchild":["59.3"],"样式和类操作":["60.0"],"修改元素的内联样式":["60.1"],"对象来访问和修改元素的样式属性":["60.1"],"添加类名":["60.2"],"classlist":["60.2"],"属性的":["60.2"],"element":["60.2"],"获取和修改元素":["61.0"],"getelementbyid":["61.0","61.1","147.3"],"id":["61.1","141.1","146.2","149.3"],"修改元素的文本内容":["61.2"],"textcontent":["61.2"],"属性或":["61.2"],"innertext":["61.2"],"cookie":["62.0","62.1","62.2","62.3","62.4","122.13"],"属性来设置":["62.1"],"可以通过将":["62.3"],"每个域名下的":["62.4"],"是相互独立的":["62.4"],"不同域名之间的":["62.4"],"是隔离的":["62.4"],"localstorage":["63.0","63.1","63.2","63.6"],"setitem":["63.1","64.1"],"可以通过重新设置相同的键来更新":["63.3","64.3"],"存储的值必须是字符串类型":["63.6","64.6"],"如果需要存储其他数据类型":["63.6","64.6"],"如对象或数组":["63.6","64.6"],"stringify":["63.6","64.6"],"方法将其转换为字符串存储":["63.6","64.6"],"然后在需要时使用":["63.6","64.6"],"sessionstorage":["64.0","64.1","64.2","64.6"],"date":["65.0","65.2","113.4"],"getdate":["65.1"],"获取日期":["65.1"],"月份中的日期":["65.1"],"返回值为":["65.1"],"之间的整数":["65.1"],"getday":["65.1"],"获取星期几":["65.1"],"表示星期日":["65.1"],"对象用于处理日期和时间":["65.2"],"通过使用针对日期对象的方法":["65.3"],"我们可以很容易地对日期进行操作":["65.3"],"在下面的例子中":["65.3"],"我们为日期对象设置了一个特定的日期":["65.3"],"时间戳是指":["65.4"],"年":["65.4"],"01":["65.4"],"月":["65.4"],"内置对象":["66.0","66.1"],"就是指这个语言自带的一些对象":["66.0"],"的内置对象":["66.1"],"对象说明":["66.1"],"是用于进行正则表达式匹配的对象":["66.9"],"math":["67.0","67.1","76.12","147.3"],"abs":["67.3"],"random":["67.4"],"ceil":["67.5"],"floor":["67.6"],"round":["67.7"],"min":["67.8"],"max":["67.9","68.1","76.12"],"pow":["67.10"],"sqrt":["67.11"],"sin":["67.12"],"cos":["67.13"],"trunc":["67.14"],"返回的是一个数的整数部分":["67.14"],"表示":["68.1"],"中能表示的最大数值":["68.1"],"isnan":["68.2"],"num":["68.2"],"判断给定的值是否为":["68.2"],"非数值":["68.2"],"如果是":["68.2"],"则返回":["68.2"],"否则返回":["68.2"],"false":["68.2"],"isfinite":["68.2"],"判断给定的值是否为有限数值":["68.2"],"如果是有限数值":["68.2"],"即不是":["68.2"],"infinity":["68.2"],"或":["68.2","87.3","113.1","118.8","121.22"],"regexp":["69.0","69.1"],"正则表达式":["69.1"],"是一种用于匹配和操作字符串模式的强大工具":["69.1"],"它是一种模式匹配的语法":["69.1"],"使用斜杠":["69.3"],"匹配除换行符之外的任何单个字符":["69.5"],"修饰符用于在正则表达式中添加额外的规则":["69.6"],"影响匹配的行为":["69.6"],"以下是一些常用的正则表达式模式示例":["69.7"],"匹配字母或数字字符":["69.7"],"za":["69.7"],"的字符串对象提供了一些与正则表达式相关的方法来执行匹配":["69.8"],"搜索和替换操作":["69.8"],"以下是一些常用的方法":["69.8"],"match":["69.8"],"在字符串中搜索匹配正则表达式的结果":["69.8"],"并返回一个数组或":["69.8"],"null":["69.8","107.1"],"正则表达式还支持使用圆括号进行分组和捕获":["69.9"],"通过使用圆括号将模式的一部分括起来":["69.9"],"可以创建子模式":["69.9"],"并将匹配到的子串捕获到一个分组中":["69.9"],"以下是一些常用的分组和捕获的示例":["69.9"],"使用括号进行分组":["69.9"],"abc":["69.9"],"会匹配一个或多个连续的":["69.9"],"捕获分组":["69.9"],"使用括号进行分组后":["69.9"],"可以通过编号或名称将捕获的子串提取出来":["69.9"],"除了修饰符外":["69.10"],"正则表达式还支持标志":["69.10"],"flags":["69.10"],"用于提供更多的匹配选项":["69.10"],"正则表达式在":["69.11"],"中具有广泛的应用场景":["69.11"],"封装和多态":["70.0"],"inheritance":["70.1"],"继承是一种对象间的关系":["70.1"],"它允许一个对象":["70.1"],"称为子类或派生类":["70.1"],"继承另一个对象":["70.1"],"称为父类或基类":["70.1"],"的属性和方法":["70.1"],"子类继承了父类的特性":["70.1"],"可以通过继承来复用代码":["70.1"],"减少重复编写":["70.1"],"encapsulation":["70.2"],"封装是一种将数据和方法包裹在一个单一实体中的概念":["70.2"],"使得外部无法直接访问对象的内部实现细节":["70.2"],"这样的设计有助于隐藏对象的复杂性":["70.2"],"只暴露必要的接口":["70.2"],"提高代码的可维护性和安全性":["70.2"],"封装通常通过将数据设置为私有属性":["70.2"],"polymorphism":["70.3"],"多态是一种允许不同对象对同一方法做出不同响应的特性":["70.3"],"这意味着可以使用相同的方法名":["70.3"],"但针对不同对象实现不同的行为":["70.3"],"多态有助于实现代码的灵活性和可扩展性":["70.3"],"及其之前的版本中":["71.1"],"使用构造函数来创建对象":["71.1"],"构造函数本质上是一个普通的函数":["71.1"],"但通常使用":["71.1"],"及以上的版本中":["71.2"],"引入了":["71.2"],"使得类的定义更加简洁明了":["71.2"],"类定义了对象的结构和行为":["71.2"],"面向对象":["72.0"],"对象是面向对象编程的核心概念":["72.2"],"对象是一个复合的数据类型":["72.2"],"它可以包含属性":["72.2"],"也称为数据成员":["72.2"],"和方法":["72.2"],"张三":["73.3"],"构造函数":["73.4"],"是一种特殊的函数":["73.4"],"主要用来初始化对象":["73.4"],"即为对象成员变量赋初始值":["73.4"],"它总与":["73.4"],"运算符一起使用":["73.4"],"我们可以把对象中一些公共的属性和方法抽取出来":["73.4"],"然后封装到这个函数里面":["73.4"],"sources":["73.5","73.6"],"复制一个或多个对象的属性到目标对象":["73.5"],"freeze":["73.9","73.10"],"getownpropertydescriptor":["73.11"],"getownpropertynames":["73.12"],"getownpropertysymbols":["73.13"],"getprototypeof":["73.14"],"seal":["73.17","73.18"],"hasownproperty":["73.20"],"原型和原型链":["74.0"],"prototype":["74.1","74.2"],"每个对象都有一个特殊的属性":["74.1"],"chain":["74.2"],"原型链是由对象的原型对象构成的链式结构":["74.2"],"当我们访问对象的属性或方法时":["74.2"],"如果对象本身没有找到":["74.2"],"则会继续在原型链上查找":["74.2"],"原型链的最终节点是":["74.2"],"尽量避免直接修改原型对象":["74.4"],"以免对其他对象产生意外的影响":["74.4"],"严格模式":["75.0"],"strict":["75.0"],"mode":["75.0"],"是一种在":["75.0","78.20"],"中启用更严格解析和错误处理的模式":["75.0"],"它旨在帮助开发者编写更安全":["75.0"],"指向":["76.2","76.14"],"函数内":["76.3"],"的指向":["76.3","76.4"],"非常重要":["76.3"],"语法中":["76.3"],"根据函数的调用方式的不同":["76.3"],"会指向不同的对象":["76.3"],"以":["76.3"],"的形式":["76.3"],"包括普通函数":["76.3"],"定时器函数":["76.3"],"立即执行函数":["76.3"],"调用时":["76.3"],"的指向永远都是":["76.3"],"比如":["76.3"],"fun":["76.3"],"相当于":["76.3"],"箭头函数中":["76.4"],"方法的作用":["76.7","76.10","76.14"],"方法举例":["76.8","76.11"],"举例":["76.8","76.11"],"nickname":["76.8"],"fn1":["76.8"],"可以":["76.10"],"调用":["76.10"],"一个函数":["76.10"],"改变":["76.11"],"方法的巧妙应用":["76.12"],"求数组的最大值":["76.12"],"如果想要求数组中元素的最大值":["76.12"],"数组本身是没有自带方法的":["76.12"],"那怎么办呢":["76.12"],"虽然数组里没有获取最大值的方法":["76.12"],"但是数值里有":["76.12"],"不会调用函数":["76.14"],"但是可以改变函数内部的":["76.14"],"用于构建现代":["77.0"],"react":["77.1","77.4","78.18","78.19","78.21","78.22","79.1","81.1","81.8","81.9","81.10","81.13","81.14","81.15","82.1","82.3","82.6","82.7","83.2","83.3","83.4","83.5","84.2"],"是由":["77.1"],"facebook":["77.1"],"开源的":["77.1"],"库":["77.1","77.23","87.3","156.3","162.0"],"的特点":["77.2","119.2"],"虚拟":["77.4"],"生态系统丰富":["77.6"],"在学习":["77.7"],"组件":["77.8","79.0","81.13"],"components":["77.8"],"jsx":["77.9","78.0","78.1","78.15","78.17","80.3","80.7","80.8","80.9","80.10","80.11","81.11","81.13","81.14","81.15","83.5"],"props":["77.10","79.4","80.0","80.1","80.3","80.4","80.5","80.15","82.7","83.4","90.2"],"state":["77.11","82.0","82.1","82.3","82.4","82.5","87.1","87.6"],"列表渲染":["77.15","83.0"],"表单处理":["77.16"],"高阶组件":["77.18","78.20"],"hooks":["77.20","78.22"],"环境搭建":["77.21"],"本地引入相关的":["77.23"],"入门的时候":["77.23"],"我们建议采取方式一":["77.23"],"如果是本地引入的话":["77.23"],"可以这样写":["77.23"],"引入react相关的js库":["77.23"],"如果是通过":["77.23"],"cdn":["77.23"],"的方式引入的话":["77.23"],"脚手架":["77.24"],"vite":["77.24","110.4","110.10"],"选择":["77.24","92.4"],"原理":["78.2"],"并不是直接由浏览器理解的语法":["78.2"],"而是通过":["78.2"],"babel":["78.2"],"等工具进行转换后":["78.2"],"再变成普通的":["78.2"],"嵌套":["78.6"],"注释":["78.8"],"中的组件化开发":["78.9"],"函数组件是一种简单的声明式组件":["78.10"],"它是一个纯函数":["78.10"],"类组件是一种功能更强大的组件":["78.11"],"它是一个":["78.11"],"使用组件时":["78.12"],"中的条件渲染":["78.13"],"中的列表渲染":["78.16"],"中的表单处理":["78.18"],"处理用户输入的表单数据是":["78.18"],"web":["78.18","120.16","162.0"],"应用程序中的常见任务":["78.18"],"我们可以通过对表单元素的事件监听和状态更新":["78.18"],"中的状态提升":["78.19"],"状态提升是一种在":["78.19"],"中共享状态的技术":["78.19"],"允许将共享的状态提升到共同的父组件":["78.19"],"实现组件之间的数据共享":["78.19"],"中的高阶组件":["78.20"],"hoc":["78.20"],"中的上下文":["78.21"],"context":["78.21","142.2","142.3","143.0","144.3","144.4","144.5","145.1","145.2","147.3"],"的上下文允许在组件树中共享数据":["78.21"],"而不必通过":["78.21"],"中的":["78.22"],"生命周期可以分为三个阶段":["79.1"],"组件创建":["79.1"],"组件更新和组件销毁":["79.1"],"组件创建阶段":["79.1"],"constructor":["79.1"],"组件被创建时调用":["79.1"],"是组件创建阶段的第一个方法":["79.3"],"它在组件实例被创建时调用":["79.3"],"getderivedstatefromprops":["79.4","79.8"],"是组件创建和更新阶段的一个静态方法":["79.4"],"在组件每次渲染之前都会被调用":["79.4"],"它接收":["79.4"],"是组件创建阶段的第三个方法":["79.5"],"它用于渲染组件的内容":["79.5"],"是组件创建阶段的最后一个方法":["79.6"],"它在组件挂载到":["79.6"],"后调用":["79.6"],"在组件更新阶段":["79.8"],"的作用和在组件创建阶段是一样的":["79.8"],"用于根据":["79.8"],"是组件更新阶段的第二个方法":["79.9"],"它在组件更新之前调用":["79.9"],"是组件更新阶段的第四个方法":["79.10"],"它在":["79.10"],"render":["79.10","147.3"],"之后":["79.10"],"是组件更新阶段的最后一个方法":["79.11"],"它在组件更新之后调用":["79.11"],"是组件销毁阶段的唯一一个方法":["79.13"],"在组件即将被销毁时调用":["79.13"],"我们应该进行一些清理操作":["79.13"],"比如取消订阅":["79.13"],"的使用":["80.2","82.2","87.4","87.5","87.6"],"传递":["80.3"],"在父组件中":["80.3"],"可以通过在子组件上设置属性来传递":["80.3"],"有时候":["80.4","80.15","81.13"],"使用解构赋值简化":["80.5"],"在组件中访问":["80.5"],"的值类型":["80.6"],"字符串类型":["80.7"],"数字类型":["80.8"],"布尔值类型":["80.9"],"数组类型":["80.10"],"对象类型":["80.11"],"mycomponent":["80.11"],"的传递规则":["80.12"],"的不可变性":["80.13","82.6"],"验证":["80.14"],"为了确保组件接收到正确的":["80.14"],"我们可以使用":["80.14","84.2"],"proptypes":["80.14"],"来对":["80.14"],"进行验证":["80.14"],"我们希望在未传递某个":["80.15"],"时":["80.15","87.4"],"组件能够使用一个默认值":["80.15"],"这时可以通过设置组件的":["80.15"],"defaultprops":["80.15"],"来实现":["80.15"],"路由":["81.0","81.1","81.3","118.4"],"router":["81.2","81.8","81.13","81.14","81.15","86.0","86.3","118.4","118.8"],"路由是":["81.3"],"路由参数":["81.5"],"路由参数允许我们在":["81.5"],"编程式导航":["81.7"],"要开始使用":["81.8"],"创建路由组件":["81.10"],"首先":["81.10"],"我们需要创建几个页面组件":["81.10"],"它们将用于显示不同的页面视图":["81.10"],"定义路由":["81.11"],"接下来":["81.11"],"我们需要在应用中定义路由":["81.11"],"可以在顶层组件":["81.11"],"通常是":["81.11"],"app":["81.11","81.13","81.14","81.15","91.2","118.6","118.7","118.8","152.7","153.2","160.1","160.2"],"中使用":["81.11","122.11"],"route":["81.11","81.13","81.15"],"组件来定义路由":["81.11"],"渲染页面":["81.12"],"最后":["81.12"],"我们希望在一个页面中显示其他页面的内容":["81.13"],"这就需要使用嵌套路由":["81.13"],"允许我们在一个页面组件中定义嵌套的":["81.13"],"在实际开发中":["81.14"],"我们经常需要从":["81.14"],"中获取参数来加载不同的数据或进行页面的定向":["81.14"],"允许我们在":["81.14"],"路径中定义参数":["81.14"],"并将参数传递给页面组件":["81.14"],"提供了":["81.15"],"link":["81.15"],"组件和编程式导航来实现页面之间的导航":["81.15"],"browserrouter":["81.15"],"状态":["82.0","87.1","143.0"],"初始化":["82.3","98.2"],"更新":["82.4"],"要更新":["82.4"],"的值":["82.4","82.6"],"异步更新":["82.5"],"需要注意的是":["82.5","106.5"],"setstate":["82.5"],"方法是异步的":["82.5"],"这意味着在调用":["82.5"],"是不可变的":["82.6"],"意味着我们不应该直接修改":["82.6"],"如果直接修改":["82.6"],"的传递":["82.7"],"通常是在组件的父组件中定义的":["82.7"],"并通过":["82.7"],"传递给子组件":["82.7"],"这样的设计有助于保持组件之间的独立性和可预测性":["82.7"],"需要在多个组件中共享时":["82.7"],"可以将":["82.7"],"提升到共同的父组件中":["82.7"],"列表渲染是指根据数据数组来动态生成多个相似的元素":["83.1"],"方法实现列表渲染":["83.2"],"使用数组的":["83.2"],"方法是实现列表渲染的常见方式":["83.2"],"方法可以遍历数组的每个元素":["83.2"],"在实际应用中":["83.3","83.4","83.5"],"我们可能需要根据特定条件来渲染列表元素":["83.3"],"我们可以在":["83.3"],"方法中使用条件语句来实现条件渲染":["83.3"],"数据通常来自于父组件的状态或从外部":["83.4"],"api":["83.4","89.0","110.12"],"我们可以通过":["83.4"],"将数据传递给子组件":["83.4"],"然后在子组件中使用":["83.4"],"我们可能需要通过用户的交互来添加新的列表项":["83.5"],"我们可以通过修改数据数组的方式来实现添加列表项":["83.5"],"下面是一个示例":["83.5"],"演示了如何通过按钮点击来添加新的列表项":["83.5"],"方法渲染列表项时":["83.6"],"每个列表项都应该有一个唯一的":["83.6"],"条件渲染":["84.0"],"条件渲染是指根据特定条件来决定是否渲染组件或组件的一部分":["84.1"],"实现条件渲染":["84.2","84.4"],"的":["84.2","87.3","101.8","117.6"],"除了使用":["84.3"],"我们还可以使用":["84.3"],"的三元表达式":["84.3"],"ternary":["84.3"],"来实现条件渲染":["84.3","84.4","84.5"],"除了":["84.4"],"和三元表达式":["84.4"],"我们还可以使用逻辑与":["84.4"],"逻辑与在":["84.4"],"除了上述方法":["84.5"],"我们还可以使用条件运算符":["84.5"],"也称为逻辑或":["84.5"],"nullish":["84.5"],"coalescing":["84.5"],"条件运算符是":["84.5"],"使用适合场景的条件渲染方法":["84.6"],"根据具体的场景和需求选择合适的条件渲染方法":["84.6"],"例如使用":["84.6"],"三元表达式":["84.6"],"逻辑与":["84.6"],"vue":["85.1","85.3","85.4","85.7","86.3","88.1","88.2","89.23","89.28","89.30","90.4","90.5","90.12","91.8","91.11","92.3","92.4","93.1","94.1","94.2","94.4","110.8","148.2","149.4","153.1","155.1","159.2"],"您可以通过直接引入":["85.3"],"应用":["85.4"],"使用双花括号":["85.6"],"提供了一些指令":["85.7"],"show":["85.10"],"循环渲染列表中的元素":["85.12"],"v":["85.13","90.7","91.6","127.2"],"on":["85.13","112.3"],"定义一个名为":["85.16"],"钩子函数":["85.18"],"阶段":["85.18"],"beforecreate":["85.18"],"创建前":["85.18"],"在实例被创建之前调用":["85.18"],"此时":["85.18"],"组件的数据观察和事件还未初始化":["85.18"],"created":["85.18","89.27"],"创建后":["85.18"],"安装":["86.2","87.3","118.2","121.16","122.2","122.11","122.14","126.2","165.2"],"基本用法":["86.3"],"创建一个":["86.3","87.3"],"实例并将其与":["86.3"],"路由视图":["86.4"],"路由导航":["86.5"],"路由传参":["86.6"],"嵌套路由":["86.7"],"是一个专为":["87.0"],"vuex":["87.1","87.2","87.3","87.4","87.6"],"状态即应用程序中需要共享的数据":["87.1"],"它类似于组件的":["87.1"],"集中式管理":["87.2"],"所有的状态都集中在":["87.2"],"npm":["87.3","92.2","92.6","105.7","118.2","121.17","121.18","122.11","122.14","124.1","124.2","124.3","124.5","124.6","125.0","156.3","165.2"],"yarn":["87.3","111.1","123.0","126.1","126.2","165.2"],"在终端中运行以下命令":["87.3"],"install":["87.3","110.10","118.2","122.11","122.14"],"当使用":["87.4"],"通常会将状态的修改拆分为两个部分":["87.4"],"actions":["87.4"],"用于处理异步操作":["87.5"],"并且可以包含任意异步代码":["87.5"],"它们不直接修改状态":["87.5"],"而是通过调用":["87.5"],"mutations":["87.5"],"来间接修改状态":["87.5"],"通常":["87.5"],"在组件中通过":["87.5"],"dispatch":["87.5"],"用于派生出":["87.6"],"store":["87.6"],"中的状态":["87.6"],"类似于组件的计算属性":["87.6"],"computed":["87.6"],"但是":["87.6","89.31","104.7"],"可以被多个组件共用":["87.6"],"避免了重复逻辑代码":["87.6"],"可以对":["87.6"],"进行处理和过滤":["87.6"],"返回一个新的衍生状态":["87.6"],"而不改变原始状态":["87.6"],"以下是一个使用":["87.6"],"响应式原理":["88.0"],"的响应式原理主要是基于":["88.1"],"defineproperty":["88.1","88.2"],"实现的":["88.1"],"以下是":["88.1","88.2"],"响应式系统的核心原理":["88.1"],"的响应式原理使用了":["88.2"],"proxy":["88.2"],"相比":["88.2"],"使用的":["88.2"],"有一些重要的改进和性能优化":["88.2"],"vue在线学习工具":["89.0"],"vue3":["89.1","89.16","90.2","90.8","110.7"],"reactive":["89.2"],"函数用来根据给定的值创建一个响应式的数据对象":["89.2"],"函数调用的返回值是一个对象":["89.2"],"这个对象上只包含一个":["89.2"],"判断是不是一个ref对象":["89.4"],"ref":["89.4","90.9"],"创建一个跟踪自身":["89.5"],"变化的":["89.5"],"强制更新页面dom":["89.6"],"自定义ref":["89.7"],"是个工厂函数要求我们返回一个对象":["89.7"],"并且实现":["89.7"],"reactive是不可以绑定普通的":["89.8"],"只能对浅层的数据":["89.10"],"如果是深层的数据只会改变值":["89.10"],"把一个响应式对象转换成普通对象":["89.12"],"该普通对象的每个":["89.12"],"torefs相当于对对象内每个属性调用toref":["89.13"],"torefs返回的对象内的属性使用时需要加":["89.13"],"将响应式对象修改为普通对象":["89.14"],"的作用和":["89.16"],"监听ref定义的一个响应式数据":["89.17"],"监听多个ref":["89.18"],"写法变为数组的形式":["89.18"],"监听reactive定义的响应式对象":["89.19"],"使用reactive监听深层对象开启和不开启deep":["89.19"],"监听reactive":["89.20"],"定义响应式对象的单一属性":["89.20"],"立即执行传入的一个函数":["89.21"],"watcheffect":["89.22"],"watcheffect的第二个参数":["89.24"],"用来定义副作用刷新时机":["89.24"],"简单来说就是一个组件从创建":["89.25"],"元素初始化的时候":["89.27"],"这里有一个需要注意的限制":["89.28"],"必须以":["89.28"],"vnameofdirective":["89.28"],"的形式来命名本地自定义指令":["89.28"],"以使得它们可以直接在模板中使用":["89.28"],"vmovedirective":["89.28"],"el":["89.29"],"当前绑定的dom":["89.29"],"元素":["89.29"],"第二个":["89.29"],"binding":["89.29"],"instance":["89.29"],"使用指令的组件实例":["89.29"],"自定义拖拽指令":["89.30"],"vue2":["89.31","90.1","90.6","91.13"],"中有个东西叫":["89.31"],"mixins":["89.31"],"他可以将多个组件中相同的逻辑抽离出来":["89.31"],"实现一次写代码":["89.31"],"多组件受益的效果":["89.31"],"的副作用就是引用的多了变量的来源就不清晰了":["89.31"],"而且还会有变量来源不明确":["89.31"],"组件通信方式":["90.0"],"通信仓库地址":["90.1"],"项目地址":["90.1"],"不管是":["90.1"],"可以实现父子组件通信":["90.2"],"中我们可以通过":["90.2"],"自定义事件":["90.3","90.5"],"原生":["90.4"],"代码如下":["90.4"],"自定义事件可以实现子组件给父组件传递数据":["90.5"],"在项目中是比较常用的":["90.5"],"比如在父组件内部给子组件":["90.5"],"event2":["90.5"],"绑定一个自定义事件":["90.5"],"全局事件总线":["90.6"],"全局事件总线可以实现任意组件通信":["90.6"],"指令可是收集表单数据":["90.7"],"数据双向绑定":["90.7"],"除此之外它也可以实现父子组件数据同步":["90.7"],"useattrs":["90.8"],"中可以利用":["90.8"],"parent":["90.9"],"提及到":["90.9"],"provide":["90.10"],"piniapinia":["90.11"],"slot":["90.12","91.9","94.4"],"插槽":["90.12"],"默认插槽":["90.12"],"具名插槽":["90.12"],"作用域插槽可以实现父子组件通信":["90.12"],"在子组件内部的模板中书写":["90.12"],"全局组件标签":["90.12"],"在父组件内部提供结构":["90.12"],"todo":["90.12"],"深入组件":["91.0"],"main":["91.2"],"ts":["91.2","101.1","101.2","101.3","101.9","101.10","101.12","101.13","102.1","102.6","102.8","102.9","103.2","103.3","103.5","104.2","104.4","104.6","104.7","105.1","106.2","106.3","106.7","109.1","109.2","110.10","160.1"],"引入组件跟随在":["91.2"],"createapp":["91.2"],"局部注册的组件需要在使用它的父组件中显式导入":["91.5"],"父组件通过":["91.6"],"bind":["91.6"],"绑定一个数据":["91.6"],"然后子组件通过":["91.6"],"defineprops":["91.6"],"在子组件放置一个插槽":["91.8"],"具名插槽其实就是给插槽取个名字":["91.9"],"一个子组件可以放多个插槽":["91.9"],"而且可以放在不同的地方":["91.9"],"而父组件填充内容时":["91.9"],"可以根据这个名字把内容填充到对应插槽中":["91.9"],"插槽内容可以访问到父组件的数据作用域":["91.10"],"因为插槽内容本身是在父组件模板中定义的":["91.10"],"插槽可以是一个变量名":["91.11"],"在大型应用中":["91.12"],"需要将应用分割成小一些的代码块":["91.12"],"允许应用程序在等待异步组件时渲染一些其它内容":["91.13"],"必须使用条件判断":["91.13"],"传送组件":["91.14"],"是一种能够将我们的模板渲染至指定dom节点":["91.14"],"不受父级style":["91.14"],"alive":["91.15"],"缓存组件":["91.15"],"事件挂载的方法等":["91.15"],"只执行一次的放在":["91.15"],"onmounted中":["91.15"],"组件每次进去执行的方法放在":["91.15"],"onactivated中":["91.15"],"inject":["91.16"],"可以在祖先组件中指定我们想要提供给后代组件的数据或方法":["91.16"],"而在任何后代组件中":["91.16"],"升级":["91.17"],"在vue3":["91.17"],"是破坏性更新的":["91.17"],"是props":["91.17"],"使用vue":["92.1"],"my":["92.4"],"project":["92.4"],"然后的步骤":["92.4"],"please":["92.4"],"pick":["92.4"],"preset":["92.4"],"manually":["92.4"],"select":["92.4","122.3"],"使用vite创建":["92.5"],"推荐":["92.5"],"vite的优势":["92.5"],"使用vite初始化一个项目":["92.6"],"bash":["92.6","99.1","99.3","99.4","99.8","99.10","99.11","99.13","99.15","99.21","105.7","110.10","118.2","121.17","122.11","122.14","156.3","165.2","165.11"],"了解相关信息":["93.1"],"性能提升":["93.2"],"新增特性":["93.3"],"composition":["93.3"],"组合":["93.3"],"父组件":["94.1","94.2","94.4"],"主要是用来定义":["94.3"],"用来约束":["94.4"],"navlinks":["96.2","127.2"],"axios":["97.1","97.3","97.5","98.0","98.2","110.11"],"使用npm":["97.2"],"执行":["97.3"],"zs":["97.3"],"我们大致可以分为两类":["97.4"],"一类是":["97.4"],"请求接口前的统一处理":["97.4"],"请求拦截":["97.4"],"请求接口后的统一处理":["97.4"],"user":["97.5"],"catch":["97.5"],"封装目的":["98.1"],"设置请求拦截":["98.3"],"创建请求拦截":["98.3"],"service":["98.3","98.4"],"interceptors":["98.3","98.4"],"request":["98.3"],"use":["98.3","98.4","118.6","118.8"],"config":["98.3","110.10","165.9"],"设置响应拦截":["98.4"],"创建响应拦截":["98.4"],"response":["98.4"],"res":["98.4","118.12"],"处理自己的业务逻辑":["98.4"],"封装常见的方法":["98.5"],"示例":["98.6","152.7"],"param":["98.6"],"配置全局账户":["99.1"],"对所有":["99.1"],"git":["99.1","99.5","99.6","99.7","99.8","99.10","99.15"],"仓库有效":["99.1"],"commit":["99.6","99.16"],"提交所有变更":["99.6"],"diff":["99.7"],"比较工作区和暂存区的所有差异":["99.7"],"只能查看旧文件的变更":["99.7"],"包括修改和删除":["99.7"],"不能查看新文件":["99.7"],"因为新文件还为被":["99.7"],"查看简要日志信息":["99.8"],"基于当前分支创建分支":["99.10"],"安全删除本地分支":["99.12"],"merge":["99.14"],"rebase":["99.14"],"的区别有待学习实践":["99.14"],"worried":["99.14"],"将":["99.14"],"工作区指定文件恢复成和暂存区一样":["99.15"],"checkout":["99.15"],"file1":["99.15"],"file2":["99.15"],"tips":["99.15"],"记录":["99.16"],"remote":["99.18"],"查看所有远程仓库地址别名":["99.18"],"clone":["99.19"],"pull":["99.20"],"push":["99.21"],"推送本地指定分支到仓库指定分支":["99.21"],"配置用户名和邮箱":["100.3"],"执行命令生成ssh":["100.4"],"tortoisegit安装和配置详细说明":["100.7"],"支持十六进制":["101.2"],"十进制":["101.2"],"八进制和二进制":["101.2"],"b1":["101.3"],"typescript":["101.4","101.14","102.10","105.7","106.0"],"像":["101.4"],"tuple":["101.5"],"元组类型允许表示一个已知":["101.5"],"元素数量":["101.5"],"类型":["101.5"],"的数组":["101.5"],"各元素的类型不必相同":["101.5"],"enum类型是对":["101.6"],"标准数据类型的一个补充":["101.6"],"使用枚举类型可以为一组数值赋予友好的名字":["101.6"],"枚举的值可以是数字":["101.6"],"任意类型":["101.7"],"没有强制限定哪种类型":["101.7"],"随时切换类型都可以":["101.7"],"我们可以对":["101.7"],"可以用":["101.8"],"表示没有":["101.8"],"任何返回值":["101.8"],"u":["101.9","137.4"],"定义undefined":["101.9"],"类型表示的是那些永不存在的值的类型":["101.10"],"void":["101.11"],"联合类型用":["101.12"],"分隔":["101.12"],"表示取值可以为多种类型中的一种":["101.12"],"a可以为数字或者布尔类型":["101.12"],"交叉类型就是跟联合类型相反":["101.13"],"用":["101.13","102.11"],"操作符表示":["101.13"],"交叉类型就是两个类型必须存在":["101.13"],"通过类型断言这种方式可以告诉编译器":["101.14"],"相信我":["101.14"],"我知道自己在干什么":["101.14"],"类型断言好比其它语言里的类型转换":["101.14"],"但是不进行特殊的数据检查和解构":["101.14"],"它没有运行时的影响":["101.14"],"只是在编译阶段起作用":["101.14"],"会假设你":["101.14"],"es6提供了更接近传统语言的写法":["102.0"],"引入了class":["102.0"],"类的基本定义与使用":["102.1"],"声明属性":["102.1"],"在typescript":["102.2"],"里":["102.2","103.4"],"我们可以使用常用的面向对象模式":["102.2"],"基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类":["102.2"],"总共有三个":["102.3"],"public":["102.4","102.6","117.6"],"private":["102.5"],"protected":["102.6"],"修饰符":["102.6","102.7"],"代表定义的变量私有的只能在内部和继承的子类中访问":["102.6"],"不能在外部访问":["102.6"],"静态属性":["102.8"],"静态方法":["102.8"],"我们用static":["102.8"],"定义的属性":["102.8"],"不可以通过this":["102.8"],"去访问":["102.8"],"只能通过类名去调用":["102.8"],"定义":["102.9","122.14"],"类":["102.9"],"定义类":["102.9"],"使用关键字":["102.9"],"支持通过":["102.10"],"getters":["102.10"],"setters":["102.10"],"来截取对对象成员的访问":["102.10"],"它能帮助你有效的控制对对象成员的访问":["102.10"],"下面来看如何把一个简单的类改写成使用":["102.10"],"抽象类做为其它派生类的基类使用":["102.11"],"它们一般":["102.11"],"不会直接被实例化":["102.11"],"只能实例化实现了所有抽象方法的子类":["102.11"],"不同于接口":["102.11"],"抽象类可以包含成员的实现细节":["102.11"],"abstract":["102.11"],"函数涉及的类型实际上指的是":["103.0"],"js的函数":["103.1"],"命名函数":["103.1"],"表示该参数为可选参数":["103.2"],"必要参数":["103.4"],"默认参数和可选参数有个共同点":["103.4"],"它们表示某一个参数":["103.4"],"有时":["103.4"],"你想同时操作多个参数":["103.4"],"或者你并不知道会有多少参数传递进来":["103.4"],"重载是方法名字相同":["103.5"],"而参数不同":["103.5"],"返回类型可以相同也可以不同":["103.5"],"重载函数声明":["103.5"],"string":["103.5","107.1"],"指在定义函数":["104.0"],"下面这是两个函数":["104.2"],"除了类型的不同":["104.2"],"实现的功能是一样的":["104.2"],"语法为函数名字后面跟一个":["104.3"],"参数名":["104.3"],"参数名可以随便写":["104.3"],"例如我这儿写了":["104.3"],"t":["104.3"],"一个函数可以定义多个泛型参数":["104.4"],"在定义接口时":["104.5"],"为接口中的属性或方法定义泛型类型":["104.5"],"在使用接口时":["104.5"],"再指定具体的泛型类型":["104.5"],"在定义类时":["104.6"],"为类中的属性或方法定义泛型类型":["104.6"],"在创建类的实例时":["104.6"],"再指定特定的泛型类型":["104.6"],"我们期望在一个泛型的变量上面":["104.7"],"获取其length参数":["104.7"],"有的数据类型是没有length属性的":["104.7"],"typescript中文网":["105.0"],"对比于js":["105.2"],"ts是js的":["105.2"],"属于动态编程语言":["105.3"],"增强代码的可维护性":["105.5"],"需要一定的学习成本":["105.6"],"使用tsc":["105.9"],"使用ts":["105.10"],"在typescript中":["106.1"],"我们定义对象的方式要用关键字interface":["106.1"],"接口":["106.1"],"会合并":["106.2"],"interface":["106.3","106.7"],"一旦定义了任意属性":["106.5"],"那么确定属性和可选属性的类型都必须是它的类型的子集":["106.5"],"readonly":["106.6"],"readonly只读属性是不允许被赋值的":["106.6"],"只能读取":["106.6"],"这里所说的对象类型":["107.0"],"类型用于表示所有的非原始类型":["107.1"],"即我们不能把":["107.1"],"等":["107.1"],"原始类型赋值给":["107.1"],"在严格模式下":["107.1"],"配置文件":["108.0","110.8"],"compileroptions":["108.0"],"基本选项":["108.0"],"指定":["108.0"],"ecmascript":["108.0"],"目标版本":["108.0"],"es2015":["108.0"],"es2016":["108.0"],"or":["108.0"],"esnext":["108.0"],"module":["108.0","110.8","121.7"],"commonjs":["108.0"],"指定使用模块":["108.0"],"amd":["108.0"],"system":["108.0"],"类型别名":["109.0"],"typescript里":["109.1"],"在有些没有明确指出类型的地方":["109.1"],"类型推论会帮助提供类型":["109.1"],"可以给一个类型定义一个名字":["109.2"],"多用于复合类型":["109.2"],"定义类型别名":["109.2"],"项目配置文档":["110.0"],"搭建后台管理系统模板":["110.1"],"项目初始化":["110.2"],"搭建一个":["110.2"],"初始化项目":["110.4","123.0","126.2"],"本项目使用":["110.4"],"eslint":["110.6","110.7","110.8"],"配置":["110.6"],"中文官网":["110.6"],"http":["110.6","118.12","120.16","120.17"],"cn":["110.6"],"最初是由":["110.6"],"nicholas":["110.6"],"zakas":["110.6"],"于":["110.6"],"环境代码校验插件":["110.7"],"让所有与prettier规则存在冲突的eslint":["110.7"],"rules失效":["110.7"],"并使用prettier进行代码检查":["110.7"],"修改":["110.8"],"eslintrc":["110.8"],"cjs":["110.8"],"see":["110.8"],"https":["110.8","110.10","117.4","117.6"],"bootcss":["110.8"],"com":["110.8","110.10","117.6"],"docs":["110.8","165.6","165.7","165.11"],"rules":["110.8"],"exports":["110.8"],"env":["110.8"],"es2021":["110.8"],"node":["110.8","117.0","119.1","119.3","121.12","121.15","124.0"],"jest":["110.8"],"指定如何解析语法":["110.8"],"parser":["110.8"],"优先级低于":["110.8"],"的语法解析配置":["110.8"],"集成":["110.9"],"sass":["110.9"],"我们目前在组件内部已经可以使用":["110.9"],"scss":["110.9"],"样式":["110.9"],"因为在配置":["110.9"],"stylelint":["110.9"],"工具的时候":["110.9"],"项目当中已经安装过":["110.9"],"mock":["110.10"],"数据":["110.10"],"安装依赖":["110.10"],"www":["110.10"],"npmjs":["110.10"],"package":["110.10"],"plugin":["110.10"],"pnpm":["110.10"],"d":["110.10"],"mockjs":["110.10"],"配置文件启用插件":["110.10"],"二次封装":["110.11"],"在开发项目的时候避免不了与后端进行交互":["110.11"],"因此我们需要使用":["110.11"],"插件实现发送网络请求":["110.11"],"在开发项目的时候":["110.11","110.12"],"我们经常会把":["110.11"],"进行二次封装":["110.11"],"目的":["110.11"],"接口统一管理":["110.12"],"接口可能很多需要统一管理":["110.12"],"目录下去创建":["110.12"],"部署刷新":["111.0"],"问题":["111.0"],"build打包项目":["111.1"],"数据库的常用命令":["112.0"],"database":["112.1","112.3"],"创建一个新的数据库":["112.1"],"drop":["112.1"],"insert":["112.2"],"into":["112.2"],"grant":["112.3"],"privileges":["112.3"],"字段的数据类型":["113.0"],"tinyint":["113.1"],"一个非常小的整数":["113.1"],"范围为":["113.1","113.2"],"有符号":["113.1"],"float":["113.2"],"单精度浮点数":["113.2"],"char":["113.3"],"固定长度的字符串":["113.3"],"存储日期":["113.4"],"yyyy":["113.4"],"mm":["113.4"],"存储布尔值":["113.5"],"数据库是用于组织和存储大量结构化数据的集合":["114.0"],"它是一种数据管理系统":["114.0"],"允许用户定义":["114.0"],"mysql是一种开源的关系型数据库管理系统":["114.1"],"由瑞典公司mysql":["114.1"],"ab开发并最终由oracle":["114.1"],"corporation收购":["114.1"],"mysql被广泛用于各种规模的应用程序和网站":["114.1"],"基本使用":["116.0","153.0"],"连接到":["116.1"],"mysql":["116.1","122.2","122.3"],"服务器":["116.1","120.16"],"创建数据库":["116.2"],"创建表":["116.4"],"插入数据":["116.5","122.3"],"使用以下命令向表中插入数据":["116.5"],"查询数据":["116.6","122.3"],"更新数据":["116.7"],"删除数据":["116.8"],"安装插件":["117.2"],"index":["117.4","165.7"],"文件并编写代码":["117.4"],"引入模块":["117.4"],"require":["117.4","118.4","118.7","120.4","120.12","120.16","120.17","121.21","121.22","121.23"],"cheerio":["117.4"],"爬取成功":["117.6"],"这时会多出来一个名叫":["117.6"],"files":["117.6"],"文件":["117.6"],"里面就是爬取出来的内容了":["117.6"],"title":["117.6","127.2"],"肖申克的救赎":["117.6"],"the":["117.6"],"shawshank":["117.6"],"redemption":["117.6"],"star":["117.6"],"pic":["117.6"],"img2":["117.6"],"doubanio":["117.6"],"view":["117.6"],"photo":["117.6"],"s":["117.6"],"ratio":["117.6"],"poster":["117.6"],"p480747492":["117.6"],"jpg":["117.6"],"霸王别姬":["117.6"],"img1":["117.6"],"p2561716440":["117.6"],"阿甘正传":["117.6"],"forrest":["117.6"],"gump":["117.6"],"官网传送门":["118.0"],"初体验":["118.1"],"express":["118.2","118.3","118.7","118.8"],"创建服务器":["118.2"],"监听客户端请求":["118.2"],"并返回内容":["118.2"],"方法可创建静态资源服务器":["118.3"],"向外开放访问静态资源":["118.3"],"在指定的静态目录中查找文件":["118.3"],"并对外提供资源的访问路径":["118.3"],"创建路由模块":["118.4"],"中间件":["118.5","122.11"],"中间件是指流程的中间处理环节":["118.5"],"服务器收到请求后":["118.5"],"定义的中间件为全局中间件":["118.6"],"定义中间件函数":["118.7"],"应用级别的中间件":["118.8"],"post":["118.8","118.14","118.15"],"绑定到":["118.8"],"实例上的中间件":["118.8"],"路由级别的中间件":["118.8"],"叫做路由级别的中间件":["118.8"],"用法和应用级别中间件没有区别":["118.8"],"跨域资源共享":["118.9"],"中间件解决跨域":["118.10"],"cross":["118.11"],"origin":["118.11","118.12"],"resource":["118.11"],"sharing":["118.11"],"常见响应头":["118.12"],"access":["118.12"],"control":["118.12"],"allow":["118.12"],"制定了允许访问资源的外域":["118.12"],"setheader":["118.12"],"请求分类":["118.13"],"请求方式":["118.14"],"请求方式为":["118.15"],"介绍":["119.0","134.3"],"nodejs":["119.1"],"an":["119.1"],"异步":["119.2","120.7"],"非阻塞":["119.2"],"io":["119.2","165.11"],"模型":["119.2"],"文件系统模块":["120.1"],"模块中所有的操作都有两种形式可供选择":["120.1"],"同步和异步":["120.1"],"同步文件系统会阻塞程序的执行":["120.1"],"也就是除非操作完毕":["120.1"],"fs":["120.3","120.4","120.6","120.9","120.10"],"readfile":["120.3"],"callback":["120.3","120.6","120.10"],"文件路径":["120.3"],"简单文件读取的方式会一次性读取文件内容到内存中":["120.4"],"若文件较大":["120.4"],"会占用过多内存影响系统性能":["120.4"],"且读取速度慢":["120.4"],"大文件适合用流式文件读取":["120.4"],"它会分多次将文件读取到内存中":["120.4"],"创建一个可读流":["120.4"],"writefile":["120.6"],"file":["120.6"],"同步":["120.7"],"简单文件的写入都不适合大文件的写入":["120.7"],"性能较差":["120.7"],"容易导致内存溢出":["120.7"],"缓冲区":["120.8"],"缓冲区文档":["120.8"],"的结构与数组类似":["120.8"],"操作方法也与数组类似":["120.8"],"dirname":["120.9"],"模块操作文件时":["120.9"],"验证路径是否存在":["120.10"],"exists":["120.10"],"existssync":["120.10"],"获取文件信息":["120.10"],"stat":["120.10"],"删除文件":["120.10"],"路径模块":["120.11"],"join":["120.12"],"basename":["120.13"],"extname":["120.14"],"模块":["120.15","122.2"],"服务器实例":["120.16"],"server":["120.17"],"createserver":["120.17"],"概念":["121.2"],"避免命名空间的冲突":["121.3"],"中模块化":["121.4"],"自定义模块中都有一个":["121.7"],"模块化规范":["121.8"],"模块第一次加载后会被缓存":["121.9"],"内置模块加载优先级最高":["121.10"],"加载自定义模块时":["121.11","121.21"],"路径要以":["121.11"],"若导入第三方模块":["121.12"],"会从":["121.12"],"当前模块的父目录":["121.12"],"开始":["121.12"],"当把目录作为模块标识符进行加载的时候":["121.13"],"有三种加载方式":["121.13","121.23"],"在被加载的目录下查找":["121.13"],"与包":["121.14"],"中的第三方模块又叫做":["121.15"],"在项目中安装包的命令":["121.16"],"的下包速度慢的问题":["121.17"],"注册":["121.18","125.1"],"账号":["121.18"],"初始化包的基本结构":["121.18"],"模块在第一次加载后会被缓存":["121.19"],"内置模块的加载优先级最高":["121.20"],"必须指定以":["121.21"],"如果传递给":["121.22"],"的模块标识符不是一个内置模块":["121.22"],"也没有以":["121.22"],"则":["121.22"],"当把目录作为模块标识符":["121.23"],"传递给":["121.23"],"进行加载的时候":["121.23"],"操作":["122.1"],"数据库":["122.3"],"db":["122.3"],"query":["122.3"],"users":["122.3"],"err":["122.3"],"results":["122.3"],"表示占位符":["122.3"],"sql":["122.3"],"开发模式":["122.4"],"服务器发送给客户端的":["122.5"],"页面":["122.5"],"是在服务器通过字符串的拼接动态生成的":["122.5"],"因此客户端不需要使用":["122.5"],"前后端分离的开发模式":["122.6"],"依赖于":["122.6"],"技术的广泛应用":["122.6"],"企业级网站":["122.7"],"认证机制":["122.9","122.12"],"工作原理":["122.10","122.13"],"session":["122.11","122.13"],"认证":["122.11"],"配置中间件":["122.11"],"认证的局限性":["122.13"],"认证机制需要配合":["122.13"],"才能实现":["122.13"],"由于":["122.13","138.7"],"默认不支持跨域访问":["122.13"],"jwt":["122.14"],"jsonwebtoken":["122.14"],"用于生成":["122.14"],"用于将":["122.14"],"字符串解析还原成":["122.14"],"secret":["122.14"],"密钥":["122.14"],"为保证":["122.14"],"的命令对比":["123.0"],"下面是一个包含":["123.0"],"命令对比的":["123.0"],"markdown":["123.0"],"表格":["123.0"],"以下是一些常用的":["124.3"],"init":["124.3","165.2"],"初始化一个新的":["124.3"],"项目":["124.3"],"是每个":["124.4"],"不仅可以帮助你管理项目的依赖项":["124.6"],"准备发布文件":["125.4"],"发布包":["125.5"],"更新和维护":["125.6"],"的安装与使用":["126.0"],"在开始之前":["126.1"],"后":["126.2"],"你可以使用以下常用命令来管理依赖关系和执行其他操作":["126.2"],"进入你的项目目录":["126.2"],"并运行以下命令来初始化项目":["126.2"],"shell":["126.2","165.3"],"路线":["128.1","130.1","130.2","130.3","130.4","132.1","132.2","134.1","134.2","135.1","135.2","135.3","135.5","136.1","137.1","137.2","137.3","137.4"],"高铁":["128.1","135.1","136.1","137.1"],"bullettrain":["128.1","135.1","136.1","137.1"],"front":["128.1","135.1","136.1"],"行程安排":["128.2","128.3","128.4","130.2","130.3","130.4","130.5","131.1","131.4","131.5","132.1","132.2","132.3","135.2","135.3","135.4","135.5","136.2","136.3","136.4","137.2","137.3","137.4","137.5"],"解放碑":["128.2"],"八一好吃街":["128.2","128.5"],"山城步道":["128.2"],"川美":["128.3"],"交通茶馆":["128.3"],"李子坝站":["128.3"],"鹅岭贰厂":["128.3"],"重庆三峡博物馆":["128.4"],"湖广会馆":["128.4"],"重庆自然博物馆":["128.4"],"较远":["128.4"],"相关事宜":["128.4","136.3"],"美食参考":["128.5","136.5","136.6"],"马房湾66号江湖菜":["128.5"],"机场":["130.1","134.1"],"airplane":["130.1","134.1"],"font":["130.1","130.2","130.3","130.4","131.1","132.2","132.4","134.1","135.3","135.5","136.1","137.2","137.3","144.6"],"3eaf7c":["130.1","130.2","130.3","130.4","131.1","132.2","132.4","134.1","137.2"],"南京禄口机场":["130.1"],"古鸡鸣寺":["130.2"],"明城墙":["130.2"],"玄武湖":["130.2"],"总统府":["130.2"],"新街口吃吃吃":["130.2"],"步行到":["130.2","135.5","137.2","137.3"],"号线":["130.2"],"新街口继续吃":["130.3"],"南京大屠":["130.3"],"杀遇难同胞纪念馆":["130.3"],"需提前预约":["130.3"],"夫子庙":["130.3"],"秦淮河":["130.3"],"老门东":["130.3"],"德基广场":["130.4"],"先锋书店":["130.4"],"南京博物馆":["130.4"],"酒吧街区":["130.4"],"步行至":["130.4"],"睡懒觉":["130.5","137.5"],"灵山工匠小镇槠溪老街":["131.4"],"特色小镇":["131.4"],"有小吃":["131.4"],"万历时代广场":["131.4"],"当前位置":["132.1"],"南昌":["132.1"],"万寿宫":["132.1"],"珠宝街":["132.1"],"秋水广场":["132.1"],"八一大桥":["132.1"],"居住":["132.1"],"江西省博物馆":["132.2"],"羊子巷":["132.2"],"滕王阁游轮":["132.2"],"新万达":["132.2"],"第一种":["132.3"],"八一起义纪念馆":["132.3"],"绳金塔":["132.3"],"699文化创意园":["132.3"],"象湖公园":["132.3"],"晚上":["132.3"],"国贸":["132.3"],"第二种":["132.3"],"动物园":["132.3"],"相关注意事项":["132.4"],"携带物品":["132.4"],"衣服":["132.4"],"根据当时气温和天气而定":["132.4"],"身份证":["132.4"],"牙膏牙刷":["132.4"],"毛巾":["132.4"],"沐浴露":["132.4"],"西湖十景":["134.2"],"宋城":["134.3"],"西溪湿地":["134.3"],"小河直街":["134.4"],"武汉美术馆":["135.2"],"吉庆街":["135.2"],"黎黄陂路街头博物馆":["135.2"],"古德寺庙":["135.2"],"汉口江滩":["135.2"],"黄鹤楼":["135.3"],"昙华林":["135.3"],"晴川阁":["135.3"],"武汉长江大桥":["135.3"],"走到":["135.3"],"武大":["135.4"],"需要在微信公众号":["135.4"],"武汉大学预约":["135.4"],"东湖":["135.4"],"欢乐谷":["135.5"],"橘子洲":["136.2"],"五一广场":["136.2"],"国金中心":["136.2"],"ifs":["136.2"],"太平街":["136.2"],"坡子街":["136.2"],"虾小龙吃虾":["136.2"],"岳麓山":["136.3"],"湖南大学":["136.3"],"美食街":["136.3"],"李自健美术馆":["136.3"],"谢子龙影像艺术馆":["136.3"],"湖南省博物馆":["136.4"],"烈士公园":["136.4"],"米粉街":["136.4"],"扬帆夜市":["136.4"],"粉":["136.5"],"甘长顺":["136.5"],"五一广场店":["136.5"],"百年历史粉面馆":["136.5"],"本地人力荐地道长沙味儿":["136.5"],"外地游客最多的":["136.6"],"太平老街":["136.6"],"天心区五一大道与太平交叉口":["136.6"],"头吃到尾":["136.6"],"大香肠":["136.6"],"臭豆腐":["136.6"],"炸炸炸":["136.6"],"植物园":["137.2"],"胡里山炮台":["137.2"],"曾厝垵":["137.2"],"书法广场":["137.2"],"白城沙滩":["137.2"],"中山路":["137.2"],"梧村小学":["137.2"],"乘坐":["137.2"],"路":["137.2"],"鼓浪屿":["137.3"],"微信公众号":["137.3"],"厦门轮渡有限公司":["137.3"],"南普陀寺":["137.4"],"厦门大学":["137.4"],"厦大预约":["137.4"],"猫街":["137.4"],"沙坡尾":["137.4"],"华侨博物馆":["137.4"],"中华城":["137.4"],"canvas":["138.0","138.1","138.2","138.6","138.7","138.8","141.1","146.2","147.3"],"坐标系统":["138.3"],"绘图上下文":["138.4"],"绘图元素":["138.5"],"创造交互式效果":["138.6"],"创造动画":["138.7"],"的局限性":["138.8"],"图像变换":["139.0"],"以下方法用于图像变换":["139.0"],"rotate":["139.1","147.3"],"canvasrenderingcontext2d":["139.1","139.2","139.3","139.4","139.5","142.1","142.2","142.4","144.6"],"scale":["139.2"],"方法用于缩放图像":["139.2"],"它接受两个参数":["139.2"],"分别是":["139.2"],"轴方向的缩放因子和":["139.2"],"translate":["139.3","147.3"],"方法接受一个变换矩阵的六个元素作为参数":["139.4"],"完成缩放":["139.4"],"旋转":["139.4"],"移动和倾斜等变形":["139.4"],"它的使用格式如下":["139.4"],"settransform":["139.5"],"方法取消前面的图形变换":["139.5"],"将画布恢复到该方法指定的状态":["139.5"],"该方法的参数与":["139.5"],"图像合成":["140.0"],"在默认情况之下":["140.0"],"over":["140.1"],"在目标图像上显示源图像":["140.1"],"atop":["140.1"],"在目标图像顶部显示源图像":["140.1"],"源图像位于目标图像之外的部分是不可见的":["140.1"],"strokestyle":["141.2"],"设置或返回描边颜色":["141.2"],"fillstyle":["141.2","143.0"],"设置或返回填充颜色":["141.2"],"stroke":["141.2"],"样式控制":["142.0"],"线性":["142.1"],"以下的方法和属性控制线条的视觉特征":["142.1"],"linewidth":["142.1"],"指定线条的宽度":["142.1"],"默认为":["142.1"],"渐变色":["142.2"],"以下方法用于设置渐变效果和图像填充效果":["142.2"],"createlineargradient":["142.2"],"定义线性渐变样式":["142.2"],"createradialgradient":["142.2"],"定义辐射渐变样式":["142.2"],"createpattern":["142.2","142.3"],"定义图像填充样式":["142.2"],"方法按照给定直线":["142.2"],"生成线性渐变的样式":["142.2"],"x0":["142.2"],"图像填充":["142.3"],"方法定义一个图像填充样式":["142.3"],"在指定方向上不断重复该图像":["142.3"],"填充指定的区域":["142.3"],"image":["142.3","144.5"],"阴影":["142.4"],"以下属性用于设置阴影":["142.4"],"shadowblur":["142.4"],"阴影的模糊程度":["142.4"],"save":["143.0","147.3"],"保存当前环境的状态":["143.0"],"restore":["143.0"],"返回之前保存过的路径状态和属性":["143.0"],"绘制图形":["144.0","158.0"],"绘制矩形fillrect":["144.2"],"strokerect":["144.2"],"位置x":["144.2"],"位置y":["144.2"],"宽度":["144.2"],"圆弧":["144.3"],"arc":["144.3","158.4"],"圆心x":["144.3"],"圆心y":["144.3"],"半径":["144.3"],"开始的角度":["144.3"],"结束的角度":["144.3"],"顺时针false":["144.3"],"逆时针true":["144.3"],"默认值false":["144.3"],"beginpath":["144.4"],"moveto":["144.4","145.1","145.2"],"三种绘制图片的的方式":["144.5"],"drawimage":["144.5"],"dx":["144.5"],"dy":["144.5"],"以下方法和属性用于绘制文本":["144.6"],"filltext":["144.6"],"在指定位置绘制实心字符":["144.6"],"stroketext":["144.6"],"在指定位置绘制空心字符":["144.6"],"measuretext":["144.6"],"返回一个":["144.6"],"textmetrics":["144.6"],"指定字型大小和字体":["144.6"],"贝塞尔曲线":["145.0"],"聊天框":["145.1"],"爱心":["145.2"],"cbtn":["146.1","149.4"],"ggk":["146.2"],"谢谢惠顾":["146.2"],"mycanvas":["146.2"],"当前浏览器不支持canvas":["146.2"],"请下载最新的浏览器":["146.2"],"clock":["147.1"],"getcontext":["147.3"],"2d":["147.3"],"clearrect":["147.3"],"存档":["147.3"],"保存当前坐标位置和上下文对象":["147.3"],"参考视频教程":["148.0"],"plum":["148.1"],"draw":["149.1"],"boldbtn":["149.3"],"粗线条":["149.3"],"thinbtn":["149.3"],"细线条":["149.3"],"savebtn":["149.3"],"保存签名":["149.3"],"inputcolor":["149.3"],"clearbtn":["149.3"],"橡皮擦":["149.3"],"btns":["149.4"],"该内容正在努力建设中":["150.0"],"事件交互":["151.0"],"为精灵添加交互事件":["151.1"],"sprite":["151.1","154.2","157.3"],"创建矩形":["151.2"],"rect":["151.2","161.4"],"pixijs":["152.0","152.1","152.7"],"是一个基于":["152.1"],"下面是一个简单的":["152.7"],"展示了如何创建一个基本的场景并添加一个可交互的精灵":["152.7"],"创建一个场景":["152.7"],"类详解":["153.2"],"导入pixi":["153.2","154.1","156.1","157.1","160.1","160.2"],"pixi":["153.2","154.1","154.2","156.1","156.3","160.1","160.2"],"创建应用":["153.2","154.1","157.1","160.1","160.2"],"文字与遮罩":["154.0"],"创建一个精灵":["154.2"],"滤镜特效":["156.0"],"创建模糊滤镜":["156.2"],"blurfilter":["156.2"],"filters":["156.3"],"精灵与动画":["157.0"],"创建纹理与精灵":["157.2"],"设置属性":["157.3"],"锚点":["157.3"],"ellipse":["158.1"],"polygon":["158.2","161.7"],"roundedrectangle":["158.3"],"谷歌恐龙小游戏素材":["159.1"],"资源管理":["160.0"],"application":["160.1","160.2"],"innerwidth":["160.1","160.2"],"svg":["161.1","161.7","161.9"],"scalable":["161.1"],"circle":["161.5"],"cllipse":["161.6"],"polyline":["161.8"],"threejs":["162.0"],"学习指南":["162.0"],"中文官方文档":["162.0"],"是一种用于在":["162.0"],"浏览器中创建交互式":["162.0"],"3d":["162.0"],"图形的":["162.0"],"它允许开发人员在":["162.0"],"应用程序中轻松地渲染":["162.0"],"scene1":["163.2"],"scene2":["163.5"],"group":["163.9","163.12","164.5"],"scene":["163.11"],"位移和旋转":["164.0"],"例如设置x轴放大3倍":["164.1"],"直接设置旋转属性":["164.3"],"从":["165.0"],"创建项目":["165.1","165.3"],"vitepress":["165.2","165.7"],"运行":["165.4"],"基本配置":["165.5"],"在目录下新建":["165.6"],"文件夹":["165.6"],"在其中新建":["165.6"],"配置首页":["165.7"],"支持用户使用":["165.7"],"yaml":["165.7"],"配置页面的内容":["165.7"],"中可以开始我们的配置":["165.9"],"先写上如下内容":["165.9"],"这是网站的标题和描述":["165.9"],"标题会在浏览器标签上展示":["165.9"],"themeconfig":["165.10"],"省略前面的内容":["165.10"],"部署到":["165.11"],"github":["165.11"],"新建脚本文件":["165.11"],"deploy":["165.11"],"sh":["165.11"],"文件夹处于同一级":["165.11"]},{"0":["6.25","17.10","20.18","20.20","21.3","28.2","29.5","29.12","32.3","32.13","43.6","45.2","45.3","49.2","54.3","54.6","54.7","82.7","110.7","138.3","139.2","142.4","143.0","144.3","157.3","161.9","165.0"],"1":["6.25","9.1","14.6","16.14","16.16","17.6","17.10","17.12","20.17","21.3","21.10","22.3","22.5","28.19","28.24","28.31","28.32","29.11","30.3","32.4","33.7","33.12","34.15","38.0","43.6","49.0","54.5","54.6","54.7","57.3","58.6","58.12","65.3","69.8","73.6","83.5","87.5","87.6","88.1","88.2","89.29","99.20","107.1","113.2","128.2","128.3","130.3","131.4","132.1","132.3","135.2","135.4","136.2","136.4","137.5","146.2","149.3","160.1","160.2","162.0"],"2":["4.9","5.10","6.31","14.6","16.14","16.15","17.5","17.6","17.10","17.12","17.18","20.5","21.3","22.2","22.3","22.5","28.32","32.3","32.4","33.7","45.4","54.5","54.7","54.9","58.12","68.1","76.8","83.6","84.6","87.1","87.6","89.0","89.1","99.7","99.8","99.21","110.5","110.7","111.1","122.2","128.4","132.2","135.2","135.3","135.5","136.3","137.2","144.3","146.2","147.3","149.3","161.1"],"3":["6.32","14.6","16.15","17.3","17.10","17.12","21.11","21.16","22.2","28.32","29.1","33.2","50.3","54.7","68.2","84.6","93.1","99.8","130.2","132.2","136.6","137.2"],"4":["13.4","14.2","16.15","22.2","28.32","32.13","54.3","54.5","54.7","68.2","117.6","130.2","132.4","137.2"],"5":["13.4","14.2","22.2","29.12","32.13","35.6","68.2","139.2","157.3"],"6":["14.2","17.12","65.1","110.6","110.7"],"7":["130.1","130.4","136.1"],"8":["6.23","6.24","6.25","57.2","78.22","110.7","147.3"],"9":["69.7","132.2"],"10":["33.3","34.14","34.18","65.3","68.1","68.2","158.5"],"12":["137.3","137.4","147.3"],"13":["67.14"],"16":["78.22","120.8"],"17":["132.2"],"18":["20.3","20.4","20.22","35.2","73.3","102.8"],"23":["65.1"],"24":["20.4"],"27":["110.7"],"28":["22.11"],"30":["73.18"],"32":["113.1"],"38":["113.2"],"43":["137.3"],"50":["139.2","139.5","144.2"],"55":["34.2"],"65":["137.2"],"79":["68.1"],"100":["32.3","143.0","144.2"],"120":["145.2"],"150":["144.2","144.3"],"170":["147.3"],"190":["147.3"],"200":["52.5"],"234":["32.3"],"255":["113.1","113.3"],"300":["52.5","144.4","145.2"],"308":["68.1"],"339":["136.5"],"400":["141.1"],"404":["120.17"],"475":["136.5"],"500":["135.2"],"600":["149.3","152.7"],"768":["113.1"],"800":["152.7"],"1000":["149.3"],"1999":["13.4"],"2009":["13.4"],"123456":["98.6"],"用于清除内外边距":["4.1"],"优点":["4.2"],"css":["4.3","4.5","4.7","4.8","6.18","6.19","6.20","8.3","8.7","11.2","24.4","56.4"],"通过元素":["4.4"],"beaauty":["4.5"],"语法":["4.5","29.9","29.10","78.0","85.6","101.14","110.9"],"中间没有空格":["4.5"],"又称":["4.6"],"分组选择器":["4.6"],"p":["4.9","58.10"],"p0":["4.9"],"dom":["4.10","4.14","57.4","79.11","81.11","81.13","81.14","81.15","83.6","85.13","90.8","90.9"],"a":["4.11","19.3","20.17","21.12","26.2","32.4","35.8","47.1","73.6","73.8","91.9","101.12","102.10","104.2","104.4","106.2","106.3","107.1","120.4","121.23","139.4"],"link":["4.11","81.11","81.13","81.14","86.5"],"链接一开始的样式":["4.11"],"nth":["4.12"],"n":["4.12","101.9"],"第":["4.12"],"个子元素":["4.12"],"of":["4.12","17.5","21.10","21.12"],"type":["4.12","23.2","23.3","25.11","43.8","43.9","52.5"],"指定元素":["4.12"],"属性的":["4.13"],"元素":["4.13","142.3"],"创建了一个行内元素":["4.14"],"在":["4.14","5.8","6.30","12.0","13.4","46.1","52.0","60.0","69.1","70.1","77.15","77.16","78.7","78.9","78.16","79.5","79.6","80.0","80.12","80.13","82.0","83.0","83.1","84.0","86.4","89.29","90.3","90.5","92.5","110.9","116.2","124.5"],"树中无法找到":["4.14"],"故为伪元素":["4.14"],"必须有":["4.14"],"content":["4.14","5.9","5.10","6.24","6.25","11.2","52.5","61.2","91.9"],"属性":["4.14","11.2","14.2","32.10","77.10","80.0","89.2"],"选择器":["4.14"],"含义":["4.14"],"在元素内部前面插入内容":["4.14"],"只需在要成为":["5.1"],"可以使用":["5.2","5.4","74.1","121.7"],"direction":["5.2","5.5","144.6"],"属性更改主轴方向":["5.2"],"定义":["5.3"],"flex":["5.3","8.3"],"项目在主轴上的对齐方式":["5.3"],"start":["5.3","144.6"],"默认值":["5.3","142.1"],"如果项目超出了容器的宽度":["5.4"],"它们会缩小以适应":["5.4"],"grow":["5.6"],"属性可以控制项目在剩余空间中的放大比例":["5.6"],"basis":["5.7"],"属性定义了项目的基准尺寸":["5.7"],"项目内部可以再创建一个新的":["5.8"],"属性控制交叉轴上多行的对齐方式":["5.9"],"定义多行":["5.9"],"和":["5.10","6.6","6.10","6.11","6.13","6.14","6.15","6.16","25.9","34.6","46.2","52.1","76.10","79.10","87.3","91.17","107.1","118.2","142.2","152.1"],"align":["5.10","6.13","6.14","6.15"],"items":["5.10","127.2"],"属性实现水平和垂直居中对齐":["5.10"],"两端对齐":["5.10"],"使用":["5.10","53.18","74.4","102.4","102.5","116.1","116.8"],"现代网页布局的终极解决方案":["6.0"],"布局":["6.1","6.2","6.27","6.28","8.8","24.4"],"布局是一种二维布局模型":["6.1"],"可以将网页划分为网格":["6.1"],"要使用":["6.2"],"grid":["6.2","6.4","6.5","6.9","6.21","6.26","6.27","6.28","6.30","6.33"],"通过定义网格的行和列":["6.3"],"我们可以创造出复杂的网页布局":["6.3"],"在网格容器中":["6.3"],"通过":["6.3","20.6","34.6","88.2","91.12"],"布局中":["6.4"],"网格线":["6.4"],"lines":["6.4"],"rows":["6.6","6.11"],"允许通过指定网格区域的名称来创建更具语义的布局":["6.7"],"通过在网格容器中使用网格区域名称":["6.7"],"而不是使用行和列属性":["6.7"],"是":["6.8","13.3","14.1","58.2","63.0","64.0","66.2","67.0","77.20","78.1","86.1","105.1","138.1"],"columns":["6.8","6.11"],"gap":["6.9"],"row":["6.10","6.16"],"auto":["6.12"],"flow":["6.12"],"self":["6.15"],"创建网格布局":["6.17"],"track":["6.18"],"是相邻网格线之间的空间":["6.18"],"包括行轨道和列轨道":["6.18"],"我们可以通过设置网格轨道的大小和增长方式来控制网格布局":["6.18"],"template":["6.19","6.33","89.7","89.10","89.14","89.30","90.5","91.8","91.11","147.4","148.2","153.1","155.1","159.2"],"我们可以更加直观地定义网格布局":["6.19"],"使得布局结构更加清晰":["6.19"],"queries":["6.20"],"我们可以在不同的屏幕尺寸和设备上应用不同的网格布局":["6.20"],"container":["6.20","8.1","8.2","8.7"],"display":["6.20","8.3"],"doctype":["6.22","24.1","31.3","77.23","85.4"],"lang":["6.22","6.23","6.24","110.9"],"en":["6.22","6.23","6.24","57.2"],"head":["6.22","6.23","6.24","24.1","57.2","118.15"],"meta":["6.22","6.23","6.24","24.1","57.2"],"charset":["6.22","6.23","6.24","6.25","24.1","57.2"],"utf":["6.22","6.23","6.24","6.25","57.2"],"name":["6.23","6.24","6.25","15.18","15.19","17.10","19.2","19.4","20.22","22.8","22.10","22.11","28.21","42.1","45.3","53.2","53.4","53.6","63.6","64.6","70.1","70.2","71.2","74.2","76.3","91.9","99.1","102.6","102.8","106.3","124.3"],"viewport":["6.23","6.24","6.25"],"width":["6.25","8.5","9.3","11.2","23.7","41.2","149.3","152.7","153.2","154.1","156.1"],"device":["6.25"],"initial":["6.25"],"scale":["6.25"],"title":["6.25","165.7","165.9"],"布局与":["6.26"],"适用场景":["6.27"],"布局的差异与共同点":["6.28"],"常见问题与最佳实践":["6.29"],"网格项目的排序与定位":["6.30"],"跨浏览器兼容性":["6.31"],"性能考虑":["6.32"],"使用网格模板":["6.33"],"和网格区域":["6.33"],"选择器的优先级为":["7.0"],"important":["7.0"],"b":["7.1","16.15","21.12","32.3","32.4","34.18","47.1","139.4"],"c":["7.1","111.0","120.4","139.4"],"格式":["7.1"],"id":["7.1","36.1","61.0","87.6"],"选择器的个数":["7.1"],"html":["8.1","23.0","25.0","25.1","25.2","25.3","25.4","25.5","25.6","25.7","25.8","25.9","25.10","25.12","25.14","25.15","31.2","31.3","57.1","58.10","78.12","85.4","85.10","85.12","161.6"],"div":["8.1","9.0","26.1","85.17","89.7","89.30","90.5","91.8","91.11","94.4","148.2"],"class":["8.1","8.2","9.0","12.3","12.4","12.5","12.6","15.18","78.18","79.3","79.8","79.13","80.3","80.5","80.7","80.8","80.9","80.15","82.4","82.7","83.3","83.5","84.3","102.2","102.7","102.10"],"400px":["8.5","8.6","9.3"],"height":["8.5","8.6","10.0","101.13","141.1","149.3","152.7","153.2","154.1","156.1","160.1"],"200px":["8.6"],"background":["8.6","10.0"],"skyblue":["8.6"],"position":["8.6","164.2"],"100px":["9.1"],"设置元素的宽度":["9.1"],"限定宽度":["9.3"],"border":["9.3"],"solid":["9.3","11.1"],"横向":["10.0"],"color":["10.0","128.1","128.4","132.1","132.3","135.1","135.2","135.4","135.5","136.1","137.1","137.4"],"ededed":["10.0"],"滚动条上的按钮":["10.0"],"left":["11.1"],"5px":["11.1"],"transparent":["11.1"],"right":["11.1"],"bottom":["11.1"],"类名通常首字母大写":["12.1"],"js":["12.1","12.2","12.3","12.5","15.9","15.11","15.12","15.13","15.14","15.23","15.25","16.3","16.4","16.7","16.8","16.10","17.17","17.19","18.4","18.6","18.8","18.9","18.11","18.16","18.20","20.22","21.2","21.8","21.13","21.14","21.17","22.6","28.7","28.8","28.9","28.10","28.14","28.17","28.19","28.23","28.26","28.28","28.29","28.30","28.31","29.1","29.4","29.8","29.10","29.12","30.0","30.2","30.7","31.1","31.4","34.4","34.7","34.15","35.4","43.4","46.2","49.1","49.3","49.4","49.5","51.1","51.2","51.3","58.9","59.1","59.2","61.1","61.2","67.14","73.2","73.7","73.10","73.11","73.12","73.13","73.14","73.15","73.16","73.19","73.20","76.5","76.11","81.10","85.1","87.0","87.3","87.6","89.8","89.18","89.19","89.20","91.2","93.1","98.2","105.3","118.3","118.8","119.2","119.3","120.13","122.2","122.5","122.11","122.14","124.2","126.1","139.1","139.5","141.1","146.2","156.3","157.2","157.4","165.6"],"person":["12.1","15.18","20.3","20.4","20.22","22.9","22.10","53.2","70.2","71.2","74.2","102.8","102.10"],"关键字":["12.2"],"const":["12.2","15.16","15.19","15.21","15.22","15.23","16.4","16.7","16.8","16.10","17.11","17.16","19.2","19.3","19.4","20.8","20.22","22.4","22.5","22.9","22.10","43.8","46.2","49.1","49.3","49.4","49.6","51.0","51.2","51.3","52.4","58.9","61.1","69.9","73.6","73.8","73.11","73.12","73.13","73.14","73.16","73.19","73.20","74.2","78.19","78.21","80.3","81.15","86.6","87.6","98.6","106.7","118.8","120.14","122.11","122.14","154.1"],"extends":["12.3","53.8","78.18","79.3","79.13","80.3","80.7","80.8","80.9","80.10","80.11","80.15","82.7","83.5","110.8"],"关键字来继承另一个类的属性和方法":["12.3"],"student":["12.4"],"而不是类的实例":["12.5"],"mathutils":["12.5"],"circle":["12.6"],"constructor":["12.6","15.18","71.2","78.18","82.7","83.5","102.1","102.6","102.8"],"radius":["12.6"],"this":["12.6","15.18","19.3","53.2","53.4","53.6","71.1","73.4","76.10","82.3","82.6","82.7","83.5","91.9"],"阮一峰ecmascript":["13.1"],"是一种由":["13.2"],"ecma":["13.2"],"国际":["13.2"],"european":["13.2"],"computer":["13.2"],"是一个脚本语言":["13.3"],"注意":["13.3","73.4","120.12"],"也是脚本语言":["13.3"],"通常可以看作是":["13.3"],"的基础上做了大量改进":["13.4"],"包括正则表达式":["13.4"],"异常处理":["13.4"],"更严格的错误定义等":["13.4"],"es4":["13.4"],"未完成":["13.4"],"被放弃":["13.4"],"在制定过程中遇到了较大的争议和复杂性":["13.4"],"最终被放弃":["13.4"],"相关特性后来分别在后续版本中被引入":["13.4"],"es5":["13.4"],"添加了严格模式":["13.4"],"strict":["13.4"],"mode":["13.4","120.6"],"提供更安全的编程环境":["13.4"],"新增了":["13.4"],"json":["13.4","52.5","121.13","121.18","121.23","124.3","126.2","165.2"],"对象":["13.4","16.3","17.10","18.18","18.19","20.6","36.0","37.0","38.0","39.0","40.0","41.0","42.0","65.2"],"使得操作":["13.4"],"判断":["14.2"],"中是否包含指定的键":["14.2"],"返回布尔值":["14.2"],"delete":["14.2","116.8"],"从":["14.2"],"中删除指定键及其对应的值":["14.2"],"返回一个布尔值":["14.2"],"表示是否删除成功":["14.2"],"clear":["14.2"],"清空":["14.2"],"中的所有键值对":["14.2"],"size":["14.2"],"用于获取":["14.2"],"value1":["14.4","16.12","112.2"],"key2":["14.4"],"value2":["14.4","16.12","112.2"],"可以将":["14.4"],"二维":["14.4"],"new":["14.5","16.12","16.13","16.14","16.16","17.17","21.4","43.8","61.2","65.5","87.6","151.2","152.7","153.2","154.1","156.1","156.2","158.1"],"map":["14.5","16.6","21.15","83.4"],"key1":["14.5"],"one":["14.6"],"two":["14.6"],"three":["14.6"],"作为一种脚本语言":["15.1"],"其应用范围也越来越广泛":["15.1"],"代码中":["15.2"],"所有的变量":["15.2"],"函数和类等都只在当前模块的作用域内有效":["15.3"],"每个模块都有自己的职责":["15.4"],"提高了代码的可重用性":["15.5"],"es6":["15.6","15.24","15.28","74.1","78.11"],"export":["15.7","15.8","15.17","15.19","15.21","110.10","165.9"],"关键字导出一个函数":["15.8"],"module1":["15.9"],"import":["15.10","15.14","80.15","81.10","83.2","83.3","83.4","84.2","84.3","84.4","84.5","86.3","89.17","89.18","89.19","89.20","98.2","110.7","110.12","157.1","163.6"],"关键字导入其他模块中的单个变量":["15.11"],"关键字导入其他模块中的函数":["15.12"],"main":["15.13","15.14"],"一个模块还可以有一个默认导出":["15.15"],"age":["15.16","17.10","19.2","20.18","20.22","22.8","22.11","35.2","45.3","63.6","64.6","70.2","73.3","73.18","101.13","102.1","102.6","102.8"],"default":["15.17","110.10","165.9"],"function":["15.17","17.19","30.3","30.7","30.12","35.1","35.8","45.1","47.1","53.6","55.2","55.4","70.1","70.2","70.3","71.1","76.3","78.14","78.17","78.19","97.3","101.8","103.2","104.2","104.3","104.7","117.4","118.8"],"as":["15.20","81.11","81.13","81.14","101.14","157.1"],"myage":["15.22"],"这样可以优化代码加载":["15.23"],"提高页面的响应速度":["15.23"],"需要在":["15.26"],"无需显式指定":["15.27"],"总结":["15.28","119.2"],"模块化是一种优雅":["15.28"],"对象是值的集合":["16.1"],"对象尾部添加一个元素":["16.3"],"返回该":["16.3"],"对象内的所有元素":["16.4"],"s":["16.4","16.7","20.4","109.2"],"set":["16.5","16.7","16.14","16.16","89.7","102.10","157.3","165.11"],"prototype":["16.5","53.2","53.4","68.2"],"has":["16.5","21.15"],"会在此之后返回":["16.5"],"false":["16.5","28.20","32.11","33.9","34.6","34.15","34.16","87.6","113.5","122.11","144.3"],"value":["16.6","21.12","32.2","63.1","64.1","73.5","89.13","91.17","101.14","104.6"],"数组":["16.6"],"为了使这个方法和":["16.6"],"对象保持相似":["16.6"],"中存在与否":["16.7"],"对象中的按插入顺序排列的所有元素的值":["16.8"],"set1":["16.8"],"与":["16.9","90.6"],"对象中的值的个数":["16.10"],"实现的一些方法":["16.11"],"value3":["16.12"],"myset":["16.13"],"就用传递的参数":["17.2"],"if":["17.3","28.24","47.4","47.5","52.5","54.4","70.3","91.13","97.5","98.3","98.4","122.3"],"typeof":["17.3","34.5"],"undefined":["17.3","17.4","17.6","22.4","30.7","32.10","33.3","34.15","76.8","107.1"],"或者明确的传递":["17.4"],"typeerror":["17.5"],"cannot":["17.5"],"read":["17.5"],"property":["17.5","89.12"],"上面代码只使用了对象的解构赋值默认值":["17.5"],"没有使用函数参数的默认值":["17.5"],"只有当函数":["17.5"],"的参数是一个对象时":["17.5"],"y":["17.6","103.1"],"return":["17.6","17.12","17.15","20.6","28.24","47.1","47.4","48.3","48.6","48.7","54.3","73.4","80.11","98.4","98.5","103.1","110.10","122.3"],"options":["17.7","120.10"],"再优化":["17.7"],"rest":["17.9"],"syntax":["17.9"],"arrlike":["17.10"],"job":["17.10"],"而它所对应的数组应该是这样子的":["17.10"],"arr":["17.10","21.9","21.10","49.0","49.3","49.4","49.6","51.0","51.4","54.5","54.6","54.7","104.6"],"这里我们说类数组对象与数组的性质相似":["17.10"],"是因为类数组对象在":["17.10"],"访问":["17.10"],"赋值":["17.10"],"获取长度":["17.10"],"上的操作与数组是一致的":["17.10"],"具体内容可查阅相关的类数组使用":["17.10"],"在函数体中定义了":["17.10"],"也不能省略圆括号":["17.11"],"add":["17.11","47.1","103.2","103.3","104.3","104.6","123.0","165.2"],"也可以":["17.12"],"console":["17.12","18.4","18.13","19.5","20.3","20.12","20.13","20.14","20.22","29.6","29.12","32.12","32.13","33.11","35.3","35.6","39.2","40.2","53.4","54.3","54.4","73.15","76.3","89.28","97.3","97.5","101.8","109.2","118.7","118.8","122.3"],"log":["17.12","19.5","20.13","20.14","20.22","29.6","29.12","32.12","32.13","35.3","35.6","39.2","40.2","53.4","54.3","54.4","73.15","76.3","89.28","101.8","109.2","118.7","118.8","122.3"],"与解构赋值结合使用":["17.12"],"函数中的":["17.13"],"arguments":["17.13","103.4"],"引入了箭头函数":["17.14"],"arrow":["17.14"],"parameter1":["17.15"],"parameter2":["17.15"],"函数体":["17.15","30.3"],"没有参数":["17.16"],"greet":["17.16"],"比如函数是否作为对象的方法调用":["17.17"],"是否使用":["17.17"],"关键字等":["17.17"],"而在箭头函数中":["17.17"],"继承自上层作用域":["17.17"],"指向的是定义箭头函数的外层函数或代码块的":["17.17"],"传统函数中的this":["17.17"],"如果箭头函数的函数体为空或只有一个表达式":["17.18"],"可以省略花括号和":["17.18"],"都不允许最后一个参数后面出现逗号":["17.19"],"clownseverywhere":["17.19"],"param1":["17.19"],"param2":["17.19"],"结构":["17.20"],"以前明确要求":["17.20"],"命令后面必须跟参数":["17.20"],"我们也可将字符串常用的操作方法归纳为增":["18.1"],"而是创建字符串的一个副本":["18.2","18.5"],"let":["18.3","18.4","18.8","18.9","18.13","18.16","18.20","21.4","21.5","21.8","21.9","22.6","28.8","28.9","28.10","28.14","28.17","28.19","28.23","28.26","28.29","28.30","28.31","29.12","34.2","34.3","34.4","48.3","48.6","49.2","54.6","70.2","89.4","101.1","101.5","101.12","107.1","109.1","109.2","147.3","149.3"],"stringvalue":["18.3","18.4","18.8","18.9"],"hello":["18.3","18.4","69.9","77.22"],"这三个方法都返回调用它们的字符串的一个子字符串":["18.4"],"而且都接收一或两个参数":["18.4"],"world":["18.4","69.9","77.22"],"再进行操作":["18.5"],"后或前后所有空格符":["18.6"],"再返回新的字符串":["18.6"],"表示要将字符串复制多少次":["18.7"],"然后返回拼接所有副本后的结果":["18.7"],"直至满足长度条件":["18.8"],"没有第二个参数默认空格":["18.8"],"由传给方法的整数参数指定":["18.11"],"如果没找到":["18.12"],"则返回":["18.12","33.9","33.10"],"message":["18.13","91.9","98.4","122.3"],"foobarbaz":["18.13"],"返回参数指定位置的字符":["18.14"],"支持负索引":["18.14"],"针对正则表达式":["18.17"],"regexp":["18.18","18.19","69.4"],"返回数组":["18.18"],"找到则返回匹配索引":["18.19"],"可用函数":["18.20"],"引入了模板字符串":["19.1"],"john":["19.2","22.8","63.6","64.6","74.2"],"multilinetext":["19.3"],"is":["19.3","91.9"],"multi":["19.3"],"javascript":["19.4","20.8","20.11","20.12","20.20","22.4","22.10","31.3","32.11","35.5","43.1","45.1","46.1","47.3","52.3","52.4","53.6","53.8","55.2","56.4","62.1","62.3","63.6","64.6","67.0","69.1","69.2","69.9","70.1","74.2","76.3","78.2","78.8","86.3","86.6","86.7","87.5","87.6","105.2","108.0","110.6","119.1","124.1","138.7"],"values":["19.5","28.23","112.2","122.3"],"包含模板字符串中的文本部分":["19.5"],"等同于":["20.1","32.13"],"上面代码中":["20.1","20.6","32.10"],"变量":["20.1"],"直接写在大括号里面":["20.1"],"这时":["20.1"],"属性名就是变量名":["20.1"],"属性值就是变量值":["20.1"],"sex":["20.4","20.18","73.3"],"man":["20.4"],"ex2":["20.4"],"属性名由数字":["20.5"],"字母":["20.5"],"object":["20.6","32.3","32.9","66.1","74.1","74.2","74.4"],"setprototypeof":["20.6"],"方法之中":["20.6"],"apple":["20.8"],"shape":["20.9"],"球形":["20.9"],"taste":["20.9","20.15"],"甜":["20.9","20.15"],"pen":["20.9","20.15"],"则没有任何效果":["20.11"],"没有属性便为空":["20.12"],"字符串在对象中展开":["20.13"],"alex":["20.13","20.22"],"feature":["20.15"],"x":["20.17","22.6","65.5","101.5","103.1","103.2","103.3","139.3","145.2"],"zhangsan":["20.18","76.11"],"male":["20.18"],"param":["20.18"],"后者的":["20.20"],"nan":["20.20","34.16","101.2"],"不等于自身":["20.20"],"以及":["20.20"],"等于":["20.20"],"缺乏一种运算":["20.20"],"如果目标对象与源对象有同名属性":["20.21"],"或多个源对象有同名属性":["20.21"],"则后面的属性会覆盖前面的属性":["20.21"],"汇总":["20.21"],"基本用法":["20.21","20.22"],"属性的键值对数组":["20.22"],"返回键数组":["20.22"],"数组新增方法":["21.0"],"将参数中所有值作为元素形成数组":["21.1"],"没有参数则返回空数组":["21.1"],"array":["21.6","21.9","21.10","28.0","49.1","66.1","89.28"],"复制起始位置":["21.11"],"可选":["21.11","68.2"],"复制结束位置":["21.11"],"key":["21.12","32.2","63.1","63.2","64.1","64.2","73.5","100.4"],"for":["21.13","21.14","29.12","92.4","96.2","147.3"],"的":["21.15","32.10","87.2","89.31"],"方法用于查找值":["21.15"],"指定转换的嵌套层数":["21.16"],"方法":["21.17","43.5","46.2","52.4","54.0","67.10","76.12","82.4"],"参数1":["21.17"],"遍历函数":["21.17"],"destructuring":["22.0"],"assignment":["22.0"],"将数组的元素提取出来并赋值给变量":["22.1"],"numbers":["22.3","22.4","22.5","28.30","28.31","28.32","83.5"],"将对象的属性值提取出来并赋值给变量":["22.7"],"fullname":["22.9"],"bob":["22.11"],"address":["22.11"],"而且可以指定多个":["23.0"],"可以用来解决某些兼容问题":["23.0"],"h2":["23.0"],"音频示例":["23.0"],"audio":["23.0","25.15"],"类型":["23.1","101.14"],"mime":["23.2","23.3"],"标签":["23.5","23.6"],"src":["23.7","87.3","128.0","130.0","131.0","134.0","136.0","137.0"],"要播放的视频的":["23.7"],"url":["23.7","39.1","42.1","81.5","98.5","118.3","120.17"],"作用":["23.8"],"controls":["23.10"],"source":["23.10","119.1"],"播放":["23.11"],"暂停":["23.11"],"makebig":["23.11"],"放大":["23.11"],"makesmall":["23.11"],"文档通常包含以下结构":["24.1"],"内容":["24.2"],"有些标签是空标签":["24.2"],"没有结束标签":["24.2"],"br":["24.2","33.3","149.3"],"用于插入换行":["24.2"],"引入了许多新特性":["24.3"],"如语义化标签":["24.3"],"添加样式和图像":["24.4"],"然后逐渐增加复杂性":["24.4"],"学习如何使用":["24.4"],"h6":["25.1"],"li":["25.5","25.6","56.4"],"td":["25.9"],"action":["25.13"],"submit":["25.13"],"method":["25.13","118.15"],"h1":["25.14","90.5","90.12","94.1","94.2"],"网站标题":["25.14"],"并且在前后都会产生换行":["26.1"],"常见的块级标签包括":["26.1"],"最通用的容器标签":["26.1"],"用于将一组元素包裹在一起":["26.1"],"而是按照文本的自然流动排列":["26.2"],"常见的内联标签包括":["26.2"],"锚链接标签":["26.2"],"形成树状的结构":["26.3"],"例如":["26.3","26.4","89.29","91.13"],"可以将一段文本包裹在":["26.3"],"属性以键值对的形式出现":["26.4"],"放在标签的开始标签中":["26.4"],"规范中没有定义":["26.5"],"但可以在特定的应用中使用":["26.5"],"自定义标签应以":["26.5"],"data":["26.5","87.1","88.1","94.4"],"为前缀":["26.5"],"placeholder":["27.1","47.5"],"请输入登录密码":["27.1"],"v":["27.1","85.7","85.14","89.29","91.13","91.14","96.2","99.18","104.4"],"model":["27.1","85.14"],"创建数组":["28.1"],"利用数组字面量创建数组":["28.1"],"数组的字面量是方括号":["28.1"],"用来访问数组元素的序号":["28.2"],"数组下标从":["28.2"],"开始":["28.2"],"数组可以通过索引来访问":["28.2"],"设置":["28.2","88.2"],"修改对应的数组元素":["28.2"],"我们可以通过数组名":["28.2"],"的形式来获取数组中的元素":["28.2"],"数组基本操作可以归纳为":["28.5"],"第四种则不会对原数组产生影响":["28.6"],"并将它们添加到数组末尾":["28.7"],"返回数组的最新长度":["28.7"],"然后返回新的数组长度":["28.8"],"插入的元素":["28.9"],"返回空数组":["28.9"],"colors":["28.10","28.14","28.15"],"red":["28.10","28.15","60.1","101.6","143.0"],"最后一项不影响原数组":["28.11"],"length":["28.12","28.13","49.2"],"值":["28.12","28.13","43.6","101.14"],"返回被删除的项":["28.12","28.13"],"返回包含删除元素的数组":["28.14"],"green":["28.15"],"blue":["28.15"],"yellow":["28.15"],"purple":["28.15"],"常用":["28.16"],"返回删除元素的数组":["28.17"],"对原数组产生影响":["28.17"],"返回元素坐标或者元素值":["28.18"],"true":["28.20","28.28","32.3","32.11","33.7","33.10","34.15","34.16","56.1","101.3","108.0","151.1","165.7"],"否则":["28.20","84.4"],"people":["28.21","101.13"],"matt":["28.21"],"数组有两个方法可以用来对元素重新排序":["28.22"],"else":["28.24","54.4","85.9"],"常见的转换方法有":["28.25"],"返回包含所有项的字符串":["28.26"],"常用来迭代数组的方法":["28.27"],"则这个方法返回":["28.28","28.29"],"条件分支语句":["29.1"],"循环语句":["29.1"],"i":["29.1","29.5","29.12","32.12","49.2","69.10","110.6","147.3"],"条件表达式2":["29.2"],"tip":["29.2","30.8","46.2","58.12"],"执行流程":["29.2"],"表达式":["29.3"],"case":["29.3"],"表达式1":["29.3"],"代码":["29.3","31.3","78.2"],"break":["29.3"],"中一共有三种循环语句":["29.4"],"var":["29.5","32.8","34.3","34.14","35.4","36.2","45.1","45.2","45.3","55.1","55.2","55.3","55.4","63.6","64.6","73.2","76.3","76.11","120.7","146.2","149.3"],"包括数组和其他可枚举属性的对象":["29.9"],"不适用于迭代数组元素的值":["29.9"],"迭代的顺序不一定是按照属性在对象中的顺序":["29.9"],"可能会有不可预测的结果":["29.9"],"通常不推荐用于迭代数组":["29.9"],"因为它可能会迭代数组的原型链上的属性":["29.9"],"等":["29.10","79.11"],"迭代的顺序是按照对象的迭代协议定义的顺序":["29.10"],"通常是按照对象中元素的顺序":["29.10"],"不会迭代对象的属性":["29.10"],"只迭代值":["29.10"],"循环虽然都是用于迭代对象的方法":["29.11"],"但它们有一些不同之处":["29.11"],"迭代对象的内容不同":["29.11"],"循环迭代对象的是键名":["29.11"],"会终止离他最近的循环":["29.12"],"里面":["30.0"],"必须小写":["30.2"],"是把一个或者多个功能通过函数的方式封装起来":["30.4"],"同样也需要传递相应的参数":["30.6"],"实参":["30.6"],"参数的作用":["30.6"],"在函数内部某些值不能固定":["30.6"],"我们可以通过参数在调用函数时传递不同的值进去":["30.6"],"多的参数定义为":["30.7"],"函数形参实参个数匹配":["30.7"],"getsum":["30.7"],"num1":["30.7","34.2"],"num2":["30.7"],"此时调用函数就可以得到函数体内return":["30.8"],"后面的值":["30.8"],"注意事项":["30.8"],"在使用":["30.8","54.9"],"语句时":["30.8"],"函数会停止执行":["30.8"],"语句之后的代码不被执行":["30.8"],"并返回指定的值":["30.8"],"只能返回一个值":["30.8"],"如果用逗号隔开多个值":["30.8"],"的区别":["30.9"],"结束当前的循环体":["30.9"],"声明":["30.11"],"通常用于在":["31.0"],"web":["31.0","56.4","63.0","64.0","77.0","118.2"],"浏览器中编写交互式前端代码":["31.0"],"示例":["31.1","71.1","71.2","74.2"],"它需要被嵌入":["31.2"],"代码写在独立的以":["31.4"],"注释单行代码":["31.6"],"注释多行代码":["31.7"],"什么是对象":["32.2"],"简单说":["32.2"],"对象就是一组":["32.2"],"键值对":["32.2"],"的集合":["32.2"],"1e2":["32.3"],"1e":["32.3"],"0xff":["32.3"],"01":["32.3"],"引擎读到上面这行代码":["32.5"],"会发现可能有两种含义":["32.5"],"第一种可能是":["32.5"],"这是一个表达式":["32.5"],"表示一个包含":["32.5"],"属性的对象":["32.5"],"第二种可能是":["32.5"],"这是一个语句":["32.5"],"上面代码分别采用点运算符和方括号运算符":["32.7"],"读取属性":["32.7"],"请注意":["32.7"],"如果使用方括号运算符":["32.7"],"键名必须放在引号里面":["32.7"],"否则会被当作变量处理":["32.7"],"foo":["32.7","32.8"],"bar":["32.7"],"obj":["32.8","46.2","73.5","73.9","73.10","73.17","73.20","107.1"],"keys":["32.9"],"命令删除对象":["32.10"],"删除后":["32.10"],"再读取":["32.10"],"属性就会返回":["32.10"],"如果包含就返回":["32.11"],"否则返回":["32.11","33.9","33.10"],"它的左边是一个字符串":["32.11"],"表示属性名":["32.11"],"右边是一个对象":["32.11"],"键名":["32.12"],"键值":["32.12"],"例二":["32.13"],"document":["32.13","36.2","58.7","61.1","62.2","62.4","146.2","149.3","152.7","160.1","160.2"],"links":["32.13"],"href":["32.13"],"也被称为":["33.1"],"操作符":["33.1"],"减":["33.2"],"乘":["33.2"],"空赋值":["33.3"],"只有当变量的值为":["33.3"],"null":["33.3","34.15","79.4"],"或":["33.3","34.3","79.9","86.2","113.5","120.9","121.11","121.21"],"还是":["33.5","33.6","90.1"],"都会使原变量立刻增加":["33.5"],"不同的是":["33.5"],"和后自减":["33.6"],"无论是":["33.6"],"小于号":["33.7"],"时":["33.9","33.10","58.2","65.4","76.1","80.4","80.5"],"precedence":["33.13"],"是不一样的":["33.13"],"优先级高的运算符先执行":["33.13"],"优先级低的运算符后执行":["33.13"],"基本类型主要为以下":["34.1"],"intnum":["34.2"],"10进制的55":["34.2"],"070":["34.2"],"8进制的56":["34.2"],"当使用":["34.3"],"声明了变量但没有初始化时":["34.3"],"标示":["34.4"],"逻辑上讲":["34.5"],"值表示一个空对象指针":["34.5"],"这也是给":["34.5"],"不可变的":["34.7"],"符号的用途是确保对象属性使用唯一标识符":["34.7"],"不会发生属性冲突的危险":["34.7"],"复杂类型统称为":["34.8"],"常用方式为对象字面量表示法":["34.9"],"但跟其他语言不同的是":["34.10"],"数组中每个槽位可以存储任意类型的数据":["34.10"],"也有属性和方法":["34.11"],"跟其他引用类型一样":["34.11"],"函数存在三种常见的表达方式":["34.11"],"函数声明":["34.11"],"还包括":["34.12"],"类型转换指将一种数据类型转换为其他类型":["34.13"],"tostring":["34.14"],"num":["34.14","101.12","104.2"],"布尔值":["34.15"],"转换为":["34.15","34.16","78.2"],"其余是":["34.16"],"字符串":["34.16"],"空串":["34.16"],"基本数据类型和引用数据类型存储在内存中的位置不同":["34.17"],"obj2":["34.19","76.3"],"简单类型的值存放在栈中":["34.20"],"在栈中存放的是对应的值":["34.20"],"合法":["35.1"],"声明作用域":["35.1"],"一个函数内部定义一个变量":["35.1"],"在函数退出时被销毁":["35.1"],"test":["35.1"],"局部变量":["35.1"],"会被提升":["35.3"],"声明的变量则会":["35.4"],"引擎会自动将多余的声明在作用域顶部合并为一个声明":["35.5"],"循环逻辑":["35.6"],"之后则不会":["35.6"],"因为遇到":["35.6"],"就会形成作用域块":["35.6"],"但是他是常量":["35.7"],"声明之后不能修改":["35.7"],"尝试修改":["35.7"],"声明的变量会导致运行时错误":["35.7"],"tom":["35.8"],"getelementbyid":["36.1","146.2","149.3"],"获取具有指定":["36.1"],"的元素":["36.2"],"element":["36.2","59.2","60.1","61.1","61.2"],"back":["37.1"],"导航到上一个页面":["37.1","37.2"],"history":["37.2"],"以下是一些常见的":["38.0"],"window":["38.0","42.2","48.1","48.4","153.2","154.1","156.1"],"它是":["38.0","80.1"],"的顶级对象":["38.0"],"表示浏览器窗口或标签页":["38.0"],"protocol":["39.1"],"location":["39.2","111.0"],"useragent":["40.1"],"包含用户代理字符串":["40.1"],"navigator":["40.2"],"屏幕的宽度":["41.1"],"屏幕宽度":["41.2"],"screen":["41.2"],"像素":["41.2"],"获取屏幕的高度":["41.2"],"specs":["42.1"],"open":["42.2","43.4","43.6","52.5","119.1"],"https":["42.2","77.23","90.11","154.2"],"and":["43.1"],"xml":["43.1","57.1","77.9","78.1"],"异步交互需要服务器逻辑进行配合":["43.2"],"需要完成以下步骤":["43.2"],"创建":["43.2","43.3","99.14","118.2","124.6"],"xmlhttprequest":["43.3"],"对象的":["43.4","43.5"],"方法与服务器建立连接":["43.4"],"xhr":["43.4","43.8"],"send":["43.5"],"将客户端页面的数据发送给服务端":["43.5"],"属性有五个状态":["43.6"],"如下显示":["43.6"],"状态":["43.6","77.11"],"描述":["43.6"],"unsent":["43.6"],"未打开":["43.6"],"方法还未被调用":["43.6"],"opened":["43.6"],"创建xmlhttprequest对象":["43.8"],"初始化参数的内容":["43.8"],"post":["43.9","118.2"],"datatype":["43.9"],"group":["44.1","163.3"],"closure":["45.0"],"它可以访问其外部函数中的变量和参数":["45.1"],"outerfunction":["45.1","55.2","55.4"],"counter":["45.2"],"count":["45.2","82.7"],"increaseage":["45.3"],"这种方式可以避免全局命名冲突":["45.4"],"并提供了一种模块化的封装方式":["45.4"],"创建工厂函数":["45.4"],"可以创建工厂函数":["45.4"],"用于生成对象实例":["45.4"],"因此":["45.5","82.5"],"在使用闭包时要注意内存管理":["45.5"],"避免过度使用闭包导致内存泄漏":["45.5"],"对其中一个对象的修改会影响到另一个对象":["46.1"],"中":["46.1","52.0","69.1","70.1","78.4","78.5","78.7","79.6","81.10","84.1","87.2","89.0","89.29","118.3"],"stringify":["46.2"],"deepcopy":["46.2"],"以下是一个简单的示例来说明":["47.1"],"函数柯里化的概念和用法":["47.1"],"可以将函数的执行延迟到后续的调用中":["47.2"],"这在需要等待特定条件满足或事件发生时非常有用":["47.2"],"函数组合":["47.2"],"可以轻松地将多个函数组合成一个新的函数":["47.2"],"curried":["47.4","47.5","47.6"],"args":["47.4","47.5","47.6","48.3","48.7","89.28"],"includes":["47.5"],"curry":["47.6"],"func":["47.6","48.6"],"节流":["48.0"],"throttling":["48.0"],"和防抖":["48.0"],"debouncing":["48.0"],"则立即执行函数并设置定时器":["48.2"],"如果定时器存在":["48.2"],"则忽略该次函数调用":["48.2"],"当定时器触发后":["48.2"],"清除定时器":["48.2","79.13"],"以便在下次函数调用时重新开始计时":["48.2"],"以下是一个简单的节流函数的实现示例":["48.2"],"oldtime":["48.3"],"date":["48.3","65.5"],"now":["48.3"],"newtime":["48.3"],"防抖的实现思路是设置一个定时器":["48.5"],"在函数被调用时先清除之前的定时器":["48.5"],"并设置一个新的定时器":["48.5"],"如果在指定的时间内没有新的函数调用发生":["48.5"],"wait":["48.6"],"immediate":["48.6"],"timeout":["48.6"],"timerid":["48.7"],"cleartimeout":["48.7"],"settimeout":["48.7"],"len":["49.2"],"unique":["49.3","49.4","49.6"],"filter":["49.5"],"事件循环机制":["50.0"],"在执行代码时会按照代码语句的顺序执行形成一个执行栈":["50.1"],"默认会从上到下依次执行":["50.1"],"执行过程中会将任务分成两类":["50.1"],"table":["50.2"],"并注册函数":["50.2"],"异步任务又可以分为宏任务和微任务":["50.2"],"微任务":["50.2"],"process":["50.2"],"nexttick":["50.2"],"microtask":["50.3"],"微任务队列任务":["50.3"],"当前微任务执行完后":["50.3"],"判断是否有":["50.3"],"ui":["50.3","77.1"],"渲染如果有就执行渲染过程":["50.3"],"没有就跳过":["50.3"],"flat":["51.1"],"res2":["51.2"],"flatten":["51.3"],"res5":["51.4"],"fn":["51.4"],"对象代表一个异步操作的最终完成或失败":["52.0"],"并返回一个值":["52.0"],"构造函数来创建":["52.1"],"它接收一个带有两个参数的回调函数":["52.1"],"回调函数包含两个参数":["52.1"],"resolve":["52.1"],"reject":["52.1"],"实例的":["52.2"],"then":["52.2","52.4","97.3"],"方法可以处理异步操作成功的结果":["52.2"],"方法中返回新的":["52.3"],"实例":["52.3","87.3","98.2"],"可以将多个异步操作连接起来":["52.3"],"实例都成功完成时才会成功":["52.4"],"并将所有":["52.4"],"实例的结果作为一个数组传递给":["52.4"],"promises":["52.4"],"promise1":["52.4"],"setrequestheader":["52.5"],"application":["52.5","152.7","153.2","154.1","156.1"],"onload":["52.5"],"status":["52.5"],"responsetext":["52.5"],"中每个对象的基础":["53.1"],"每个":["53.1","82.1"],"sayhello":["53.2"],"你可以通过":["53.3"],"proto":["53.3"],"属性来访问对象的原型对象":["53.3"],"eat":["53.4"],"我们已经看到了这种方式的示例":["53.6"],"animal":["53.6","70.1","70.3","102.2"],"方法是一种更简单的方式来创建一个对象并指定其原型":["53.7"],"它接受一个原型对象作为参数":["53.7"],"然后返回一个新对象":["53.7"],"它提供了一种更简单的方式来实现原型继承":["53.8"],"类可以使用":["53.8"],"关键字继承另一个类的属性和方法":["53.8"],"方法允许你在运行时更改对象的原型":["53.9"],"这个方法接受两个参数":["53.9"],"要更改原型的对象和新的原型对象":["53.9"],"中的原型继承与传统面向对象编程语言中的继承有一些重要区别":["53.10"],"动态性":["53.11"],"原型链":["53.12"],"对象与类":["53.13"],"有一些最佳实践可以帮助你编写更清晰":["53.14"],"避免直接修改内建对象的原型":["53.15"],"将方法添加到原型上":["53.16"],"注意原型链中的属性和方法覆盖":["53.17"],"reduce":["54.1","54.4"],"callbackfn":["54.1"],"initialvalue":["54.1"],"sum":["54.3"],"prev":["54.3"],"cur":["54.3","54.4"],"newarr":["54.4"],"pre":["54.4","90.4"],"in":["54.4","99.15","127.2","140.1"],"result":["54.8","97.3"],"subject":["54.8"],"math":["54.8","144.3"],"score":["54.8"],"并将结果返回为单个值的情况":["54.9"],"方法时":["54.9"],"作用域是指变量和函数在代码中可访问的范围":["55.0"],"globalvariable":["55.1","55.3"],"global":["55.1","55.3","55.4","99.1","100.3"],"outervariable":["55.2"],"如果找不到":["55.3"],"就会向上一级作用域继续查找":["55.3"],"直到找到该变量或达到全局作用域":["55.3"],"variable":["55.4"],"动态创建任意":["56.1"],"clonenode":["56.1"],"复制现有的":["56.1"],"传入参数":["56.1"],"会复制所有子节点":["56.1"],"appendchild":["56.1","160.1","160.2"],"也需要关注两个因素":["56.2"],"首先由父节点删除子节点":["56.2"],"其次是要删除哪个子节点":["56.2"],"removechild":["56.2"],"树中的任意节点都不是孤立存在的":["56.3"],"的子节点":["56.4"],"基础":["56.4"],"实际应用中非常灵活":["56.5"],"nextsibling":["56.5"],"获取后一个节点":["56.5"],"等文档结构的编程接口":["57.1"],"它将文档表示为一个树状结构":["57.1"],"每个节点都是文档中的一个元素":["57.1"],"主要分为元素节点":["57.3"],"属性节点":["57.3"],"文本节点等":["57.3"],"元素节点":["57.3"],"其实就是":["57.3"],"内置的专门用于":["57.4"],"的对象":["57.4"],"该对象包含了若干的属性和方法":["57.4"],"它是用来描述程序的行为或状态的":["58.1"],"一旦行为或状态发生改变":["58.1"],"等待事件发生":["58.2"],"触发":["58.2"],"便立即调用一个函数":["58.2"],"addeventlistener":["58.2"],"应该将其从元素上移除":["58.3"],"当用户双击鼠标左键时触发":["58.5"],"mousedown":["58.5"],"当用户按下鼠标按钮时触发":["58.5"],"此事件在按下任何鼠标按钮时都会触发":["58.5"],"包括左键":["58.5"],"中键和右键":["58.5"],"mouseup":["58.5"],"当用户释放鼠标按钮时触发":["58.5"],"mousemove":["58.5","58.11"],"当用户移动鼠标指针时触发":["58.5"],"queryselector":["58.6","58.7"],"input":["58.7"],"剪切还是使用其他输入方法":["58.8"],"只要文本框内容发生变化":["58.8"],"就会触发":["58.8"],"change":["58.8"],"目标元素等":["58.9"],"你可以在事件处理程序中使用这些信息来执行逻辑操作":["58.9"],"btn":["58.9"],"方法来停止事件冒泡":["58.10"],"body":["58.10","160.1","160.2"],"h3":["58.10"],"事件流":["58.10"],"click":["58.11","90.4","149.4"],"mouseover":["58.11"],"mouseout":["58.11"],"使用事件委托的过程如下":["58.12"],"选择一个合适的父元素":["58.12"],"该元素包含你希望委托处理的子元素":["58.12"],"将事件监听器绑定到父元素上":["58.12"],"监听你希望处理的事件类型":["58.12"],"createelement":["59.0","78.2"],"创建新的元素节点":["59.0"],"方法创建新元素":["59.1"],"attributename":["59.2"],"attributevalue":["59.2"],"parentelement":["59.3"],"newelement":["59.3"],"这将把":["59.3"],"backgroundcolor":["60.1","153.2","156.1","160.1","160.2"],"这里的":["60.1"],"classname":["60.2"],"移除类名":["60.2"],"remove":["60.2"],"根据元素的":["61.0"],"获取元素节点":["61.0"],"传入元素的":["61.1"],"或者":["61.2","105.7"],"是一种在客户端浏览器上存储数据的机制":["62.0"],"允许开发者在用户计算机中存储和检索有关网站的信息":["62.0"],"属性是一个字符串":["62.1"],"包含一个或多个以分号分隔的键值对":["62.1"],"属性来获取存储在浏览器中的所有":["62.2"],"的过期时间设置为过去的时间来删除":["62.3"],"返回的是一个字符串":["62.4"],"包含当前域名下的所有":["62.4"],"需要自行解析和处理字符串来获取特定":["62.4"],"方法将数据存储到":["63.1","64.1"],"getitem":["63.2","64.2"],"方法根据键从":["63.2","64.2"],"localstorage":["63.3","63.4","63.5"],"parse":["63.6","64.6"],"方法将其还原":["63.6","64.6"],"user":["63.6","64.6","99.1"],"sessionstorage":["64.3","64.4","64.5"],"表示星期六":["65.1"],"getfullyear":["65.1"],"获取四位数的年份":["65.1"],"返回值为一个年份":["65.1"],"gethours":["65.1"],"获取小时数":["65.1"],"getmilliseconds":["65.1"],"获取毫秒数":["65.1"],"关键词来定义":["65.2"],"以下代码定义了名为":["65.2"],"年":["65.3","110.6"],"月":["65.3"],"日":["65.3","65.4"],"00":["65.4","132.2"],"分":["65.4"],"供开发者使用":["66.0"],"这些对象提供了一些常用或者基本而必要的功能":["66.0"],"属性和方法":["66.0"],"基础对象":["66.1"],"是用于表示和操作数组的对象":["66.3"],"是用于表示和操作字符串的对象":["66.4"],"是用于表示和操作数字的对象":["66.5"],"是表示和操作布尔值的对象":["66.6"],"是用于表示日期和时间的对象":["66.7"],"是用于进行数学计算的对象":["66.8"],"它提供了一系列与正则表达式相关的方法":["66.9"],"如匹配":["66.9"],"替换等":["66.9"],"pi":["67.1","144.3","147.3"],"函数":["67.4","67.13"],"返回一个浮点":["67.4"],"伪随机数范围从":["67.4"],"返回的是一个数字四舍五入的整数":["67.7"],"返回基数":["67.10"],"base":["67.10","165.9"],"的指数":["67.10"],"不管正数还是负数":["67.14"],"直接去掉小数点及之后的部分":["67.14"],"约为":["68.1"],"parseint":["68.2"],"string":["68.2","102.1","102.6","102.8","102.10","109.2"],"radix":["68.2"],"将字符串转换为整数":["68.2"],"表示进制数":["68.2"],"默认为":["68.2","142.4"],"parsefloat":["68.2"],"将字符串转换为浮点数":["68.2"],"可以用来搜索":["69.1"],"替换和提取字符串中的特定部分":["69.1"],"将正则表达式模式包围起来":["69.3"],"后面可以跟上一些修饰符":["69.3"],"构造函数创建正则表达式":["69.4"],"匹配字符串的开头":["69.5"],"以下是常用的修饰符":["69.6"],"g":["69.6","69.10","105.7"],"z0":["69.7"],"匹配多个字母或数字字符":["69.7"],"search":["69.8"],"并返回第一个匹配的索引":["69.8"],"如果没有找到则返回":["69.8"],"replace":["69.8"],"使用新的字符串替换匹配正则表达式的结果":["69.8"],"并返回替换后的字符串":["69.8"],"使用编号访问捕获的子串":["69.9"],"str":["69.9","109.2"],"pattern":["69.9"],"match":["69.9"],"以下是常用的正则表达式标志":["69.10"],"全局匹配":["69.10"],"找到所有匹配项而不仅仅是第一个":["69.10"],"表单验证":["69.11"],"使用正则表达式验证用户输入的表单数据":["69.11"],"如邮箱":["69.11"],"电话号码":["69.11"],"可以通过原型链实现继承":["70.1"],"子类的原型对象指向父类的实例":["70.1"],"从而继承了父类的属性和方法":["70.1"],"父类":["70.1"],"并提供公有方法来访问和操作这些私有属性来实现":["70.2"],"私有属性":["70.2"],"由于其动态类型特性":["70.3"],"多态是天然支持的":["70.3"],"animalsound":["70.3"],"类是一种用于创建对象的模板或蓝图":["71.0"],"而构造函数是用于创建类的实例的特殊函数":["71.0"],"它们是面向对象编程的两种不同方式":["71.0"],"关键字来实例化对象":["71.1"],"构造函数内部使用":["71.1"],"关键字来引用新创建的对象":["71.1"],"并定义对象的属性和方法":["71.1"],"构造函数定义":["71.1"],"而对象则是类的实例":["71.2"],"类的方法在原型上定义":["71.2"],"因此实例共享相同的方法":["71.2"],"es6类定义":["71.2"],"面向对象是一种编程范式":["72.1"],"也称为函数成员":["72.2"],"类":["72.2","78.11"],"类是对象的模板或蓝图":["72.2"],"它定义了对象将具有的属性和方法":["72.2"],"类是一种抽象的概念":["72.2"],"它描述了对象的共同特征":["72.2"],"创建对象":["73.2"],"男":["73.3"],"sayhi":["73.3"],"构造函数约定首字母大写":["73.4"],"函数内的属性和方法前面需要添加":["73.4"],"表示当前对象的属性和方法":["73.4"],"构造函数中不需要":["73.4"],"返回结果":["73.4"],"当我们创建对象的时候":["73.4"],"必须用":["73.4"],"propertiesobject":["73.5","73.7"],"创建一个新对象":["73.5"],"使用现有的对象作为新对象的原型":["73.5"],"entries":["73.5"],"返回一个给定对象自身可枚举属性的":["73.5"],"obj1":["73.6","76.3","76.11"],"sym":["73.13"],"myproto":["73.14"],"及以上版本中":["74.1"],"getprototypeof":["74.1"],"来访问原型":["74.1"],"它指向该对象的原型对象":["74.1"],"它是所有对象的根原型":["74.2"],"共享属性和方法":["74.3"],"原型允许多个对象共享相同的属性和方法":["74.3"],"create":["74.4","165.3"],"规范":["75.0"],"优化和可靠的代码":["75.0"],"并避免一些常见的错误":["75.0"],"严格模式对于旧版":["75.0"],"代码的兼容性考虑较少":["75.0"],"因此需要显式地启用它":["75.0"],"严格模式可以应用到整个脚本文件或单个函数中":["75.0"],"启用整个脚本文件的严格模式":["75.0"],"函数执行":["76.1"],"解析器在调用函数每次都会向函数内部传递进一个隐含的参数":["76.2"],"全局的name属性":["76.3"],"smyh":["76.3"],"sayname":["76.3"],"vae":["76.3"],"中的箭头函数并不使用上面的准则":["76.4"],"而是会继承外层函数调用的":["76.4"],"指向":["76.5","76.8","76.10","76.11"],"可以":["76.7"],"调用":["76.7","87.4","87.5"],"一个函数":["76.7"],"与此同时":["76.7","76.10"],"this的指向并没有被改变":["76.8"],"此时相当于":["76.8"],"改变":["76.8"],"它还可以改变这个函数内部的":["76.10"],"这一点":["76.10"],"nickname":["76.11"],"数字1":["76.12"],"数字2":["76.12"],"数字3":["76.12"],"可以获取":["76.12"],"多个数值中的最大值":["76.12"],"另外":["76.12"],"由于":["76.12"],"方法在传递实参时":["76.12"],"把":["76.14","122.14"],"call":["76.14"],"apply":["76.14"],"这三个方法做一下对比":["76.14"],"你会发现":["76.14"],"实际开发中":["76.14"],"用于构建用户界面":["77.1"],"它专注于构建高性能":["77.1"],"可维护且可复用的":["77.1"],"组件":["77.1","81.12"],"使开发者能够轻松构建交互性的用户界面":["77.1"],"组件化开发":["77.3"],"react":["77.3","77.6","77.7","77.8","77.12","77.13","77.15","77.20","77.24","78.1","78.2","78.9","78.20","79.13","80.1","80.3","80.9","80.10","80.11","80.13","80.14","80.15","81.3","81.11","82.5","83.6","84.1","84.3","84.5","108.0","110.8"],"采用了虚拟":["77.4"],"技术":["77.4"],"它在内存中维护了一个虚拟的":["77.4"],"单向数据流":["77.5"],"拥有一个庞大的生态系统":["77.6"],"组件是":["77.8"],"中最重要的概念之一":["77.8"],"它是构建用户界面的基本单元":["77.8"],"是一种类似":["77.9"],"生命周期":["77.12","79.0"],"允许处理用户的交互事件":["77.13"],"如点击":["77.13"],"条件渲染":["77.14"],"条件渲染是根据条件来决定是否渲染组件或显示不同的内容":["77.14"],"处理用户输入的表单数据是常见的任务":["77.16"],"状态提升":["77.17"],"hoc":["77.18"],"高阶组件是一个函数":["77.18"],"上下文":["77.19"],"context":["77.19","139.4","139.5","144.2","149.3"],"利用":["77.21","138.7"],"为了通过":["77.22"],"写一个":["77.22"],"程序":["77.22"],"可以使用网站":["77.23"],"www":["77.23"],"bootcdn":["77.23"],"cn":["77.23","110.4"],"提供的":["77.23"],"链接":["77.23"],"完整代码举例":["77.23"],"shell":["77.24","117.2","165.4"],"npm":["77.24","86.2","92.7","117.2","118.10","122.2","124.4","125.1","125.5"],"init":["77.24","92.6","123.0","126.2"],"latest":["77.24","92.6","110.8"],"这个转换过程将":["78.2"],"jsx":["78.4","78.5","78.6","78.7","78.8","78.14","79.3","79.8","79.11","79.13","80.5","80.15","81.10","82.4","82.7","83.2","83.3","83.4","84.2","84.3","84.4","84.5","108.0","110.8"],"我们可以像写":["78.4"],"可以通过属性来传递数据给组件":["78.5"],"支持标签的嵌套":["78.6"],"可以将多个标签组合在一起形成复杂的":["78.6"],"支持在大括号内使用":["78.8"],"接受一个":["78.10"],"props":["78.10","78.15","78.17","78.21","79.1","79.8","79.9","83.5","90.7"],"对象作为参数":["78.10"],"继承自":["78.11"],"我们可以像使用":["78.12"],"支持条件渲染":["78.13"],"greeting":["78.14","78.15"],"productlist":["78.17"],"来收集用户的输入并实时更新组件的状态":["78.18"],"formexample":["78.18"],"component":["78.18","79.13","80.3","80.10","80.11","82.7","83.5","85.16"],"temperatureconverter":["78.19"],"celsius":["78.19"],"setcelsius":["78.19"],"usestate":["78.19"],"中实现组件的复用逻辑的技术":["78.20"],"是一个函数":["78.20"],"接受一个组件作为参数":["78.20"],"一层层传递":["78.21"],"上下文提供了一种便捷的方式来在组件之间共享数据":["78.21"],"尤其对于跨多层级的组件共享数据非常有用":["78.21"],"引入的新特性":["78.22"],"用于在函数组件中添加状态":["78.22"],"副作用和其他":["78.22"],"用于初始化状态和绑定方法":["79.1"],"static":["79.1"],"getderivedstatefromprops":["79.1"],"在组件创建和更新阶段调用":["79.1"],"用于根据":["79.1"],"更新状态":["79.1"],"render":["79.1","80.3","80.10","80.11","163.8"],"我们可以初始化组件的状态":["79.3"],"state":["79.3","79.4","79.8","79.9","83.5"],"和绑定方法":["79.3"],"mycomponent":["79.3","79.8","79.13","80.7","80.8","80.9","80.10","80.15","82.4"],"作为参数":["79.4","79.10"],"并返回一个对象来更新":["79.4"],"或者返回":["79.4"],"表示不需要更新":["79.4"],"方法中":["79.5"],"我们可以进行一些副作用操作":["79.6","79.11"],"比如发送网络请求":["79.6","79.11"],"订阅事件":["79.6","79.11"],"更新":["79.8"],"我们可以根据新的":["79.9"],"判断是否需要重新渲染组件":["79.9"],"返回":["79.9"],"更新之前调用":["79.10"],"它接收":["79.10"],"prevprops":["79.10"],"prevstate":["79.10"],"操作":["79.11"],"释放资源等":["79.13"],"中用于向组件传递数据的一种机制":["80.1"],"properties":["80.1"],"父组件":["80.3","91.6"],"parentcomponent":["80.3","82.7"],"我们希望在未传递某个":["80.4"],"组件能够使用一个默认值":["80.4"],"这时可以通过设置组件的":["80.4"],"可以使用解构赋值来简化代码":["80.5"],"可以接收各种类型的数据":["80.6"],"提供的一种机制":["80.14"],"用于对组件的":["80.14"],"进行类型检查":["80.14"],"在开发过程中":["80.14"],"可以帮助我们及时发现和修复传递错误类型的":["80.14"],"增加代码的健":["80.14"],"壮性和可维护性":["80.14"],"proptypes":["80.15"],"from":["80.15","81.11","83.2","83.3","83.4","84.2","84.3","84.5","89.4","89.6","89.17","110.10","110.12","157.1"],"prop":["80.15"],"types":["80.15","101.6"],"实现单页应用的导航":["81.0"],"路由是指在":["81.1"],"应用中实现页面之间导航的技术":["81.1"],"的基本概念":["81.2"],"router":["81.3","81.9","81.11","86.1","86.5"],"中的核心概念之一":["81.3"],"嵌套路由":["81.4"],"嵌套路由是指在一个页面组件中嵌套另一个页面组件":["81.4"],"路径中传递参数":["81.5"],"并将参数传递给页面组件进行处理":["81.5"],"路由链接":["81.6"],"路由链接是用于在页面中生成导航链接的组件":["81.6"],"除了使用路由链接进行页面导航外":["81.7"],"还可以通过编程式导航的方式实现页面切换":["81.7"],"首先需要在项目中安装":["81.8"],"一旦安装了":["81.9"],"每个页面都是一个独立的组件":["81.10"],"可以使用函数组件或类组件来定义":["81.10"],"home":["81.10","81.11","81.13","81.14","81.15","94.1","94.2","165.7"],"browserrouter":["81.11","81.13","81.14"],"在顶层组件中渲染":["81.12"],"route":["81.12","81.14"],"从而实现页面导航":["81.12"],"about":["81.13","81.14","81.15"],"contact":["81.15"],"userprofile":["81.15"],"是组件内部的一种特殊变量":["82.1"],"用于存储组件的可变数据":["82.1"],"通常在组件的构造函数中初始化":["82.3"],"可以通过":["82.3"],"属性来定义组件的":["82.3"],"setstate":["82.4","82.6","82.7"],"这样做的原因是为了确保组件在更新":["82.4"],"后能够重新渲染":["82.4"],"并显示更新后的数据":["82.4"],"后":["82.5"],"并不会立即更新":["82.5"],"的值":["82.5"],"而是会放入一个更新队列中":["82.5"],"等待":["82.5"],"合并更新后再进行重新渲染":["82.5"],"如果需要在":["82.5"],"无法检测到":["82.6"],"的变化":["82.6"],"并进行重新渲染":["82.6"],"为了正确地更新":["82.6"],"我们应该始终使用":["82.6"],"super":["82.7","83.5"],"handleincrement":["82.7"],"并将它们渲染到用户界面上":["83.1"],"并根据每个元素生成一个新的元素":["83.2"],"下面是一个简单的示例":["83.2","84.2"],"演示了如何使用":["83.2","83.4"],"方法来渲染一个包含数字的列表":["83.2"],"下面是一个示例":["83.3","83.4"],"演示了如何根据数字的奇偶性来渲染不同样式的列表项":["83.3"],"listrendering":["83.3","83.5"],"方法来实现列表渲染":["83.4"],"并在子组件中实现列表渲染":["83.4"],"属性帮助":["83.6"],"正确地更新":["83.6"],"并提高列表渲染的性能":["83.6"],"fragment":["83.6"],"我们可以使用":["84.1"],"语句来实现条件渲染":["84.2"],"演示了如何根据条件来渲染不同的内容":["84.2"],"三元表达式是一种简洁的写法":["84.3"],"用于在一行代码中根据条件返回不同的值":["84.3"],"下面是一个使用三元表达式的示例":["84.3"],"conditionalrendering":["84.3"],"中是一种短路逻辑":["84.4"],"当第一个条件为真时":["84.4"],"会返回第二个条件":["84.4"],"返回第一个条件的值":["84.4"],"我们可以利用这个特性来实现条件渲染":["84.4"],"下面是一个使用逻辑与的示例":["84.4"],"es2020":["84.5"],"中的新特性":["84.5"],"用于简化条件判断":["84.5"],"下面是一个使用条件运算符的示例":["84.5"],"条件运算符等":["84.6"],"抽象逻辑":["84.6"],"如果条件渲染逻辑较复杂":["84.6"],"建议将其抽象成函数或组件":["84.6"],"以提高代码的可读性和复用性":["84.6"],"使用默认值":["84.6"],"脚本文件或使用":["85.3"],"mustache":["85.6"],"用于在模板中实现特定的行为":["85.7"],"bind":["85.7"],"将元素属性与":["85.7"],"根据条件渲染元素":["85.9"],"根据条件显示或隐藏元素":["85.10"],"ul":["85.12"],"指令监听":["85.13"],"事件":["85.13","120.16"],"my":["85.16","89.29"],"的组件":["85.16"],"在实例创建完成后调用":["85.18"],"可以在这里进行数据初始化":["85.18"],"调用异步请求等操作":["85.18"],"但模板还未被编译":["85.18"],"渲染":["85.18"],"beforemount":["85.18","89.27","89.28"],"挂载前":["85.18"],"在模板编译":["85.18"],"渲染之前调用":["85.18"],"学习指南":["86.0"],"vue":["86.1","86.4","87.0","87.3","89.4","89.5","89.7","89.10","89.14","90.2","90.3","94.3","110.9","110.10","147.4","165.2"],"yarn":["86.2","105.7","165.4","165.11"],"应用关联":["86.3"],"定义路由表":["86.3"],"包含不同路径与对应组件的映射":["86.3"],"组件创建导航链接":["86.5"],"使用路由参数传递数据给组件":["86.6"],"在组件中定义嵌套的子路由":["86.7"],"路由守卫":["86.8"],"使用路由守卫来处理导航前后的逻辑":["86.8"],"动态路由":["86.9"],"使用动态路由来根据不同条件加载组件":["86.9"],"路由懒加载":["86.10"],"使用路由懒加载来优化页面加载性能":["86.10"],"更多配置":["86.12"],"但是不限于某个组件":["87.1"],"而是存储在":["87.1"],"的全局状态树中":["87.1"],"使得不同组件可以共享和访问这些数据":["87.1"],"getters":["87.1"],"store":["87.2","87.3","132.1"],"在应用的根目录":["87.3"],"通常是":["87.3"],"目录":["87.3"],"下创建一个名为":["87.3"],"的文件":["87.3","121.13","121.23"],"用于创建":["87.3"],"在该文件中":["87.3"],"需要引入":["87.3"],"并创建一个新的":["87.3"],"可以设置":["87.3"],"用于同步地修改状态":["87.4"],"它们是唯一允许直接修改状态的地方":["87.4"],"而且是一个纯函数":["87.4"],"不应该有副作用":["87.4"],"通常":["87.4"],"在组件中通过":["87.4"],"commit":["87.4","99.14"],"中的方法来修改状态":["87.4"],"中的方法":["87.5"],"继续上面的计数器应用":["87.5"],"假设我们需要在点击增加按钮后":["87.5"],"延迟":["87.5"],"秒再修改状态":["87.5"],"以下是使用":["87.5"],"的例子":["87.5"],"的示例":["87.6"],"todos":["87.6"],"text":["87.6","146.1","149.4"],"buy":["87.6"],"groceries":["87.6"],"done":["87.6"],"数据劫持":["88.1"],"observation":["88.1"],"当你创建一个":["88.1"],"实例时":["88.1"],"会遍历":["88.1"],"对象中的所有属性":["88.1"],"响应式系统的核心原理":["88.2"],"引入了":["88.2"],"对象作为响应式系统的基础":["88.2"],"可以用来监听对象的读取":["88.2"],"删除等操作":["88.2"],"以及数组的变化":["88.2"],"我们只需在":["89.0"],"中一个新的配置项":["89.1"],"值为一个函数":["89.1"],"只在setup函数内部访问":["89.2"],"函数需要加":["89.2"],"其用途创建独立的原始值":["89.2"],"函数接收一个普通对象":["89.2"],"返回一个响应式的数据对象":["89.2"],"ref":["89.5","89.6","89.7","89.12","89.17","89.18","89.19","89.20","93.3"],"但不会使其值也变成响应式的":["89.5"],"修改其属性是非响应式的这样是不会改变的":["89.5"],"shallowref":["89.6"],"适合去做防抖之类的":["89.7"],"这样是不允许":["89.8"],"会给我们报错":["89.8"],"接受一个对象":["89.9"],"不会改变视图":["89.10"],"都是一个":["89.12"],"主要是方便我们解构使用":["89.13"],"vue2":["89.15","89.16"],"中的":["89.15","89.16"],"作用是一样的":["89.16"],"watch":["89.17","89.18","89.20"],"效果一样":["89.19"],"同时":["89.21"],"的第一个参数":["89.22"],"effect函数":["89.22"],"当":["89.23"],"watcheffect":["89.23"],"可以作为一个调试器来使用":["89.24"],"flush":["89.24"],"到":["89.25","113.2"],"销毁的":["89.25"],"指令绑定到元素后调用":["89.27"],"directive":["89.28","89.29"],"created":["89.28"],"初始化":["89.28"],"传递给指令的值":["89.29"],"不利于阅读":["89.31"],"容易使代码变得难以维护":["89.31"],"vue3":["89.31","90.1","110.2","110.8"],"hook函数":["89.31"],"相当于":["89.31"],"mixin":["89.31"],"不同在与":["89.31"],"hooks":["89.31"],"是函数":["89.31"],"组件通信方式很重要":["90.1"],"不管是项目还是面试都是经常用到的知识点":["90.1"],"比如":["90.1","101.5","110.12"],"defineprops":["90.2"],"获取父组件传递的数据":["90.2"],"且在组件内部不需要引入":["90.2"],"方法可以直接使用":["90.2"],"父组件给子组件传递数据":["90.2"],"框架中事件分为两种":["90.3"],"handler":["90.4"],"我是祖国的老花骨朵":["90.4"],"当前代码级给":["90.4"],"xxx":["90.5"],"handler3":["90.5"],"子组件内部触发这个自定义事件":["90.5"],"中可以根据":["90.6"],"vm":["90.6"],"vc":["90.6","90.9"],"关系推出全局事件总线":["90.6"],"而":["90.7"],"实指利用":["90.7"],"modelvalue":["90.7"],"与自定义事件":["90.7"],"update":["90.7","116.7"],"方法获取组件的属性与事件":["90.8"],"包含":["90.8","118.5","120.6"],"原生":["90.8"],"事件或者自定义事件":["90.8"],"次函数功能类似于":["90.8"],"可能会想到它可以获取元素的":["90.9"],"或者获取子组件实例的":["90.9"],"既然可以在父组件内部通过":["90.9"],"获取子组件实例":["90.9"],"inject":["90.10"],"提供":["90.10"],"官网":["90.11"],"即为子组件":["90.12"],"在父组件内部使用的时候":["90.12"],"在双标签内部书写结构传递给子组件":["90.12"],"注意开发项目的时候默认插槽一般只有一个":["90.12"],"我是默认插槽填充的结构":["90.12"],"顾名思义":["90.12"],"此插槽带有名字在组件内部留多个指定名字的插槽":["90.12"],"下面是一个子组件内部":["90.12"],"模板中留两个插槽":["90.12"],"后面":["91.2"],"切记不能放到":["91.2"],"mount":["91.2"],"并且只能在该父组件中使用":["91.5"],"它的优点是使组件之间的依赖关系更加明确":["91.5"],"接受传过来的值":["91.6"],"传递非字符串类型需要加":["91.6"],"简写":["91.6"],"冒号":["91.6"],"msg":["91.9"],"在子组件":["91.10"],"动态绑定":["91.10"],"参数":["91.10"],"并且减少主包的体积":["91.12"],"else等":["91.13"],"来检查数据是否已加载并显示一些其它内容":["91.13"],"但是":["91.13"],"show等属性影响":["91.14"],"但data":["91.14"],"prop数据依旧能够共用的技术":["91.14"],"类似于":["91.14"],"作用和vue2一致":["91.15"],"只是生命周期名称有所更改":["91.15"],"初次进入时":["91.15"],"onmounted":["91.15"],"onactivated":["91.15"],"退出后触发":["91.15"],"deactivated":["91.15"],"再次进入":["91.15"],"我们都可以使用":["91.16"],"来接收":["91.16"],"提供的数据或方法":["91.16"],"emit":["91.17"],"组合而成的语法糖":["91.17"],"vue3中":["91.17"],"有以下改动":["91.17"],"变更":["91.17"],"cli创建":["92.1"],"install":["92.2","105.7","122.2","123.0","124.3","156.3"],"cli":["92.3"],"features":["92.4"],"check":["92.4"],"the":["92.4","99.15"],"needed":["92.4"],"your":["92.4","99.1"],"选择上":["92.4"],"typescript":["92.4","103.4","110.8"],"特别注意点空格是选择":["92.4"],"点回车是下一步":["92.4"],"冷服务":["92.5"],"默认的构建目标浏览器是能":["92.5"],"vite":["92.6"],"打包大小减少41":["93.2"],"api":["93.3","94.3","97.3","122.6"],"setup":["93.3"],"新特性":["94.0"],"child":["94.1","94.2","94.4"],"的选项":["94.3"],"list":["94.4"],"是一个基于":["97.1"],"bash":["97.2","99.5","99.6","99.7","99.12","99.14","99.18","99.19","110.6","121.16","122.2"],"xxxx":["97.3"],"响应拦截":["97.4"],"请求调整":["97.4"],"用户标识":["97.4"],"网络错误处理":["97.4"],"授权错误处理":["97.4"],"error":["97.5","98.4"],"response":["97.5"],"发出请求后":["97.5"],"服务器用状态码进行响应":["97.5"],"这超出了2xx的范围":["97.5"],"实现一个简单的封装":["98.1"],"主要实现以下目的":["98.1"],"如果开启":["98.3"],"token":["98.3","98.4"],"认证":["98.3","122.13"],"serverconfig":["98.3"],"usetokenauthorization":["98.3"],"headers":["98.3","118.12"],"authorization":["98.3"],"比如判断":["98.4"],"是否过期等等":["98.4"],"代码块":["98.4"],"switch":["98.4"],"getaction":["98.5"],"parameter":["98.5"],"service":["98.5"],"zs":["98.6"],"password":["98.6","122.3"],"定义接口方法":["98.6"],"login":["98.6"],"params":["98.6"],"axios":["98.8"],"的再再再封装":["98.8"],"config":["99.1","100.3","110.7","121.17","165.6"],"git":["99.3","99.4","99.11","99.12","99.13","99.14","100.3"],"将当前目录及其子目录下所有变更添加到暂存区":["99.5"],"追踪":["99.7"],"比较指定文件工作区和暂存区的差异":["99.7"],"reflog":["99.8"],"查看详细日志信息":["99.8"],"branch":["99.10"],"新分支":["99.10"],"基于指定分支创建分支":["99.10"],"分支合并到当前分支":["99.14"],"且为":["99.14"],"use":["99.15","112.1","122.11"],"restore":["99.15"],"file":["99.15"],"to":["99.15","112.3"],"往最后一次":["99.16"],"追加记录":["99.16"],"克隆远程仓库到本地":["99.19"],"别名":["99.21"],"本地分支":["99.21"],"远程分支":["99.21"],"如果远程分支被省略":["99.21"],"git官网下载安装git客户端":["100.1"],"安装完成后":["100.2"],"pub":["100.4"],"ssh":["100.4"],"打开生成后的id":["100.5"],"本地拉取代码":["100.6"],"普通声明":["101.1"],"notanumber":["101.2"],"number":["101.2","101.13","102.1","102.6","102.8","103.2","103.5","104.2"],"可以直接使用布尔值":["101.3"],"b2":["101.3"],"一样可以操作数组元素":["101.4"],"有两种方式可以定义数组":["101.4"],"第一种":["101.4"],"如果一个方法需要返回多个值":["101.5"],"可以把这多个值作为元组返回":["101.5"],"而不需要创建额外的类来表示":["101.5"],"可以定义一对值分别为string和number类型的元组":["101.5"],"ts":["101.5","101.6","101.7","101.8","101.11","102.2","102.7","102.10","104.3","104.5","106.5","106.6","107.1","110.12"],"也可以是字符串":["101.6"],"数字枚举":["101.6"],"enum":["101.6","113.5"],"进行任何操作":["101.7"],"不需要检查类型":["101.7"],"voidfn":["101.8"],"定义null":["101.9"],"默认情况下":["101.9","118.12","139.2"],"返回never的函数必须存在无法达到的终点":["101.10"],"因为必定抛出异常":["101.10"],"所以":["101.10","122.13"],"的差异":["101.11"],"void类型只是没有返回值":["101.11"],"不能为字符串类型":["101.12"],"因为定义的联合类型只有数字和布尔值并没有字符串":["101.12"],"boolean":["101.12"],"interface":["101.13","104.5","106.2","106.6"],"程序员":["101.14"],"已经进行了必须的检查":["101.14"],"方式一":["101.14"],"这个概念":["102.0"],"构造方法":["102.1"],"类的继承":["102.2"],"run":["102.2"],"public":["102.3","102.8"],"private":["102.6","104.6"],"some":["102.6"],"any":["102.6","160.1","160.2"],"关键字将属性设置为只读的":["102.7"],"只读属性必须在声明时或构造函数里被初始化":["102.7"],"implements":["102.9"],"后面跟interface的名字多个用逗号隔开":["102.9"],"继承还是用extends":["102.9"],"personclass":["102.9"],"首先":["102.10"],"我们从一个没有使用存取器的例子开始":["102.10"],"firstname":["102.10"],"关键字声明的类叫做":["102.11"],"声明的方法叫做":["102.11"],"抽象方法":["102.11"],"指不能被实例化":["102.11"],"因为它里面包含一个或多个抽象方法":["102.11"],"函数参数":["103.0"],"你可以使用":["103.4"],"来访问所有传入的参数":["103.4"],"你可以把所有参数收集到一个变量里":["103.4"],"剩余参数会被当做个数不限的可选参数":["103.4"],"可以一个都没有":["103.4"],"定义函数实现":["103.5"],"接口或类的时候":["104.0"],"当我们使用这个函数的时候把参数的类型传进去就可以了":["104.3"],"也就是动态类型":["104.3"],"swap":["104.4"],"k":["104.4"],"keyvalue":["104.5"],"t":["104.5","104.6","104.7"],"clacarray":["104.6"],"没有泛型约束":["104.7"],"getlen":["104.7"],"arg":["104.7"],"超集":["105.2"],"简单的说就是在":["105.2"],"而ts":["105.3"],"属于静态编程语言":["105.3"],"尤其在大型项目的时候效果显著":["105.5"],"和一些插件库的兼容并不是特别完美":["105.6"],"w进行随时热更新watch":["105.9"],"node直接运行ts的node项目":["105.10"],"首先全局安装ts":["105.10"],"的核心原则之一是对值所具有的结构进行类型检查":["106.0"],"我们使用接口":["106.0"],"我的理解是使用interface来定义一种约束":["106.1"],"让数据的结构满足约束的格式":["106.1"],"定义方式如下":["106.1"],"可选属性的好处之一是可以对可能存在的属性进行预定义":["106.4"],"好处之二是可以捕获引用了不存在的属性时的错误":["106.4"],"可选属性的含义是该属性可以不存在":["106.4"],"在这个例子当中我们看到接口中并没有定义c但是并没有报错":["106.5"],"应为我们定义了":["106.5"],"这样写是会报错的":["106.6"],"应为a是只读的不允许重新赋值":["106.6"],"cb":["106.7"],"void":["106.7"],"就是我们常说的":["107.0"],"类型也不能赋给":["107.1"],"报错":["107.1"],"原始类型":["107.1"],"umd":["108.0"],"lib":["108.0"],"指定要包含在编译中的库文件":["108.0"],"allowjs":["108.0"],"允许编译":["108.0"],"文件":["108.0","124.3","126.2"],"checkjs":["108.0"],"报告":["108.0"],"文件中的错误":["108.0"],"preserve":["108.0"],"代码的生成":["108.0"],"native":["108.0"],"定义变量时赋值了":["109.1"],"推断为对应的类型":["109.1"],"n1":["109.1"],"abcd":["109.2"],"版本的后台管理系统":["110.2"],"一个项目要有统一的规范":["110.2"],"需要使用":["110.2"],"进行构建":["110.4"],"官方中文文档参考":["110.4"],"vitejs":["110.4","110.10"],"dev":["110.4","165.2"],"guide":["110.4"],"月创建的开源项目":["110.6"],"它的目标是提供一个插件化的":["110.6"],"代码检测工具":["110.6"],"首先安装":["110.6"],"pnpm":["110.6"],"d":["110.6","139.4"],"生成配置文件":["110.6"],"prettier":["110.7","110.8"],"plugin":["110.7","110.8"],"parseroptions":["110.8"],"ecmaversion":["110.8"],"sourcetype":["110.8"],"jsxpragma":["110.8"],"ecmafeatures":["110.8"],"继承已有的规则":["110.8"],"recommended":["110.8"],"essential":["110.8"],"plugins":["110.8","110.10"],"off":["110.8"],"loader":["110.9"],"因此我们再组件内可以使用":["110.9"],"需要加上":["110.9"],"接下来我们为项目添加一些全局的样式":["110.9"],"userconfigexport":["110.10"],"configenv":["110.10"],"vitemockserve":["110.10"],"command":["110.10"],"localenabled":["110.10"],"serve":["110.10"],"在根目录创建":["110.10"],"文件夹":["110.10"],"使用请求拦截器":["110.11"],"可以在请求拦截器中处理一些业务":["110.11"],"开始进度条":["110.11"],"请求头携带公共参数":["110.11"],"使用响应拦截器":["110.11"],"可以在响应拦截器中处理一些业务":["110.11"],"进度条结束":["110.11"],"简化服务器返回的数据":["110.11"],"处理":["110.11"],"http":["110.11","118.11","118.14"],"网络错误":["110.11"],"在根目录下创建":["110.11"],"utils":["110.11","110.12"],"request":["110.11","110.12","120.16","120.17"],"文件夹去统一管理项目的接口":["110.12"],"下面方式":["110.12"],"统一管理咱们项目用户相关的接口":["110.12"],"root":["111.0"],"users":["111.0","120.4"],"打开nginx":["111.1"],"conf文件":["111.1"],"删除一个数据库":["112.1"],"选择要使用的数据库":["112.1"],"show":["112.1"],"column1":["112.2"],"column2":["112.2"],"username":["112.3","122.3"],"hostname":["112.3"],"授予用户特定数据库或表的权限":["112.3"],"revoke":["112.3"],"无符号":["113.1"],"smallint":["113.1"],"较小的整数":["113.1"],"402823466e":["113.2"],"175494351e":["113.2"],"最大长度为":["113.3"],"dd":["113.4"],"time":["113.4"],"存储时间":["113.4"],"hh":["113.4"],"操作和控制访问数据的方法":["114.0"],"数据库的设计和使用旨在提供高效的数据存储":["114.0"],"快速的数据检索和安全的数据管理":["114.0"],"数据库通常由数据表":["114.0"],"因其易用性":["114.1"],"性能和可靠性而受到广泛欢迎":["114.1"],"以下是mysql的一些关键特点":["114.1"],"开源性":["114.1"],"mysql是开源软件":["114.1"],"的基本使用包括连接到":["116.0"],"客户端工具":["116.1"],"如命令行客户端或图形化客户端工具":["116.1"],"mysql":["116.2","122.1"],"选择数据库":["116.3"],"使用以下命令选择要在其中执行操作的数据库":["116.3"],"在所选的数据库中创建一个新的表":["116.4"],"定义表的列和数据类型":["116.4"],"sql":["116.4","116.5","116.6","116.7"],"insert":["116.5","122.3"],"into":["116.5","122.3"],"select":["116.6"],"语句从表中检索数据":["116.6"],"语句更新表中的数据":["116.7"],"做一个简单的爬虫":["117.0"],"初始化项目":["117.1","125.2"],"cheerio":["117.2"],"访问要爬取的网站":["117.3"],"爬取豆瓣网":["117.3"],"fs":["117.4","120.7","120.12"],"get":["117.4","118.2","118.4","121.17","122.5"],"movie":["117.4"],"douban":["117.4"],"com":["117.4","154.2"],"top250":["117.4"],"运行脚本":["117.5"],"p2372307693":["117.6"],"泰坦尼克号":["117.6"],"titanic":["117.6"],"img9":["117.6"],"p2889314814":["117.6"],"这个杀手不太冷":["117.6"],"léon":["117.6"],"p511118051":["117.6"],"千与千寻":["117.6"],"千と千尋の神隠し":["117.6"],"p2557573348":["117.6"],"基于":["118.0"],"node":["118.0","119.2","121.22","124.2","126.1"],"require":["118.2","118.6","120.7","120.14","122.11","122.14"],"服务器":["118.2"],"app":["118.2","118.3","122.5","122.11","154.1","156.1"],"监听客户端的":["118.2"],"请求":["118.2"],"存放静态文件的目录名不会出现在":["118.3"],"访问静态资源时":["118.3"],"会根据托管顺序查找文件":["118.3"],"可为静态资源访问路径添加前缀":["118.3"],"创建路由对象":["118.4"],"挂载具体路由":["118.4"],"可先调用中间件进行预处理":["118.5"],"中间件是一个函数":["118.5"],"express":["118.6"],"定义第一个全局中间件":["118.6"],"mw1":["118.7"],"req":["118.7","118.8","120.17"],"res":["118.7","118.8","120.17"],"next":["118.7","118.8"],"调用了第一个局部生效的中间件":["118.7"],"应用级别中间件是绑定到":["118.8"],"实例上":["118.8"],"路由级别中间件绑定到":["118.8"],"安装中间件":["118.10"],"跨域资源共享":["118.11"],"解决跨域":["118.11"],"是通过":["118.11"],"响应头决定浏览器是否阻止前端":["118.11"],"bruceblog":["118.12"],"io":["118.12"],"仅支持客户端向服务器发送如下的":["118.12"],"三者之一":["118.14"],"头部信息不超过以下几种字段":["118.14"],"无自定义头部字段":["118.14"],"之外的请求":["118.15"],"官网传送门":["119.0"],"cross":["119.1"],"platform":["119.1"],"事件循环":["119.2"],"单线程":["119.2"],"轻量和高效":["119.2"],"否则不会向下执行代码":["120.1"],"异步文件系统不会阻塞程序的执行":["120.1"],"而是在操作完成时":["120.1"],"通过回调函数将结果返回":["120.1"],"实际开发很少用同步方式":["120.1"],"因此只介绍异步方式":["120.1"],"打开模式":["120.1"],"配置选项":["120.3","120.6"],"若是字符串则指定编码格式":["120.3"],"encoding":["120.3","120.6"],"编码格式":["120.3"],"flag":["120.3"],"打开方式":["120.3"],"回调函数":["120.3"],"err":["120.3"],"错误信息":["120.3"],"rs":["120.4"],"createreadstream":["120.4"],"笔记":["120.4"],"mp3":["120.4"],"创建一个可写流":["120.4","120.7"],"ws":["120.4"],"createwritestream":["120.4"],"文件路径":["120.6"],"写入内容":["120.6"],"数组不能存储二进制文件":["120.8"],"是专门存储二进制数据的":["120.8"],"存储的是二进制数据":["120.8"],"显示时以":["120.8"],"如果提供的操作路径是以":["120.9"],"开头的相对路径时":["120.9"],"容易出现路径动态拼接错误的问题":["120.9"],"unlink":["120.10"],"unlinksync":["120.10"],"列出文件":["120.10"],"readdir":["120.10"],"readdirsync":["120.10"],"会抵消前面的路径":["120.12"],"可以获取路径中的最后一部分":["120.13"],"常通过该方法获取路径中的文件名":["120.13"],"server":["120.16"],"createserver":["120.16"],"为服务器实例绑定":["120.16"],"监听客户端的请求":["120.16"],"on":["120.16","120.17"],"设置默认的响应内容为":["120.17"],"模块化是指解决一个复杂问题时":["121.2"],"自顶向下逐层把系统划分为若干模块的过程":["121.2"],"提高代码的复用性":["121.3"],"中模块的分类":["121.5"],"中的模块作用域":["121.6"],"存储了和当前模块有关的信息":["121.7"],"在自定义模块中":["121.7"],"每个模块内部":["121.8"],"module":["121.8"],"即多次调用":["121.9"],"开头":["121.11"],"否则会作为内置模块或第三方模块加载":["121.11"],"尝试从":["121.12","121.22"],"modules":["121.12","121.22"],"文件夹中加载第三方模块":["121.12","121.22"],"如果没有找到对应的第三方模块":["121.12","121.22"],"则移动到再":["121.12"],"上一层父目录":["121.12"],"package":["121.13","121.18","121.23","124.0","124.3","124.5","125.4","126.2","165.2"],"并寻找":["121.13"],"不同于":["121.15"],"新建文件夹":["121.18"],"包名":["121.18"],"新建如下三个文件":["121.18"],"包管理配置文件":["121.18"],"index":["121.18","122.5"],"多次调用":["121.19"],"开头的路径标识符":["121.21"],"在加载自定义模块时":["121.21"],"如果没有指定":["121.21"],"nodejs":["121.22"],"会从当前模块的父目录开始":["121.22"],"则移动到再上一层父目录中":["121.22"],"在被加载的目录下查找一个叫做":["121.23"],"建立连接":["122.2"],"使用数组的形式为占位符指定具体的值":["122.3"],"额外请求页面的数据":["122.5"],"后端只负责提供":["122.6"],"接口":["122.6"],"前端使用":["122.6"],"主要功能是展示":["122.7"],"没有复杂交互":["122.7"],"服务端渲染推荐使用":["122.9"],"secret":["122.11"],"bruce":["122.11"],"的值为任意字符串":["122.11"],"resave":["122.11"],"前后端分离推荐使用":["122.12"],"当涉及到前端跨域请求后端接口的时候":["122.13"],"需要做很多额外的配置":["122.13"],"才能实现跨域":["122.13"],"当前端请求后端接口不存在跨域问题的时候":["122.13"],"推荐使用":["122.13"],"身份认证机制":["122.13"],"当前端需要跨域请求后端接口的时候":["122.13"],"字符串的安全性":["122.14"],"防止其在网络传输过程中被破解":["122.14"],"需定义用于加密和解密的":["122.14"],"生成":["122.14"],"字符串时":["122.14"],"使用密钥加密信息":["122.14"],"得到加密好的":["122.14"],"对象时":["122.14"],"使用密钥解密":["122.14"],"expressjwt":["122.14"],"安装依赖项":["123.0","126.2"],"添加依赖项":["123.0"],"pkg":["123.0"],"是一个用于管理和共享":["124.1"],"代码的工具":["124.1"],"是随同":["124.2"],"生成一个":["124.3"],"项目的核心文件":["124.4"],"其中包含了项目的配置信息":["124.4"],"依赖项":["124.4"],"你可以轻松地安装和管理项目的依赖项":["124.5"],"还可以帮助你开发和发布自己的包":["124.6"],"通过编写代码":["124.6"],"上":["125.0"],"账号":["125.1","125.5"],"编写代码":["125.3"],"确保在你的项目中包含以下文件":["125.4"],"使用终端登录到你的":["125.5"],"如果你的包需要更新或有新的版本":["125.6"],"你可以按照以下步骤进行更新和维护":["125.6"],"使用你的包":["125.7"],"其他开发者可以使用以下命令来安装和使用你的包":["125.7"],"请确保你已经安装了":["126.1"],"这将引导你提供有关项目的一些信息":["126.2"],"并生成一个":["126.2"],"在项目目录中":["126.2"],"icon":["127.2"],"isshow":["127.2"],"font":["128.1","128.4","132.1","132.3","135.1","135.2","135.4","137.1","137.4"],"3eaf7c":["128.1","128.4","132.3","135.1","135.2","135.3","135.4","135.5","136.1","137.1","137.3","137.4"],"重庆北站":["128.1"],"轨道交通10号线":["128.1"],"通远门":["128.2"],"洪崖洞":["128.2"],"相关事宜":["128.2","128.3","136.2","136.4"],"磁器口":["128.3"],"鹅岭公园":["128.3"],"黄桷坪校区":["128.3"],"门票":["128.4"],"euro":["128.4"],"免费":["128.4"],"需要身份证":["128.4"],"开放时间":["128.4","132.2"],"alarm":["128.4"],"clock":["128.4"],"火锅":["128.5"],"重庆土九格老火锅":["128.5"],"耗儿鱼":["128.5"],"麻辣牛肉":["128.5"],"精品肥牛卷":["128.5"],"guangzhou":["129.0"],"乘坐":["130.1","130.3","130.4","137.3","137.4"],"s1":["130.1"],"号线":["130.1","130.4","135.3","135.5"],"南京南方向":["130.1"],"站到达":["130.1","130.2","130.4"],"张府园":["130.2","130.3","130.4"],"地铁站":["130.2"],"迈皋桥方向":["130.2","130.4"],"鼓楼":["130.2"],"换乘":["130.2"],"仙林湖方向":["130.2"],"站到":["130.2","135.3","137.2","137.3","137.4"],"可步行到":["130.3"],"新街口":["130.3","130.4"],"步行至":["130.3","130.5"],"号口":["130.4","136.1"],"红山森林动物园":["130.5"],"路线":["130.5","132.3","135.4","136.3","137.5"],"上饶高铁站":["131.1"],"右手边就是":["131.1"],"行程安排":["131.2","131.3"],"上午":["131.3"],"吃喝玩乐":["131.4"],"可以看电影":["131.4"],"具体":["131.4"],"新火车站步行到":["131.4"],"上饶市博物馆":["131.5"],"体验这种城市的文化":["131.5"],"nanchang":["132.0","133.0"],"convenience":["132.1"],"新万达广场附近":["132.1"],"位置较居中":["132.1"],"附近商城较多":["132.1"],"出行方便":["132.1"],"具体酒店视情况而定":["132.1"],"需提前10天或者1周左右预定":["132.1"],"周一闭馆":["132.2","132.3"],"法定节假日除外":["132.2","132.3"],"需要携带":["132.2"],"身份证":["132.2"],"第三种":["132.3"],"洗发水":["132.4"],"可当天临时购买":["132.4"],"充电宝":["132.4"],"雨伞":["132.4"],"现金":["132.4"],"以备不时之需":["132.4"],"三脚架":["132.4"],"交通相关":["132.4"],"微信":["132.4"],"腾讯出行":["132.4"],"公交地铁":["132.4"],"支付宝":["132.4"],"洪城一卡通":["132.4"],"饮食相关":["132.4"],"南昌老三样":["132.4"],"地铁一号线":["134.1"],"萧山国际机场c":["134.1"],"口进":["134.1"],"往":["134.1"],"西湖一圈全长":["134.2"],"15km":["134.2"],"断桥":["134.2"],"白堤":["134.2"],"speaker":["134.3"],"宋城古城的景色":["134.3"],"以及情桥可以书写祝愿":["134.3"],"以及古代表演":["134.3"],"大运河":["134.4"],"文艺":["134.4"],"介绍":["134.4"],"wuhan":["135.0"],"武汉站":["135.1"],"走路":["135.2"],"米到达":["135.2","137.2"],"美术馆":["135.2"],"江汉路":["135.3","135.4","135.5"],"佛祖岭方向":["135.3"],"螃蟹岬":["135.3"],"步行到":["135.4","137.4"],"地铁站乘坐":["135.5"],"长沙南站":["136.1"],"进":["136.1"],"简介":["136.2"],"橘子洲是湘江中的一个冲击沙洲":["136.2"],"四面环水绵延数十里":["136.2"],"是国家重点风景名胜区":["136.2"],"岳麓书院":["136.3"],"爱晚亭":["136.3"],"麓山寺":["136.3"],"云麓宫":["136.3"],"岳麓山鸟语林":["136.3"],"可以来看看镇馆之宝":["136.4"],"推荐招牌鸡丝火鸡蛋面":["136.5"],"馨砣粉店":["136.5"],"书院路":["136.5"],"号":["136.5"],"津市刘聋子粉馆":["136.5"],"夏记粉店":["136.5"],"公交新村粉店":["136.5"],"曙光中路":["136.5"],"炸串":["136.6"],"奶茶":["136.6"],"花甲粉应有尽有":["136.6"],"还有一些网红店可以打卡":["136.6"],"胡记炸炸炸":["136.6"],"文和友老长沙油炸社":["136.6"],"南门口":["136.6"],"位于长郡中学旁的美食一条街":["136.6"],"妥妥童年的回忆":["136.6"],"front":["137.1"],"厦大学生公寓方向":["137.2"],"植物园东门":["137.2"],"之后步行":["137.2"],"火车站":["137.3"],"湖东":["137.3"],"路":["137.3","137.4"],"石湖山公交场站方向":["137.3"],"梧村车站":["137.4"],"厦大方向":["137.4"],"厦大":["137.4"],"中山公园":["137.5"],"html5":["138.1"],"的基础知识":["138.2"],"canvas":["138.3","138.4","138.5","142.3","149.3"],"使用直角坐标系":["138.3"],"原点坐标为":["138.3"],"可以绘制":["138.4"],"svg":["138.4","161.3","161.4","161.5","161.6","161.8"],"和其他类型的矢量图形":["138.4"],"提供了多种绘图元素":["138.5"],"包括路径和图形":["138.5"],"除了基本的绘图功能之外":["138.6"],"还可以创造交互式效果":["138.6"],"用来展示和操控数据":["138.6"],"非常适合处理像素级别的控制":["138.7"],"虽然在":["138.8"],"canvasrenderingcontext2d":["139.0"],"rotate":["139.0"],"方法用于图像旋转":["139.1"],"它接受一个弧度值作为参数":["139.1"],"表示顺时针旋转的度数":["139.1"],"轴方向的缩放因子":["139.2"],"一个单位就是一个像素":["139.2"],"缩放因子可以缩放单位":["139.2"],"比如缩放因子":["139.2"],"表示将大小缩小为原来的":["139.2"],"缩放因子":["139.2"],"方法用于平移图像":["139.3"],"它接受两个参数":["139.3"],"分别是":["139.3"],"e":["139.4","165.11"],"f":["139.4"],"水平缩放":["139.4"],"transform":["139.5"],"方法完全一致":["139.5"],"translate":["139.5"],"如果在":["140.0"],"之中将某个物体":["140.0"],"在目标图像中显示源图像":["140.1"],"只有目标图像内的源图像部分会显示":["140.1"],"目标图像是透明的":["140.1"],"out":["140.1"],"在目标图像之外显示源图像":["140.1"],"您的浏览器不支持":["141.1"],"描边已定义绘图":["141.2"],"路径":["141.2"],"fill":["141.2","144.3","161.9"],"填充当前绘图":["141.2"],"linecap":["142.1"],"指定线条末端的样式":["142.1"],"有三个可能的值":["142.1"],"butt":["142.1"],"末端为矩形":["142.1"],"round":["142.1"],"末端为圆形":["142.1"],"square":["142.1"],"末端为突出的矩形":["142.1"],"矩形宽度不变":["142.1"],"y0":["142.2"],"x1":["142.2"],"y1":["142.2"],"方法接受四个参数":["142.2"],"是起点的横坐标和纵坐标":["142.2"],"是终点的横坐标和纵坐标":["142.2"],"通过不同的坐标值":["142.2"],"可以生成从上至下":["142.2"],"repetition":["142.3"],"该方法接受两个参数":["142.3"],"第一个参数是图像数据":["142.3"],"它可以是":["142.3"],"img":["142.3"],"也可以是另一个":["142.3"],"或者一个表示图像的":["142.3"],"shadowcolor":["142.4"],"阴影的颜色":["142.4"],"black":["142.4"],"fillrect":["143.0"],"图像":["144.0"],"高度":["144.2"],"绘制笑脸":["144.3"],"beginpath":["144.3","147.3"],"lineto":["144.4","147.3"],"dwidth":["144.5"],"dheight":["144.5"],"sx":["144.5"],"默认值为":["144.6"],"10px":["144.6"],"sans":["144.6"],"serif":["144.6"],"textalign":["144.6"],"文本的对齐方式":["144.6"],"文本的方向":["144.6"],"inherit":["144.6"],"quadraticcurveto":["145.1"],"控制点x":["145.1"],"控制点y":["145.1"],"终点x":["145.1"],"终点y":["145.1"],"beziercurveto":["145.2"],"控制点1":["145.2"],"再来一次":["146.1"],"找到画布":["146.2"],"绘制小时的刻度":["147.3"],"moveto":["147.3"],"linewidth":["147.3"],"strokestyle":["147.3"],"gray":["147.3"],"stroke":["147.3","161.9"],"closepath":["147.3"],"nullbtn":["149.3"],"清空画布":["149.3"],"c1":["149.3"],"当前浏览器不支持canvas":["149.3"],"请下载最新的浏览器":["149.3"],"获取canvas画布和绘制的上下文对象":["149.3"],"getcontext":["149.3"],"2d":["149.3"],"获取输入框和按钮":["149.3"],"boldbtn":["149.4"],"粗线条":["149.4"],"thinbtn":["149.4"],"interactive":["151.1"],"精灵派加点击事件":["151.1"],"pixi":["151.2","152.7","156.2","157.1","158.1","158.2","158.3","158.4","158.5","160.0"],"graphics":["151.2","158.1","158.2","158.3","158.4","158.5","161.1"],"beginfill":["151.2","158.2","158.3","158.4"],"官方网站":["152.0"],"webgl":["152.1"],"快速高效":["152.3"],"pixijs":["152.3","152.5"],"简单易用":["152.4"],"丰富的功能":["152.5"],"跨平台支持":["152.6"],"innerwidth":["153.2","154.1","156.1"],"innerheight":["153.2","156.1","160.1","160.2"],"0x1099bb":["153.2","160.1","160.2"],"resolution":["153.2","160.1","160.2"],"pic":["154.2"],"rmb":["154.2"],"bdstatic":["154.2"],"05b0ea405c9e690ab51627853a13de56":["154.2"],"jpeg":["154.2"],"设置模糊滤镜的模糊程度":["156.2"],"创建轮廓滤镜":["156.3"],"创建一个纹理":["157.2"],"anchor":["157.3"],"实现动画":["157.4"],"0x66ccff":["158.3"],"0x660000":["158.4"],"linestyle":["158.5"],"devicepixelratio":["160.1","160.2"],"像素比":["160.1","160.2"],"将应用画布添加到dom中":["160.1","160.2"],"view":["160.1","160.2"],"添加资源":["160.1"],"添加场景1的资源":["160.2"],"assets":["160.2"],"addbundle":["160.2"],"scene1":["160.2"],"pic1":["160.2"],"vector":["161.1"],"的缩写":["161.1"],"意为可缩放矢量图形":["161.1"],"不设置样式属性":["161.3"],"style":["161.3"],"不设置样式属性style是看不出效果的":["161.7"],"并且polygon默认为填充需要把fill属性设置为none":["161.7"],"points":["161.8"],"opacity":["161.9"],"场景":["162.0"],"创建各种":["162.0"],"效果":["162.0"],"包括动画":["162.0"],"模拟":["162.0"],"游戏和虚拟现实等":["162.0"],"提供了许多功能和工具":["162.0"],"使得构建复杂的":["162.0"],"场景变得更加简单和高效":["162.0"],"以下是":["162.0"],"的一些主要特性和组成部分":["162.0"],"渲染器":["162.0"],"renderer":["162.0"],"如果后期需要控制器带有阻尼效果":["163.8"],"visual":["163.9","163.12","164.5"],"threejs":["163.9","163.12","164.5"],"components":["163.9","163.12"],"y轴方向放大2倍":["164.1"],"z轴方向不变":["164.1"],"cube":["164.2","164.3"],"例如围绕x轴旋转90度":["164.3"],"rotation":["164.3"],"gitbub":["165.1"],"上新建项目":["165.1"],"添加":["165.2"],"script":["165.2"],"vitepress":["165.3","165.6"],"文件夹和":["165.6"],"写下如下内容":["165.7"],"更多配置请查看":["165.7"],"md":["165.7"],"layout":["165.7"],"选项卡标题":["165.7"],"titletemplate":["165.7"],"选项卡描述":["165.7"],"editlink":["165.7"],"配置网站":["165.8"],"defineconfig":["165.9"],"docs":["165.9"],"和github项目名称保持一致":["165.9"],"标题":["165.9"],"侧边栏":["165.10"],"sidebar":["165.10"],"articles":["165.10"],"other":["165.10"],"usr":["165.11"],"bin":["165.11"],"env":["165.11"],"确保脚本抛出遇到的错误":["165.11"],"生成静态文件":["165.11"],"build":["165.11"]},{"0":["6.23","6.24","20.13","21.12","28.24","51.4","67.4","69.9","87.5","93.1","110.8","113.2","120.8","139.5","142.2","146.2","158.3","158.5","161.7"],"1":["6.23","6.24","16.13","18.12","18.19","20.12","20.13","20.14","20.22","21.2","21.9","22.4","28.15","28.23","28.29","28.30","29.12","30.6","30.7","30.8","32.7","32.11","33.3","47.1","49.2","51.0","54.4","67.4","73.3","73.8","82.7","89.24","101.6","110.10","125.6","130.1","137.1","141.1","142.2","153.2","154.1","156.1","164.2"],"2":["9.3","16.13","16.16","20.14","20.17","20.22","21.9","21.10","22.4","28.23","28.28","28.29","28.30","28.31","29.5","32.7","33.3","33.12","35.1","38.0","43.6","49.1","51.0","54.6","73.6","73.8","74.3","76.3","83.5","89.29","99.14","99.18","101.6","128.2","128.3","128.5","130.2","130.3","130.4","132.1","132.3","135.4","136.1","136.2","136.5","137.4"],"3":["5.10","16.14","16.16","17.18","18.4","21.3","21.10","22.3","22.5","28.23","28.29","28.30","28.31","33.3","34.15","43.6","45.4","49.1","54.6","54.9","58.12","83.5","87.6","99.7","101.6","111.1","118.8","122.11","122.14","128.4","128.5","132.1","132.3","135.2","136.3","139.2","161.1"],"4":["17.12","21.10","21.16","22.3","22.5","28.31","33.2","33.13","50.3","58.12","83.5","84.6","92.3","99.8","118.8","130.3","132.2","135.1","135.5","136.6"],"5":["17.6","17.12","21.16","22.3","22.5","28.31","28.32","29.6","33.2","33.13","50.3","54.6","68.1","73.15","83.5","110.7","130.2","132.2","156.3"],"6":["13.1","13.4","33.13","34.1","54.3","54.7","68.2","71.0","158.5"],"7":["14.2","17.10","54.7","68.2","135.3","136.3"],"8":["6.22","14.2","24.1","33.2","77.20","77.23","135.4"],"9":["14.2","118.12","132.3","132.4","158.3"],"10":["14.2","22.6","29.5","33.2","54.3","54.8","101.5","109.1","139.2","156.2","161.9"],"11":["65.1","110.7","135.1","136.1"],"12":["18.16"],"14":["131.4"],"16":["77.20","131.4"],"17":["49.0","132.3"],"18":["35.7"],"20":["54.8","118.2","161.7"],"22":["132.4"],"23":["134.1"],"25":["15.22","19.5","22.10","63.6","64.6"],"27":["28.21"],"28":["76.11"],"29":["137.2"],"30":["15.16","19.2","22.8","22.9","35.7","80.3"],"31":["62.1"],"35":["160.2"],"37":["67.14"],"42":["16.8","67.14"],"45":["139.1"],"47":["137.2"],"48":["137.2"],"50":["8.6","132.4","136.3","161.8"],"59":["65.1"],"60":["56.4","147.3"],"65":["113.1"],"84":["67.14"],"100":["139.5","144.3"],"123":["8.1","34.15","101.2","101.12"],"150":["144.4","145.1"],"180":["147.3"],"200":["122.14","130.4","135.2","144.4"],"255":["32.3"],"300":["151.2","161.8"],"302":["98.4"],"321":["101.2"],"350":["144.2"],"370":["161.5"],"400":["98.4","130.3","161.4"],"401":["98.4"],"500":["130.2"],"535":["113.1"],"751":["137.2"],"767":["113.1"],"999":["65.1"],"2015":["12.0","13.4"],"2100":["65.5","136.4"],"2224":["160.2"],"4870":["110.10"],"12087":["160.2"],"23739":["160.2"],"55520":["122.3"],"1415926":["34.15"],"css":["4.1","6.7","8.8","9.2","60.1"],"可快速为同类型标签统一设置样式":["4.2"],"缺点":["4.2"],"container":["4.3","4.9","6.7","6.18","6.19","6.25","8.3","8.8"],"属性选择元素":["4.4"],"good类的p元素":["4.5"],"color":["4.5","20.8","20.15","20.21","60.1","130.5","137.5"],"yellow":["4.5"],"类名包含good和beauty的元素":["4.5"],"语法":["4.6"],"选择器1":["4.6"],"选择器2":["4.6"],"ul":["4.7","25.14","80.10","81.14","81.15"],"div":["4.8","4.9","6.25","57.3","58.10","80.11","81.11","81.13","81.14","81.15","82.7","85.9","85.10","86.5","89.2","89.5","89.10","89.13","89.14","90.9","91.6","147.4","153.1","155.1","159.2"],"被选中":["4.9"],"class":["4.9","6.25","15.9","15.19","58.10","79.4","79.6","79.10","79.11","80.4","82.3","82.5","83.2","83.4","84.2","84.4","84.5","89.30","91.6","102.11"],"结构选择元素":["4.10"],"visited":["4.11"],"链接访问后的样式":["4.11"],"的第一个":["4.12"],"的最后一个":["4.12"],"val":["4.13"],"属性且属性值等于":["4.13"],"的":["4.13","20.6","48.1","48.4","65.2","78.10","83.6","89.12","91.14","97.1"],"在元素内部后面插入内容":["4.14"],"伪元素字体图标":["4.14"],"p":["4.14","26.3","32.11","56.1","80.9","80.11","80.15","82.7","91.11"],"e91e":["4.14"],"position":["4.14"],"absolute":["4.14","8.6"],"right":["4.14"],"20px":["4.14"],"top":["4.14","8.6"],"10px":["4.14"],"font":["4.14","130.5","137.5"],"也称为弹性盒子布局":["5.0"],"是一种用于创建灵活":["5.0"],"自适应的网页布局的":["5.0"],"容器的父元素上设置":["5.1"],"display":["5.1","6.7","6.18","6.19","8.7","10.0"],"决定":["5.2"],"项目的排列方向":["5.2"],"row":["5.2"],"项目靠主轴起始位置对齐":["5.3"],"end":["5.3"],"项目靠主轴末尾位置对齐":["5.3"],"center":["5.3"],"项目在主轴上居中对齐":["5.3"],"space":["5.3","5.10"],"between":["5.3","5.10"],"wrap":["5.4","5.5"],"属性来控制项目是否换行":["5.4"],"和":["5.5","6.3","6.8","17.5","24.4","32.4","33.5","43.1","52.0","58.2","69.10","74.4","76.12","88.1","89.29","93.3","103.0","113.2"],"shrink":["5.6"],"如果没有设置宽度或高度":["5.7"],"项目在交叉轴上的对齐方式":["5.9"],"start":["5.9","92.4"],"多行项目靠交叉轴起始位置对齐":["5.9"],"属性设置为":["5.10"],"实现两端对齐效果":["5.10"],"平均分布":["5.10"],"其中包含了行":["6.1"],"rows":["6.1","6.8","114.0"],"和列":["6.1"],"首先需要将一个":["6.2"],"html":["6.2","6.30","56.1","56.2","56.5","57.3","61.2","77.9","78.4","78.5","85.7","85.9","85.13","86.5","91.15","111.0","117.4"],"元素定义为网格容器":["6.2"],"template":["6.3","6.18","6.20","19.1","86.5","89.2","89.5","89.13","90.9","91.6","91.9","91.16"],"columns":["6.3","6.18","6.19","6.20"],"是定义网格单元格边界的线条":["6.4"],"水平的网格线定义了行":["6.4"],"而垂直的网格线定义了列":["6.4"],"我们可以通过指定网格线的名称或索引来定位网格项":["6.4"],"网格跨度":["6.4"],"布局的属性详解":["6.5"],"用于定义网格的列和行的大小和结构":["6.6"],"可以更清晰地定义布局结构":["6.7"],"定义网格项之间的间隔":["6.9"],"行和列之间的间距":["6.9"],"定义了当网格项目无法放入先前定义的网格轨道时":["6.12"],"如何自动创建额外的网格项目":["6.12"],"用于定义网格项目在网格容器内部的对齐方式":["6.14"],"使用":["6.17","46.1","58.2","80.14","88.1","138.4","162.0"],"grid":["6.17","6.32"],"1fr":["6.20"],"默认一个列":["6.20"],"适用于手机屏幕":["6.20"],"min":["6.20","68.1"],"布局的实际应用":["6.21"],"name":["6.22","12.1","17.17","19.5","34.19","35.4","53.8","57.2","71.1","73.10","73.11","73.12","73.16","73.19","73.20","78.18","80.3","80.11","89.7","90.12","94.1","94.3","94.4","100.3","102.7","102.11","106.2","116.5","116.7","118.2","121.18","122.5","165.7"],"viewport":["6.22","57.2","118.12"],"content":["6.22","6.23","9.0","57.2","118.12","118.14","120.17"],"width":["6.22","6.23","6.24","56.4","57.2","118.12","154.2","157.3"],"device":["6.22","6.23","6.24","57.2"],"initial":["6.23","6.24"],"scale":["6.23","6.24","139.0","164.1"],"title":["6.23","6.24","24.1","32.13","85.4","96.2"],"complex":["6.23"],"nested":["6.24"],"dynamic":["6.25"],"layout":["6.25","91.6"],"body":["6.25","24.1","43.5","56.1","56.2","56.5","57.3","152.7","153.2","156.1"],"item":["6.25","94.4"],"flexbox":["6.26"],"的比较":["6.26"],"适用于创建二维布局":["6.27"],"即同时控制行和列的布局":["6.27"],"可以实现更复杂的布局结构":["6.28"],"支持二维布局":["6.28"],"可以精确控制网格项的位置和跨度":["6.28"],"在使用":["6.29","121.21"],"布局中":["6.30"],"网格项的顺序并不一定与它们在":["6.30"],"虽然":["6.31"],"尽管":["6.32"],"areas":["6.33"],"来定义布局":["6.33"],"行内":["7.0"],"类":["7.1"],"伪类":["7.1"],"属性":["7.1","20.6","57.1","102.8","121.13"],"元素":["7.1","78.2","79.5"],"伪元素":["7.1"],"span":["8.1","26.2"],"box":["8.2"],"200px":["8.5"],"background":["8.5"],"skyblue":["8.5","161.9"],"left":["8.6"],"justify":["8.7"],"12333333333333333333333333":["9.0"],"border":["9.1"],"1px":["9.1"],"solid":["9.1"],"margin":["9.3","11.2"],"auto":["9.3"],"限定高度以及行高":["9.3"],"并且行高与高度要成比例":["9.3"],"上下箭头":["10.0"],"button":["10.0","58.9","85.13","89.5","89.14","90.5"],"none":["10.0"],"滚动条轨道":["10.0"],"black":["11.1"],"朝下的三角形":["11.1"],"down":["11.1"],"175px":["11.2"],"height":["11.2","23.7","41.1","41.2","154.2"],"ecmascript":["12.0","65.4","71.0"],"构造函数":["12.1","90.6"],"用于创建对象时进行初始化":["12.1"],"constructor":["12.1","12.3","53.8","79.4","79.8","82.3","82.4","83.2","83.3","83.4","84.2","84.3","84.4","84.5","102.11"],"person1":["12.2"],"person":["12.2","12.3","12.4","15.9","15.13","17.17","53.3","71.1","73.2","80.11","102.7","102.11","106.6"],"john":["12.2","17.17","22.9","34.4","62.1","73.11","73.12","73.16","73.19","73.20","80.3"],"student":["12.3"],"extends":["12.4","79.4","79.8","79.11","80.5","82.3","82.4","82.5","83.2","83.3","83.4","84.2","84.3","84.4","84.5"],"重写父类的方法":["12.4"],"add":["12.5","16.4","16.7","16.8","105.7","152.7","160.1","165.1"],"a":["12.5","17.12","20.13","22.2","22.4","25.14","26.4","34.15","76.8","76.11","87.6","90.12","101.1","104.3","120.12"],"b":["12.5","16.14","16.16","17.12","22.2","73.6","73.8","76.8","90.12","99.14","102.10","104.2","104.3","104.4","106.3","106.6","121.23"],"return":["12.5","12.6","17.3","17.18","20.1","45.2","45.3","51.3","52.3","54.4","70.2","78.15","78.20","80.3","80.7","80.8","80.9","80.10","80.15","81.10","81.11","81.13","81.14","81.15","82.7","87.6","101.8","102.10","104.7"],"value":["12.6","20.20","21.14","24.2","52.3","78.19","83.5","101.7","104.5"],"manufacturers":["13.2"],"association":["13.2"],"制定和维护的脚本语言标准":["13.2"],"它是":["13.2","124.1"],"javascript":["13.2","15.28","24.4","32.9","52.1","52.2","53.7","53.9","53.11","53.12","54.0","57.1","58.0","60.0","62.2","66.2","78.7","81.7","84.1","86.9","86.10","87.3","87.4","138.1"],"的标准化规范":["13.3"],"只提供了最基本的语法":["13.3"],"如":["13.3","13.4","30.9","69.3","84.1"],"怎样定义变量和函数":["13.3"],"js":["13.3","15.7","15.8","16.5","16.6","17.20","18.7","18.12","18.14","18.18","18.19","21.1","21.11","21.15","28.1","28.2","28.12","28.13","28.20","29.9","30.6","33.13","34.3","34.6","34.9","34.11","35.7","43.5","48.2","65.3","67.1","67.7","67.10","67.13","73.9","73.17","77.24","81.12","86.1","87.4","87.5","89.31","92.4","110.6","118.0","118.11","121.18","139.2","144.6"],"实现了":["13.3"],"数据更方便":["13.4"],"引入了":["13.4"],"object":["13.4","34.5","34.8","46.1","50.2","53.18","76.3"],"defineproperty":["13.4"],"允许更灵活地定义对象属性":["13.4"],"提供了":["13.4"],"array":["13.4","17.12","21.8","28.8","103.4","104.2"],"方法":["13.4","32.9","67.6","67.8","67.9","67.11","76.3","79.10","82.6","90.8"],"foreach":["13.4","14.2"],"map":["13.4","14.4","108.0"],"reduce":["13.4"],"等":["13.4","58.11","79.6","87.3"],"方便数组处理":["13.4"],"改进了":["13.4"],"function":["13.4","17.10","17.17","20.1","30.6","48.2","53.9","55.1","55.3","58.6","73.3","74.2","76.11","78.20","78.21","101.10","101.11","110.10","120.4","120.16"],"bind":["13.4"],"es6":["13.4","14.1","17.10","17.13","20.20","71.0"],"es2015":["13.4"],"中键值对的数量":["14.2"],"keys":["14.2"],"返回一个包含":["14.2"],"中所有键的迭代器":["14.2"],"values":["14.2","16.9","28.24"],"中所有值的迭代器":["14.2"],"entries":["14.2"],"中所有键值对的迭代器":["14.2"],"callbackfn":["14.2"],"thisarg":["14.2"],"遍历":["14.2"],"键值对数组转换":["14.4"],"对象":["14.4","29.9","32.3","32.10","43.2","43.3","122.11","142.2","142.3"],"value1":["14.5"],"key2":["14.5"],"value2":["14.5"],"second":["14.6"],"uno":["14.6"],"然而":["15.1"],"在处理复杂的项目和大规模的代码库时":["15.1"],"传统的":["15.1","119.2"],"函数和类等都在全局作用域下定义":["15.2"],"这样容易导致命名冲突和代码复杂度的增加":["15.2"],"尤其在大型项目中":["15.2"],"不会污染全局命名空间":["15.3"],"使得代码的组织和维护变得更加清晰和简单":["15.4"],"当多个模块需要相同的功能时":["15.5"],"中":["15.6","31.2","57.1","60.0","63.1","64.1","69.2","77.15","77.16","78.16","80.0","80.12","80.13","82.0","83.1","85.18","121.12"],"通过使用":["15.6"],"关键字导出一个变量":["15.7"],"module1":["15.8","15.14"],"关键字":["15.10","17.18","73.4"],"main":["15.11","15.12","15.21","77.24","121.13","121.23"],"from":["15.13","15.14","21.6","81.10","84.4","86.3","87.3","89.8","89.18","89.19","89.20","91.2","98.2","98.6","110.11","112.2","112.3","163.6"],"console":["15.14","15.17","15.18","17.3","17.10","17.16","17.17","18.8","20.4","20.11","20.18","20.21","21.12","28.2","30.3","30.7","31.1","34.14","34.19","35.1","35.4","35.8","45.1","45.2","47.1","53.2","53.6","55.1","55.4","58.6","69.9","70.1","70.3","71.2","74.2","76.11","102.2","106.7","117.4","118.6","120.4","151.1"],"用于导出模块中的主要功能或对象":["15.15"],"export":["15.16","15.22"],"default":["15.16","15.19","94.4"],"sayhello":["15.17","15.18","17.17","70.1","71.2","74.2"],"log":["15.17","15.18","17.3","17.10","17.16","17.17","18.4","18.8","18.13","20.3","20.4","20.12","20.18","20.21","21.12","28.2","30.3","30.7","33.11","34.19","35.1","35.4","35.8","45.2","47.1","53.2","53.6","55.1","69.9","70.1","70.3","71.2","74.2","97.3","97.5","102.2","117.4","120.4"],"hello":["15.18","17.16","17.17","18.6","18.9","19.2","32.2","32.8","45.1","53.2","70.1","73.14","74.2","101.5"],"alice":["15.19","19.4","22.10"],"关键字可以在导入和导出时重命名变量名":["15.20"],"myname":["15.21"],"tom":["15.21"],"condition":["15.23"],"true":["15.23","29.2","49.0","66.6","69.8","79.9","87.6","107.1","122.11","153.2"],"if":["15.23","29.12","48.3","48.6","103.5"],"模块化时":["15.24"],"为后缀":["15.25"],"use":["15.27","20.9","20.21","75.0","87.3","118.3"],"灵活的":["15.28"],"代码组织与交互方式":["15.28"],"它允许开发者将代码分割成多个模块":["15.28"],"你可以按照插入的顺序迭代它的元素":["16.1"],"const":["16.3","16.5","16.6","17.17","18.14","19.5","29.10","49.5","51.1","52.1","53.2","53.3","53.7","53.9","54.7","59.1","73.7","78.17","81.10","81.11","81.13","81.14","86.7","86.10","87.3","87.4","87.5","103.4","110.8","120.3","120.6","120.13","122.2","122.5","156.3","157.1","157.2","163.7"],"s":["16.3","16.5","16.10"],"new":["16.3","16.4","16.5","16.6","16.7","16.8","16.10","21.5","22.11","28.8","49.6","65.3","87.3","87.4","87.5","156.3","157.1"],"每个值的键和值相等":["16.6"],"set1":["16.6"],"用":["16.12"],"操作符":["16.12","35.1"],"将":["16.12"],"set":["16.13","21.4","102.9","113.5","116.7","164.2"],"intersect":["16.15"],"如果没传参":["17.2"],"作为参数":["17.4"],"变量":["17.5","29.9","29.10"],"才会通过解构赋值生成":["17.5"],"如果函数":["17.5"],"调用时没提供参数":["17.5"],"就不会生成":["17.5"],"从而报错":["17.5"],"通过提供函数参数的默认值":["17.5"],"就可以避免这种情况":["17.5"],"报错":["17.6","20.6","32.3"],"例二":["17.6"],"引入默认值":["17.7"],"其实是解构赋值原理":["17.7"],"也可以叫剩余参数":["17.9"],"其包含函数的参数和其它属性":["17.10"],"以":["17.10"],"变量来指代":["17.10"],"下面我们看个实例":["17.10"],"fn":["17.10","30.11"],"imooc":["17.10"],"在控制台中打印出上面的代码结果":["17.10"],"如下图所示":["17.10"],"在定义函数的时候没有给定参数":["17.10"],"但是通过":["17.10"],"对象可以拿到传入的参数":["17.10"],"可以看到":["17.10"],"中包含了函数传递的参数":["17.10"],"等属性":["17.10"],"args":["17.11","48.6"],"使用剩余参数替代":["17.11"],"剩余参数不一定非要作为函数参数使用":["17.12"],"与数组解构赋值结合":["17.12"],"others":["17.12"],"对象引入了为什么":["17.13"],"functions":["17.14"],"是一种更简洁和灵活的函数定义方式":["17.14"],"result":["17.15","18.3"],"箭头函数通过箭头":["17.15"],"来定义函数":["17.15"],"参数列表在括号内":["17.15"],"my":["17.17","19.2","53.2","165.3"],"避免在对象方法中使用箭头函数":["17.18"],"foo":["17.19","18.8","18.13","32.2"],"bar":["17.19","32.2","32.8"],"上面代码中":["17.19","32.3","32.4","32.7","32.8"],"如果在":["17.19"],"接受":["17.20"],"代码块抛出的错误对象":["17.20"],"删":["18.1","28.5"],"再进行操作":["18.2"],"lo":["18.4"],"常见的有":["18.5"],"trim":["18.5"],"let":["18.6","18.7","18.11","18.18","21.13","21.14","28.2","28.7","28.12","28.13","28.20","28.24","28.28","29.8","30.11","34.7","34.15","35.5","48.2","49.3","49.4","51.4","89.17","89.18","89.20","98.2","101.4","101.7","101.14","103.1","110.8","110.11","117.4","120.17"],"stringvalue":["18.6"],"world":["18.9","31.1","32.8"],"message":["18.11","19.2","89.4","89.17","122.14"],"startswith":["18.13"],"即倒数的位置":["18.14"],"str":["18.16","34.14"],"字符串设计了几个方法":["18.17"],"text":["18.18","18.20","19.3","25.11","165.7","165.10"],"cat":["18.18","18.20"],"否则返回":["18.19"],"bat":["18.20"],"strings":["19.1"],"line":["19.3"],"it":["19.3"],"spans":["19.3"],"across":["19.3"],"greeting":["19.4","73.7","73.14"],"包含模板字符串中插入的变量部分":["19.5"],"bob":["19.5"],"age":["19.5","22.10","28.21","35.7","71.1","71.2","76.11","80.3","118.2","122.5"],"下面是另一个例子":["20.1"],"f":["20.1"],"x":["20.1","77.23","138.3","141.2","142.3","157.3","158.3","161.4","164.3"],"y":["20.1","20.17","22.6","103.2","103.3","138.3","139.3","141.2","145.2"],"womam":["20.4"],"下划线以及":["20.5"],"构成":["20.5"],"并且数字还不能打头的时候可以使用点语法":["20.5"],"引用了原型对象":["20.6"],"注意":["20.6","32.10"],"关键字表示原型对象时":["20.6"],"只能用在对象的方法之中":["20.6"],"用在其他地方都会报错":["20.6"],"红色":["20.8","20.21"],"shape":["20.8","20.15","20.21"],"球形":["20.8"],"黑色":["20.9","20.15","20.21"],"圆柱形":["20.9","20.15","20.21"],"写字":["20.9","20.21"],"l":["20.13"],"在所有环境中":["20.20"],"只要两个值是一样的":["20.20"],"它们就应该相等":["20.20"],"提出":["20.20"],"same":["20.20"],"equality":["20.20"],"同值相等":["20.20"],"目标对象":["20.21"],"源对象1":["20.21"],"源对象2":["20.21"],"apple":["20.21"],"圆形":["20.21"],"taste":["20.21"],"甜":["20.21"],"pen":["20.21"],"后面的覆盖前面的":["20.21"],"最终返回的不是新的":["20.21"],"而是修改了前面的":["20.21"],"返回值数组":["20.22"],"返回键值二维数组":["20.22"],"与数组类似方法的区别":["20.22"],"length":["21.3","47.4","47.5","47.6","104.7"],"必须有length属性":["21.3"],"没有则返回空数组":["21.3"],"arr":["21.8","21.11","28.2","49.5","51.2","51.3"],"of":["21.8","21.9","92.4"],"参数1":["21.10"],"默认为结尾":["21.11"],"var":["21.11","32.2","32.9","32.11","35.3","47.1","65.3","76.8","110.8","141.1"],"key":["21.13","63.4","64.4","104.5"],"方法用于查找键名":["21.15"],"遍历函数可接受3个参数":["21.17"],"当前元素":["21.17"],"当前元素索引":["21.17"],"是一种从数组或对象中提取值并赋给变量的语法":["22.0"],"使得在处理数据时更加方便和简洁":["22.0"],"当使用解构赋值时":["22.0"],"c":["22.2","73.8","121.12","121.22"],"d":["22.2","69.7","99.12","108.0","161.9"],"country":["22.8","22.11"],"usa":["22.8","22.11"],"doe":["22.9"],"yearsold":["22.9"],"city":["22.11"],"york":["22.11"],"id":["23.0","23.11","85.17"],"audioplayer":["23.0"],"controls":["23.0","23.7","163.7"],"example":["23.0","25.15","42.2","165.11"],"mp3":["23.0","23.2"],"type":["23.0","89.6","102.9","110.12","118.12","141.1"],"audio":["23.2"],"mp4":["23.3"],"video":["23.3"],"描述":["23.5","23.6","165.9"],"视频显示区域的宽高":["23.7"],"play":["23.8"],"src":["23.10","25.15","110.9","165.7"],"https":["23.10","43.9","100.1","117.3","160.1","160.2"],"www":["23.10","42.2","165.11"],"缩小":["23.11"],"makenormal":["23.11"],"普通":["23.11"],"br":["23.11"],"video1":["23.11"],"hypertext":["24.0"],"utf":["24.1","77.23"],"网页标题":["24.1"],"网页内容在这里":["24.1"],"标签可以包含属性":["24.2"],"属性用于为标签提供额外的信息或设置":["24.2"],"属性以键值对的形式出现":["24.2"],"放在标签的开始标签中":["24.2"],"attribute":["24.2"],"header":["24.3"],"footer":["24.3","91.9"],"nav":["24.3","81.13","81.14","81.15","127.2"],"与":["24.4","58.5","58.8"],"结合":["24.4"],"标签时":["25.0"],"代码块会被渲染成":["25.0"],"这是h1级别的标题":["25.1"],"h2":["25.1"],"href":["25.3","25.14","26.4","39.2"],"这是一个":["25.8"],"这是一行文本":["25.10"],"placeholder":["25.11"],"输入文本":["25.11"],"post":["25.13","98.5","122.14"],"label":["25.13"],"for":["25.13","30.9","49.3","49.4","49.6","51.4","87.6"],"li":["25.14","81.14","81.15","85.12"],"home":["25.14"],"标签用于定义网页的结构和内容":["26.0"],"方便样式和布局控制":["26.1"],"h1":["26.1","81.10","120.17"],"到":["26.1","137.3","142.2"],"h6":["26.1"],"标题标签":["26.1"],"用于创建超链接到其他网页或文档":["26.2"],"内联容器标签":["26.2"],"类似于":["26.2"],"标签中":["26.3"],"然后在":["26.3"],"标签用":["26.4"],"属性来指定链接地址":["26.4"],"避免与未来":["26.5"],"版本中的新标签冲突":["26.5"],"例如":["26.5","46.1","53.3","60.1","75.0","78.2","81.5","121.12","138.6"],"再":["27.1"],"标签上设置属性":["27.1"],"为":["27.1"],"很容易被浏览器识别":["27.1"],"是一种可以按顺序保存数据的数据类型":["28.0"],"使用场景":["28.0"],"声明数组并赋值称为数组的初始化":["28.1"],"这种字面量方式也是最多的使用方式":["28.1"],"利用new":["28.1"],"aa":["28.2"],"bb":["28.2"],"cc":["28.2"],"dd":["28.2"],"ee":["28.2"],"增":["28.5"],"push":["28.6","104.6"],"colors":["28.7","28.8","28.9","28.12","28.13","28.17","28.26"],"red":["28.9","28.12","28.13","28.14","28.17","28.26"],"green":["28.9","28.10","28.14","28.17","28.26","101.6"],"blue":["28.9","28.10","28.14","28.17","101.6","143.0"],"colors2":["28.10","28.15"],"pop":["28.11","160.1","160.2"],"splice":["28.16"],"indexof":["28.18"],"numbers":["28.19","28.20","28.28","28.29","83.4"],"reverse":["28.22"],"都不改变原数组":["28.27"],"有如下":["28.27"],"alert":["29.1","73.3"],"yes":["29.1"],"else":["29.1","47.5","52.5","70.3"],"no":["29.1","110.8"],"会自上向下依次对":["29.2"],"后的条件表达式进行求值判断":["29.2"],"如果条件表达式结果为":["29.2"],"则执行当前":["29.2"],"后的语句":["29.2"],"执行完毕语句结束":["29.2"],"false":["29.2","33.7","33.10","69.8","79.9","101.3","101.12"],"则继续向下判断":["29.2"],"直到找到":["29.2"],"表达式2":["29.3"],"表达式3":["29.3"],"while":["29.4","30.9"],"语句":["29.4"],"tip":["29.5","29.6","33.12","66.0","94.3"],"i":["29.8","51.4","69.6","74.2"],"需要执行的代码":["29.9","29.10"],"示例":["29.9","29.10"],"可迭代对象":["29.10"],"而":["29.11","119.2"],"循环迭代对象的是值":["29.11"],"因此":["29.11"],"循环适用于迭代对象的键名":["29.11"],"j":["29.12","49.2"],"可能会定义非常多的相同代码或者功能相似的代码":["30.0"],"这些代码可能需要大量重复使用":["30.0"],"声明定义方式":["30.2"],"sayhi":["30.3"],"hi":["30.3"],"声明函数的关键字":["30.3"],"对外只提供一个简单的函数接口":["30.4"],"我们可以利用函数的参数实现函数重复不同的代码":["30.6"],"函数名":["30.6"],"形参1":["30.6"],"如果实参的个数和形参的个数一致":["30.7"],"则正常输出结果":["30.7"],"以最后一个为准":["30.8"],"函数没有":["30.8"],"返回的值是":["30.8"],"undefined":["30.8","34.16","35.3","101.8"],"函数返回值注意事项":["30.8"],"终止函数":["30.8"],"getsum":["30.8"],"num1":["30.8","34.11"],"num2":["30.8"],"没有名字的函数":["30.10"],"xxx":["30.12","100.3"],"它也可以在服务器端运行":["31.0"],"用于编写后端代码":["31.0"],"输出hello":["31.1"],"然后浏览器才能执行":["31.2"],"lang":["31.3","77.23"],"en":["31.3","77.23"],"结尾的文件中":["31.4"],"然后通过":["31.4"],"script":["31.4","89.0","92.5"],"快捷键":["31.6","31.7"],"是一种无序的复合数据集合":["32.2"],"obj":["32.2","32.11","89.6"],"的所有键名虽然看上去像数值":["32.3"],"实际上都被自动转成了字符串":["32.3"],"如果键名不符合标识名的条件":["32.3"],"比如第一个字符为数字":["32.3"],"或者含有空格或运算符":["32.3"],"且也不是数字":["32.3"],"则必须加上引号":["32.3"],"否则会报错":["32.3"],"指向同一个对象":["32.4"],"因此为其中任何一个变量添加属性":["32.4"],"另一个变量都可以读写该属性":["32.4"],"此时":["32.4"],"表示一个代码区块":["32.5"],"里面有一个标签":["32.5"],"指向表达式":["32.5"],"为了避免这种歧义":["32.5"],"引擎的做法是":["32.5"],"如果遇到这种情况":["32.5"],"引用对象":["32.7"],"而且":["32.10"],"方法的返回值也不再包括该属性":["32.10"],"删除一个不存在的属性":["32.10"],"不报错":["32.10"],"而且返回":["32.10"],"循环有两个使用注意点":["32.12"],"它遍历的是对象所有可遍历":["32.12"],"enumerable":["32.12"],"的属性":["32.12"],"会跳过不可遍历的属性":["32.12"],"它不仅遍历对象自身的属性":["32.12"],"style":["32.13"],"是用于实现赋值":["33.1"],"比较和执行算数运算等动能的符号":["33.1"],"除":["33.2"],"时才会对变量进行赋值":["33.3"],"加等于":["33.3"],"n":["33.3"],"所返回的值不同":["33.5"],"是自增前的值":["33.5"],"旧值":["33.5"],"是自增后的值":["33.5"],"都会使原变量立刻减少":["33.6"],"不同的是":["33.6","88.2"],"大于号":["33.7"],"小于等于号":["33.7"],"与运算是短路的与":["33.9"],"如果第一个值为":["33.9","33.10"],"则不看第二个值":["33.9","33.10"],"与运算是找":["33.9"],"或运算也是短路的或":["33.10"],"执行顺序":["33.12"],"种":["34.1"],"hexnum1":["34.2"],"0xa":["34.2"],"16进制的10":["34.2"],"浮点类型则在数值汇总必须包含小数点":["34.2"],"还可通过科学计数法表示":["34.2"],"就相当于给变量赋予了":["34.3"],"值":["34.3","82.5","82.6"],"firstname":["34.4"],"lastname":["34.4","102.10"],"传一个":["34.5"],"会返回":["34.5"],"的原因":["34.5"],"可以将其他类型的数据转化成布尔值":["34.6"],"规则如下":["34.6"],"数据类型":["34.6"],"转换为":["34.6"],"genericsymbol":["34.7"],"属性名可以是字符串或数值":["34.9"],"并且":["34.10"],"数组也是动态大小的":["34.10"],"会随着数据添加而自动增长":["34.10"],"sum":["34.11"],"date":["34.12","65.3"],"abc":["34.15"],"11px":["34.15"],"null":["34.16","48.3"],"都转换为":["34.16"],"基本数据类型存储在栈中":["34.17"],"赋值操作":["34.18"],"zs":["34.19","118.2"],"引用类型对应的值存储在堆中":["34.20"],"出错":["35.1"],"在函数内定义变量时省略":["35.1"],"可以创建一个全局变量":["35.1"],"referenceerror":["35.2","35.6"],"没有定义":["35.2"],"不能重复声明":["35.2"],"zhangsan":["35.4","94.1"],"但是":["35.5","46.2","87.1"],"的元素":["36.1"],"修改文档结构":["36.1"],"getelementbyid":["36.2"],"创建一个新的段落元素":["36.2"],"forward":["37.1"],"back":["37.2"],"它提供了操作浏览器窗口的方法和属性":["38.0"],"如打开":["38.0"],"关闭窗口":["38.0"],"调整窗口大小":["38.0"],"以及获取窗口的位置和尺寸等":["38.0"],"document":["38.0","58.9","59.1","62.3","153.2","156.1"],"它代表当前窗口或标签页中加载的文档":["38.0"],"它提供了对文档内容进行访问和操作的方法和属性":["38.0"],"对象提供了与当前窗口的":["39.0"],"url":["39.0","43.4","43.9","81.3","81.4","110.12","120.16"],"的协议部分":["39.1"],"hostname":["39.1"],"获取url的协议":["39.2"],"用于识别浏览器和操作系统":["40.1"],"useragent":["40.2"],"获取浏览器的名称":["40.2"],"屏幕的高度":["41.1"],"屏幕高度":["41.2"],"对象是":["42.0"],"打开一个新的浏览器窗口或标签页":["42.1"],"close":["42.1","120.4"],"com":["42.2","160.1","160.2","165.11"],"即异步的":["43.1"],"的核心对象":["43.2"],"xmlhttprequest":["43.2"],"通过":["43.2","43.3","76.12","78.22","102.0","138.7"],"method":["43.4","98.5","120.16"],"async":["43.4"],"user":["43.4","86.6","100.3","110.10","118.2","118.4","122.3","122.5"],"xhr":["43.5"],"未发送":["43.6"],"send":["43.6","52.5","94.2","118.2","118.4","122.14"],"headers":["43.6"],"received":["43.6"],"以获取响应头":["43.6"],"方法已经被调用":["43.6"],"响应头和响应状态已经返回":["43.6"],"loading":["43.6"],"正在下载响应体":["43.6"],"get":["43.8","102.9"],"touppercase":["43.8"],"datatype":["43.8","112.1"],"json":["43.8","43.9","51.2","62.4","124.5","124.6","125.4"],"params":["43.8","98.5"],"data":["43.8","43.9","91.6","97.5","117.4","118.12","120.3","127.2"],"发送请求":["43.8"],"是":["45.0","54.0","77.10","77.11"],"outervariable":["45.1","55.3"],"innerfunction":["45.1","55.2","55.3","55.4"],"increment":["45.2","47.1","87.5"],"getage":["45.3","70.2"],"工厂函数可以包含一些内部变量和方法":["45.4"],"这些内部变量和方法对外部不可见":["45.4"],"只有通过返回的对象实例才能访问":["45.4"],"实现模块化":["45.4"],"闭包中的变量是引用传递的":["45.5"],"而不是传值":["45.5"],"如果在闭包中修改外部变量":["45.5"],"那么外部作用域中的变量也会被修改":["45.5"],"可以使用一些简单的方法来实现浅拷贝":["46.1"],"assign":["46.1"],"此方法将原始对象转换为":["46.2"],"字符串":["46.2"],"然后再将":["46.2"],"字符串解析为一个新的对象":["46.2"],"从而实现深拷贝":["46.2"],"需要注意的是":["46.2"],"此方法对于无法序列化的属性":["46.2"],"如函数":["46.2"],"正则表达式":["46.2"],"循环引用等":["46.2"],"返回一个新函数":["47.1"],"用于增加":["47.1"],"每个函数接收一个参数并返回一个新函数":["47.2"],"使得函数的组合和复合变得简单而灵活":["47.2"],"高阶函数的创建":["47.2"],"可以将原始函数转化为高阶函数":["47.2"],"即接收一个函数作为参数并返回一个新函数的函数":["47.2"],"中实现柯里化函数的方法有多种":["47.3"],"apply":["47.4","48.3","48.7"],"是两种常见的性能优化技术":["48.0"],"用于限制函数的执行频率":["48.0"],"它们可以帮助控制事件处理函数的触发次数":["48.0"],"以减少资源消耗和提升用户体验":["48.0"],"resize":["48.1","48.4"],"throttle":["48.2","48.7"],"func":["48.2"],"delay":["48.2"],"那么定时器触发后执行函数":["48.5"],"如果在指定时间内又有新的函数调用发生":["48.5"],"则重新开始计时":["48.5"],"以下是一个简单的防抖函数的实现示例":["48.5"],"context":["48.6","139.1","139.2","144.6","146.2"],"this":["48.6","48.7","53.8","70.1","70.2","71.2","74.2","76.7","78.18","79.3","79.13","80.10","80.11","80.15","83.2","83.3","83.4","84.3","102.1","102.6","102.8","102.10","104.6"],"arguments":["48.6"],"res":["49.3","49.4","49.6","117.4","118.2","118.4","118.5","118.6","120.16","122.5","122.14"],"unique":["49.5"],"同步任务":["50.1"],"需要执行的任务在主线程上排队":["50.1"],"一次执行":["50.1"],"异步任务":["50.1"],"node":["50.2","85.3","105.10","110.7","120.9","120.11","120.15","121.21","124.1"],"promise":["50.2","97.1"],"observe":["50.2"],"mutationobserver":["50.2"],"然后开始执行宏任务队列":["50.3"],"一次只执行一个":["50.3"],"执行完后检查当前微任务队列是否有任务":["50.3"],"有":["50.3"],"执行微任务队列":["50.3"],"直至清空微任务":["50.3"],"res1":["51.1"],"stringify":["51.2","52.5"],"有三种状态":["52.0"],"pending":["52.0"],"进行中":["52.0"],"fulfilled":["52.0"],"已成功":["52.0"],"catch":["52.2","52.4","97.3","97.4"],"方法可以处理异步操作失败的结果":["52.2"],"处理第一个操作成功的结果":["52.3"],"anotherpromise":["52.3"],"promise2":["52.4"],"promise3":["52.4"],"results":["52.4"],"处理所有":["52.4"],"实例成功的结果":["52.4"],"error":["52.5","97.3","101.10","104.7","110.8"],"statustext":["52.5"],"onerror":["52.5"],"network":["52.5"],"示例用法":["52.5"],"requestdata":["52.5"],"username":["52.5","62.1","62.3","110.10"],"对象都有一个原型对象":["53.1"],"它是一个包含属性和方法的对象":["53.1"],"is":["53.2","53.4"],"eating":["53.4"],"dog":["53.4","70.3"],"breed":["53.4"],"call":["53.4","76.10"],"中有多种方式来实现原型继承":["53.5"],"prototype":["53.6","70.1"],"eat":["53.6","53.7","53.8","53.9"],"该对象的原型就是传入的原型对象":["53.7"],"animal":["53.7","53.8","53.9"],"以下是一些主要区别":["53.10"],"传统面向对象编程语言通常使用类来定义对象的结构和行为":["53.13"],"更可维护的代码":["53.14"],"虽然你可以修改内建对象的原型":["53.15"],"将方法添加到原型上而不是在构造函数内部定义方法":["53.16"],"当在子对象上定义与父对象相同名称的属性或方法时":["53.17"],"create":["53.18","92.6","116.4"],"是回调函数":["54.1"],"输出结果为":["54.3"],"打印结果":["54.3","54.4"],"这里注意初始值要默认赋予空对象":["54.4"],"不然会报错":["54.4"],"newarr":["54.5","54.7"],"chinese":["54.8"],"建议始终提供":["54.9"],"initialvalue":["54.9"],"来明确指定累加器的初始值":["54.9"],"以避免空数组或其他边界情况可能导致的错误":["54.9"],"globalfunction":["55.1"],"outer":["55.2","55.3","55.4","58.10"],"innervariable":["55.2"],"outerfunction":["55.3"],"在末尾":["56.1"],"结束标签前":["56.1"],"insertbefore":["56.1"],"在父节点中任意子节点之前插入新节点":["56.1"],"如下代码演示":["56.1"],"h3":["56.1"],"删除节点时一定是由父子关系":["56.2"],"它们要么是父子关系":["56.3"],"apis":["56.4"],"parentnode":["56.4"],"获取父节点":["56.4"],"以相对位置查找节点":["56.4"],"实际应用中非常灵活":["56.4"],"table":["56.4","112.1","116.4","116.5","116.7"],"tr":["56.4"],"td":["56.4"],"文本或其他类型的内容":["57.1"],"在":["57.1","130.2"],"浏览器将":["57.1"],"标签":["57.3"],"如上图中":["57.3"],"head":["57.3","77.23","85.4","99.7"],"是学习":["57.4"],"的核心":["57.4"],"事件处理是":["58.0"],"便立即调用一个函数":["58.1"],"对象专门用来添加事件监听的方法":["58.2"],"它的两个参数分别为":["58.2"],"事件类型":["58.2"],"事件回调":["58.2"],"以避免不必要的事件处理":["58.3"],"可以使用以下方法来移除事件监听器":["58.3"],"该事件在鼠标指针每次移动时都会触发":["58.5"],"可以用于实时跟踪鼠标位置":["58.5"],"mouseover":["58.5"],"当鼠标指针进入元素的可见区域时触发":["58.5"],"mouseout":["58.5"],"当鼠标指针离开元素的可见区域时触发":["58.5"],"mouseenter":["58.5"],"addeventlistener":["58.6","58.7","58.9"],"keydown":["58.6","58.11"],"当文本框内容发生改变并失去焦点时触发":["58.8"],"事件不同":["58.8"],"事件在用户完成输入并离开文本框时才会触发":["58.8"],"queryselector":["58.9","149.3"],"事件流是事件在执行时的底层机制":["58.10"],"主要体现在父子盒子之间事件的执行上":["58.10"],"键盘事件":["58.11"],"keyup":["58.11"],"keypress":["58.11"],"在事件处理程序中":["58.12"],"通过判断事件的目标元素":["58.12"],"event":["58.12","78.18","83.5","90.4"],"target":["58.12","83.5"],"来确定是哪个子元素触发了事件":["58.12"],"根据需要对目标元素进行处理":["58.12"],"appendchild":["59.0","152.7","153.2","156.1"],"newelement":["59.1"],"设置元素的文本内容":["59.2"],"textcontent":["59.2"],"属性或":["59.2"],"innertext":["59.2"],"添加为":["59.3"],"的子元素":["59.3"],"将元素插入到已有元素之前":["59.3"],"是你要修改的":["60.1"],"样式属性的名称":["60.1"],"切换类名":["60.2"],"toggle":["60.2"],"getelementsbyclassname":["61.0","61.1"],"根据类名获取元素节点集合":["61.0"],"elementid":["61.1"],"通过类名获取元素":["61.1"],"传入类名":["61.1"],"修改元素的":["61.2"],"是由服务器发送到浏览器的小型文本文件":["62.0"],"expires":["62.1","62.3"],"fri":["62.1"],"dec":["62.1"],"的值":["62.4"],"存储的值通常是字符串类型":["62.4"],"如果需要存储其他数据类型":["62.4"],"如对象或数组":["62.4"],"可以使用":["62.4","81.8","83.6"],"storage":["63.0","64.0"],"api":["63.0","64.0","122.14","162.0"],"提供的一种本地存储机制":["63.0","64.0"],"其中":["63.1","64.1"],"中检索数据":["63.2","64.2"],"如果键不存在":["63.2","64.2"],"中的数据":["63.3","64.3"],"removeitem":["63.4","64.4"],"clear":["63.5","64.5"],"方法来删除":["63.5","64.5"],"setitem":["63.6","64.6"],"storeduser":["63.6","64.6"],"getminutes":["65.1"],"获取分钟数":["65.1"],"getmonth":["65.1"],"获取月份":["65.1"],"一月":["65.1"],"mydate":["65.2","65.3"],"秒起至现在的总秒数或毫秒数":["65.4"],"它是一种特殊的计量时间的方式":["65.4"],"注":["65.4"],"中时间戳是以毫秒计的":["65.4"],"获取时间戳的方法":["65.4"],"分别为":["65.4"],"setfullyear":["65.5"],"用于处理各种不同类型的数据和操作":["66.0"],"简介":["66.0"],"数组":["66.1","73.5","76.12"],"string":["66.1","101.1","101.5","101.13","101.14","102.11","106.2","106.5","106.6"],"字符串对象":["66.1"],"number":["66.1","101.5","101.9","102.2","103.3","103.4","109.1"],"的基础对象":["66.2"],"它提供了一系列的方法来操作和处理数据集合":["66.3"],"如添加":["66.3"],"它提供了许多字符串相关的方法":["66.4"],"它提供了一系列数字相关的方法":["66.5"],"如四舍五入":["66.5"],"包括":["66.6"],"它提供了一系列的方法来操作日期和时间":["66.7"],"如获取当前时间":["66.7"],"它提供了一系列数学运算方法":["66.8"],"可以用于文本匹配":["66.9"],"的一个内置对象":["67.0"],"它提供了一些数学属性和方法":["67.0"],"获取圆周率":["67.1"],"函数":["67.3","67.5","67.12","89.31","107.0"],"到小于":["67.4"],"返回大于或等于一个给定数的最小整数":["67.5"],"返回小于或等于一个给定数字的最大整数":["67.6"],"取整":["67.7"],"是可以返回指定一组数据中最小值":["67.8"],"是可以返回指定一组数据中最大值":["67.9"],"exponent":["67.10"],"次幂":["67.10"],"求某个数的多少次方":["67.10"],"返回一个值的正弦值":["67.12"],"返回一个值的余弦值":["67.13"],"中能表示的最小正数值":["68.1"],"tofixed":["68.2"],"digits":["68.2"],"将数值转换为指定小数位数的字符串表示":["68.2"],"表示保留的小数位数":["68.2"],"toprecision":["68.2"],"precision":["68.2"],"将数值转换为指定精度的字符串表示":["68.2"],"表示有效位数":["68.2"],"tostring":["68.2"],"将数值转换为字符串":["68.2"],"是一个内置的对象类型":["69.1"],"可以通过字面量或构造函数来创建":["69.1"],"正则表达式是一种由字符和特殊符号组成的模式":["69.1"],"用于定义字符串的搜索规则":["69.1"],"它接收两个参数":["69.4"],"匹配字符串的结尾":["69.5"],"匹配前面的元素零次或多次":["69.5"],"全局匹配":["69.6"],"找到所有匹配项而不仅仅是第一个":["69.6"],"匹配数字":["69.7"],"匹配非数字":["69.7"],"test":["69.8","101.8"],"检查字符串是否匹配正则表达式":["69.8"],"并返回":["69.8"],"或":["69.8","97.4","110.8","120.17"],"exec":["69.8"],"在字符串中执行正则表达式匹配":["69.8"],"输出":["69.9"],"不区分大小写匹配":["69.10"],"m":["69.10","99.6","161.9"],"多行匹配":["69.10"],"允许":["69.10"],"密码等":["69.11"],"字符串替换":["69.11"],"使用正则表达式进行文本替换":["69.11"],"格式化或删除特定的字符":["69.11"],"公有方法":["70.2"],"getname":["70.2","94.2"],"instanceof":["70.3"],"woof":["70.3"],"但在":["71.0"],"其中程序被组织为一组对象":["72.1"],"封装":["72.2"],"封装是面向对象编程的重要原则":["72.2"],"它指的是将数据和操作数据的方法封装在一个单元中":["72.2"],"以隐藏内部实现细节":["72.2"],"只暴露必要的接口":["72.2"],"继承":["72.2"],"大家好啊":["73.3"],"调用对象":["73.3"],"来调用构造函数":["73.4"],"构造函数的特点有两个":["73.4"],"函数体内部使用了":["73.4"],"代表了所要生成的对象实例":["73.4"],"生成对象的时候":["73.4"],"必须使用":["73.4"],"命令":["73.4"],"freeze":["73.5"],"冻结一个对象":["73.5"],"防止对其进行修改":["73.5"],"getownpropertydescriptor":["73.5"],"obj2":["73.6"],"myproto":["73.7"],"descriptor":["73.11"],"symbol":["73.13"],"mysymbol":["73.13"],"添加属性无效":["73.18"],"不会影响原对象":["73.18"],"delete":["73.18"],"原型和原型链是面向对象编程中的重要概念":["74.0"],"原型对象是另一个普通对象":["74.1"],"它包含了可供共享的属性和方法":["74.1"],"当我们访问对象的属性或方法时":["74.1"],"会首先在对象自身查找":["74.1"],"如果找不到":["74.1"],"则继续在对象的原型上查找":["74.1"],"am":["74.2"],"这样可以节省内存空间":["74.3"],"setprototypeof":["74.4"],"要在整个脚本文件中启用严格模式":["75.0"],"只需在脚本的顶部添加一行":["75.0"],"即可":["75.0"],"准确来说":["76.1"],"是在函数发生预编译的前一刻":["76.1"],"这个隐含的参数就是":["76.2"],"以函数形式调用":["76.3"],"this是window":["76.3"],"可以理解成":["76.3"],"的形式调用时":["76.3"],"指向调用方法的那个对象":["76.3"],"绑定":["76.4"],"无论":["76.4"],"专门为我们提供了一些方法来改变函数内部的":["76.5"],"它还可以改变这个函数内部的":["76.7"],"指向":["76.7"],"类似":["76.10"],"方法的应用":["76.10"],"由于":["76.10"],"fn1":["76.11","103.4"],"传的刚好是":["76.12"],"所以我们可以":["76.12"],"曲线救国":["76.12"],"举例":["76.12"],"方法使用得最为频繁":["76.14"],"如果有些函数":["76.14"],"我们不需要立即调用":["76.14"],"但是又想改变这个函数内部的":["76.14"],"此时用":["76.14"],"应用程序的":["77.0"],"是单向数据流的框架":["77.1"],"这意味着数据在组件层级之间通过":["77.1"],"props":["77.1","78.14","78.18","79.3","80.10","80.11","82.4","83.2","83.3","84.2","84.3","84.4","84.5","90.1"],"向下传递":["77.1"],"而不允许在子组件中直接修改父组件的数据":["77.1"],"引入了组件化开发的概念":["77.3"],"将复杂的用户界面划分为独立的组件":["77.3"],"树":["77.4"],"用于表示真实":["77.4"],"react":["77.5","77.10","77.11","77.16","77.17","77.18","77.19","78.4","78.11","78.16","79.3","79.4","79.5","79.8","79.11","80.5","80.7","80.8","80.12","82.4","83.1","84.4","91.14"],"采用了单向数据流的数据管理模式":["77.5"],"有众多优秀的第三方库和工具":["77.6"],"可以帮助开发者更高效地构建":["77.6"],"web":["77.6"],"时":["77.7"],"每个组件封装了特定的功能和状态":["77.8"],"可以在其他组件中重复使用":["77.8"],"组件可以是函数组件或类组件":["77.8"],"的语法扩展":["77.9"],"允许在":["77.9"],"中用于组件之间通信的机制":["77.10"],"组件内部管理的可变数据":["77.11"],"组件具有不同的生命周期阶段":["77.12"],"包括组件的挂载":["77.12"],"输入等":["77.13"],"并对其进行响应":["77.13"],"通过条件语句":["77.14"],"我们可以使用":["77.15"],"状态提升是一种在":["77.17"],"用于在":["77.18"],"的上下文允许在组件树中共享数据":["77.19"],"引入的新特性":["77.20"],"我们需要先安装几个包":["77.22"],"的核心库":["77.22"],"meta":["77.23"],"charset":["77.23"],"http":["77.23"],"equiv":["77.23"],"ua":["77.23"],"jsx":["77.24","79.4","79.6","79.10","80.4","81.12","82.3","82.5"],"import":["77.24","81.12","87.3","89.8","89.31","91.2","98.6","110.11"],"构建动态":["78.0"],"的一种特殊语法扩展":["78.1"],"它允许我们在":["78.1"],"函数的调用":["78.2"],"从而创建":["78.2"],"下面的":["78.2"],"标签一样写":["78.4"],"组件的标签":["78.4"],"属性的写法与":["78.5"],"标签类似":["78.5"],"ui":["78.6","78.10"],"结构":["78.6"],"可以在大括号内使用":["78.7"],"中的最大价值在于支持组件化开发":["78.9"],"通过组件化开发":["78.9"],"我们可以将":["78.9"],"并返回一个描述":["78.10"],"component":["78.11","79.3","79.4","79.8","79.11","80.5","80.7","80.8","80.9","80.15","82.3","82.4","83.2","83.3","83.4","84.2","84.3","84.4","84.5","91.15"],"并且具有状态和生命周期方法":["78.11"],"标签一样使用组件的标签":["78.12"],"将属性传递给组件":["78.12"],"即根据条件来决定是否渲染组件或显示不同的内容":["78.13"],"products":["78.17"],"super":["78.18","79.3","79.8","82.4","83.2","83.3","83.4","84.2","84.3","84.5"],"state":["78.18","83.2","83.3","83.4","84.3","87.3","87.5","89.10"],"email":["78.18","99.1"],"handlechange":["78.18","83.5"],"fahrenheit":["78.19"],"setfahrenheit":["78.19"],"handlecelsiuschange":["78.19"],"并返回一个新的组件":["78.20"],"withlogger":["78.20"],"wrappedcomponent":["78.20"],"themecontext":["78.21"],"createcontext":["78.21"],"light":["78.21"],"app":["78.21","85.17","122.14","154.2","157.1","157.3"],"特性":["78.22"],"我们可以在函数组件中使用类组件的功能":["78.22"],"如状态管理":["78.22"],"生命周期是指组件在不同阶段经历的一系列方法调用":["79.0"],"渲染组件的内容":["79.1"],"componentdidmount":["79.1","79.13"],"组件挂载到":["79.1"],"dom":["79.1","85.18","90.3"],"后调用":["79.1"],"用于进行副作用操作":["79.1"],"如网络请求":["79.1"],"mycomponent":["79.4","79.6","79.11","80.4","80.5","82.3","82.5"],"我们应该返回一个":["79.5"],"操作":["79.6"],"表示需要重新渲染":["79.9"],"表示不需要重新渲染":["79.9"],"默认返回":["79.9"],"并返回一个值":["79.10"],"该值将作为第三个参数传递给":["79.10"],"componentdidupdate":["79.10","82.5"],"订阅事件":["79.13"],"eventemitter":["79.13"],"on":["79.13","117.4","151.1"],"someevent":["79.13"],"handleevent":["79.13"],"的缩写":["80.1"],"意为属性":["80.1"],"每个":["80.1"],"childcomponent":["80.3","82.7"],"defaultprops":["80.4"],"来实现":["80.4"],"包括字符串":["80.6"],"数字":["80.6"],"render":["80.7","80.8","80.9","80.15","82.7"],"items":["80.10","96.2"],"之前":["80.14"],"需要先安装":["80.14"],"prop":["80.14"],"types":["80.14"],"库":["80.14"],"bash":["80.14","92.1","105.9","105.10"],"npm":["80.14","85.3","97.2","110.4","125.7"],"install":["80.14","117.2","118.10","121.16","126.2"],"count":["80.15","87.5"],"它允许我们在单页应用中切换不同的页面视图":["81.1"],"而无需重新加载整个页面":["81.1"],"相比传统多页应用":["81.1"],"单页应用":["81.1"],"它表示一个特定的":["81.3"],"路径和对应的页面组件":["81.3"],"当用户访问该路径时":["81.3"],"并且这些页面组件具有各自的":["81.4"],"我们可以通过路由参数在":["81.5"],"它允许用户点击链接来切换不同的页面视图":["81.6"],"而无需进行页面的完全刷新":["81.6"],"编程式导航允许我们在组件中使用":["81.7"],"来手动触发页面的切换":["81.7"],"的依赖":["81.8"],"page":["81.10"],"about":["81.11"],"contact":["81.11","81.13","81.14"],"index":["81.12","110.9","111.0"],"subpage":["81.13"],"userprofile":["81.14"],"to":["81.15","92.4"],"组件都可以拥有自己的":["82.1"],"并在需要时对其进行更新":["82.1"],"后立即获取最新的":["82.5"],"可以使用回调函数或者在":["82.5"],"生命周期方法中获取":["82.5"],"并根据当前":["82.6"],"的值返回一个新的":["82.6"],"这样做的原因是确保":["82.6"],"的变化能够被":["82.6"],"正确地追踪和处理":["82.6"],"listrendering":["83.2","83.4"],"newnumber":["83.5"],"setstate":["83.5"],"addnumber":["83.5"],"当需要在":["83.6"],"方法中返回多个元素时":["83.6"],"来包裹这些元素":["83.6"],"从而避免额外的":["83.6"],"的条件语句":["84.1"],"conditionalrendering":["84.2","84.4","84.5"],"isloggedin":["84.3"],"在条件渲染中":["84.6"],"可能会遇到变量未定义或为空的情况":["84.6"],"为了避免出现错误":["84.6"],"可以使用默认值来处理这些情况":["84.6"],"避免嵌套过深":["84.6"],"在条件渲染时":["84.6"],"尽量避免嵌套过深的代码结构":["84.6"],"以免影响代码的可读性和性能":["84.6"],"是一套用于构建用户界面的渐进式":["85.1"],"package":["85.3","124.6"],"进行数据插值":["85.6"],"将数据绑定到":["85.6"],"实例的数据绑定":["85.7"],"img":["85.7","110.6","165.9"],"并执行相应的方法":["85.13"],"指令实现表单输入和":["85.14"],"vue":["85.14","85.16","86.2","89.2","89.6","89.13","89.16","89.17","89.18","89.19","89.20","90.6","90.9","91.2","91.6","91.9","91.12","91.16","163.9","163.12"],"模板已经编译完成":["85.18"],"但尚未将其挂载到":["85.18"],"mounted":["85.18","89.27","89.28"],"挂载后":["85.18"],"渲染之后调用":["85.18"],"组件已经被挂载到":["85.18"],"router":["86.2","86.4"],"createrouter":["86.3"],"createwebhistory":["86.3"],"组件中使用":["86.4"],"view":["86.4","152.7","153.2"],"以在单页面应用中切换不同的路由":["86.5"],"routes":["86.6","86.7"],"path":["86.6"],"例如登录验证":["86.8"],"权限控制等":["86.8"],"了解更多高级配置":["86.12"],"应用程序开发的状态管理模式":["87.0"],"它是一个集中式的状态管理库":["87.0"],"获取器":["87.1"],"用于从":["87.1"],"的全局状态中派生出一些状态":["87.1"],"类似于组件的计算属性":["87.1"],"computed":["87.1","93.3"],"方便开发者进行状态的调试和追踪":["87.2"],"组件通信":["87.2"],"可以轻松实现跨组件的状态共享和通信":["87.2"],"避免了传统的":["87.2"],"mutations":["87.3"],"actions":["87.3"],"getters":["87.3"],"假设我们有一个简单的计数器应用":["87.4"],"以下是使用":["87.4"],"的例子":["87.4"],"store":["87.4","87.5"],"vuex":["87.5"],"go":["87.6"],"run":["87.6"],"read":["87.6"],"book":["87.6"],"获取所有的todos":["87.6"],"alltodos":["87.6"],"对每个属性":["88.1"],"来定义":["88.1"],"getter":["88.1"],"setter":["88.1"],"这个过程使得":["88.1"],"能够更灵活地捕获数据的变化":["88.2"],"依赖追踪":["88.2"],"dependency":["88.2"],"tracking":["88.2"],"仍然使用依赖追踪的机制":["88.2"],"但与":["88.2"],"标签中添加":["89.0"],"setup":["89.0","89.23"],"就可以做到":["89.0"],"函数是":["89.1"],"新增的一个选项":["89.1"],"它是组合式":["89.1"],"使用reactive":["89.2"],"去修改值无须":["89.2"],"ref其实也是内部调用":["89.2"],"来实现的":["89.2"],"我是message":["89.4"],"hr":["89.7"],"reactive":["89.8","89.18","89.19","89.20","93.3"],"不论是响应式还是普通的":["89.9"],"如果原始对象是":["89.12"],"非响应式":["89.12"],"作用基本一致":["89.15"],"他们都是用来监听响应式状态发生变化的":["89.16"],"当响应式状态发生变化时":["89.16"],"就会触发一个回调函数":["89.16"],"watch":["89.19"],"响应式":["89.21"],"追踪其依赖":["89.21"],"可以接收一个参数":["89.22"],"叫oninvalidate":["89.22"],"在组件的":["89.23"],"更新时机":["89.24"],"过程":["89.25"],"成为生命周期":["89.25"],"只调用一次":["89.27"],"元素插入父级dom调用":["89.27"],"any":["89.28","106.5"],"在元素上做些操作":["89.28"],"初始化一次":["89.28"],"el":["89.28"],"该值为":["89.29"],"oldvalue":["89.29"],"先前的值":["89.29"],"仅在":["89.29"],"beforeupdate":["89.29"],"updated":["89.29"],"中可用":["89.29"],"v":["89.30","90.12"],"move":["89.30"],"可以帮助我们提高代码的复用性":["89.31"],"让我们能在不同的组件中都利用":["89.31"],"案列":["89.31"],"实现一个窗口改变时获取宽高的":["89.31"],"hook":["89.31"],"组件通信方式":["90.1"],"可以实现父子组件":["90.1"],"child":["90.2","90.7"],"info":["90.2"],"我爱祖国":["90.2"],"money":["90.2"],"子组件获取父组件传递数据":["90.2"],"一种是原生的":["90.3"],"标签绑定原生":["90.4"],"事件点击事件":["90.4"],"默认会给事件回调注入":["90.4"],"事件对象":["90.4"],"我是子组件2":["90.5"],"click":["90.5","146.1","151.1"],"handler":["90.5"],"点击我触发xxx自定义事件":["90.5"],"我们会发现在":["90.5"],"但是在":["90.6"],"vue3":["90.6","90.10","91.13"],"中没有":["90.6"],"实现的":["90.7"],"下方代码":["90.7"],"相当于给组件":["90.7"],"传递一个":["90.7"],"与绑定一个自定义事件":["90.7"],"vue2":["90.8","105.6"],"框架中":["90.8"],"attrs属性与":["90.8"],"listeners":["90.8"],"比如":["90.8","90.9"],"那么子组件内部的方法与响应式数据父组件可以使用的":["90.9"],"在父组件挂载完毕获取组件实例":["90.9"],"父组件内部代码":["90.9"],"注入":["90.10"],"提供两个方法":["90.10"],"pinia":["90.11"],"web3doc":["90.11"],"父组件内部向指定的具名插槽传递结构":["90.12"],"需要注意":["90.12"],"可以替换为":["90.12"],"并且对":["91.5"],"menu":["91.6"],"slot":["91.8","91.10"],"父组件使用需对应名称":["91.9"],"派发给父组件的":["91.10"],"去使用":["91.10"],"父组件":["91.11","91.16"],"defineasynccomponent":["91.12"],"异步加载":["91.12"],"新增了":["91.13"],"了":["91.13"],"就不必跟踪何时加载数据并呈现相应的内容":["91.13"],"portal":["91.14"],"主要解决的问题":["91.14"],"因为teleport节点挂载在其他指定的dom节点下":["91.14"],"只会触发":["91.15"],"基本":["91.15"],"children":["91.16"],"modelvalue":["91.17"],"update":["91.17","163.8"],"input":["91.17","149.4"],"新增":["91.17"],"一个组件可以设置多个":["91.17"],"g":["92.2"],"版本在":["92.3"],"choose":["92.4"],"version":["92.4"],"that":["92.4"],"you":["92.4"],"want":["92.4"],"标签上支持原生":["92.5"],"esm":["92.5"],"yarn":["92.6"],"init":["92.7","99.3","110.6","124.4","165.11"],"one":["93.1"],"piece":["93.1"],"初次渲染快55":["93.2"],"lisi":["94.1"],"子组件":["94.2"],"常用的就是定义":["94.3"],"或者":["97.3","101.9","121.16"],"普通错误处理":["97.4"],"代码异常处理":["97.4"],"在请求或响应被":["97.4"],"then":["97.4"],"处理前拦截它们":["97.4"],"实现请求":["98.1"],"响应拦截器功能":["98.1"],"localstorage":["98.3"],"getitem":["98.3"],"请求头携带":["98.3"],"设置请求头":["98.3"],"status":["98.4","99.4","122.14"],"case":["98.4"],"接口重定向了":["98.4"],"break":["98.4"],"参数不正确":["98.4"],"postaction":["98.6"],"sys":["98.6"],"在页面中调用":["98.6"],"总是会有所不一样":["98.8"],"十分钟封装一个好用的":["98.8"],"将本地库所有变更添加到暂存区":["99.5"],"or":["99.6"],"filename":["99.7"],"比较暂存区和":["99.7"],"的所有差异":["99.7"],"查看极简日志信息":["99.8"],"oneline":["99.8"],"查看最近":["99.8"],"branch":["99.11","99.12"],"checkout":["99.13"],"分支合并到":["99.14"],"分支":["99.14"],"discard":["99.15"],"changes":["99.15"],"working":["99.15"],"directory":["99.15"],"而不新建":["99.16"],"reference":["99.16"],"为远程仓库起别名":["99.18"],"拉取远程分支":["99.20"],"并与本地分支合并":["99.20"],"表示将本地分支推送到与之存在追踪关系的远程分支":["99.21"],"通常两者同名":["99.21"],"如果该远程分支不存在":["99.21"],"则会被新建":["99.21"],"在空白处点鼠标右键选择":["100.2"],"keygen":["100.4"],"t":["100.4"],"rsa":["100.4","100.5"],"pub文件":["100.5"],"就可以克隆ssh地址了":["100.6"],"num":["101.2"],"普通数字":["101.2"],"也可以通过函数返回布尔值":["101.3"],"可以在元素类型后面接上":["101.4"],"表示由此类型元素组成的一个数组":["101.4"],"ts":["101.4","101.14","102.11","103.4","105.3","106.1","108.0","110.11"],"ok":["101.5"],"增长枚举":["101.6"],"不能带有return":["101.8"],"也可以定义":["101.8"],"是所有类型的子类型":["101.9"],"就是说你可以把":["101.9"],"赋值给":["101.9"],"将不会有返回值":["101.10"],"但本身不会出错":["101.11"],"编译成功":["101.12"],"man":["101.13"],"sex":["101.13"],"方式二":["101.14"],"使用any临时断言":["101.14"],"somevalue":["101.14"],"作为对象的模板":["102.0"],"distance":["102.2"],"private":["102.3"],"在类型":["102.8"],"上不存在":["102.8"],"boolean":["102.9"],"personclass2":["102.9"],"fullname":["102.10"],"是指不包含具体实现的方法":["102.11"],"public":["102.11","118.3"],"匿名函数":["103.1"],"箭头函数":["103.1"],"myadd":["103.1"],"同样也可以有任意个":["103.4"],"编译器创建参数数组":["103.4"],"名字是你在省略号":["103.4"],"后面给定的名字":["103.4"],"你可以在函数体内使用这个数组":["103.4"],"在实现上我们要注意严格判断两个参数的类型是否相等":["103.5"],"而不能简单的写一个":["103.5"],"typeof":["103.5"],"不预先指定具体的类型":["104.0"],"u":["104.5"],"getvalue":["104.6"],"类型":["104.7","118.15"],"typescript":["105.1"],"的简称":["105.1"],"的基础上加入了类型系统":["105.2"],"让每个参数都有明确的意义":["105.2"],"从而带来了更加":["105.2"],"边解释边执行":["105.3"],"错误只有在运行的时候才能发现":["105.3"],"友好地在编辑器里提示错误":["105.5"],"如以前在":["105.6"],"global":["105.7"],"查看版本":["105.7"],"tsc":["105.7"],"interfaces":["106.0"],"这样写是会报错的":["106.1"],"因为我们在person定义了name":["106.1"],"stirng":["106.3"],"带有可选属性的接口与普通的接口定义差不多":["106.4"],"在可选属性名字定义的后面加一个":["106.4"],"符号":["106.4"],"propname":["106.5"],"允许添加新的任意属性":["106.5"],"编译正确":["107.1"],"declaration":["108.0"],"生成相应的":["108.0"],"sourcemap":["108.0"],"outfile":["108.0"],"将输出文件合并为一个文件":["108.0"],"outdir":["108.0"],"指定输出目录":["108.0"],"rootdir":["108.0"],"用来控制输出目录结构":["108.0"],"removecomments":["108.0"],"删除编译后的所有的注释":["108.0"],"noemit":["108.0"],"不生成输出文件":["108.0"],"importhelpers":["108.0"],"相当于":["109.1"],"定义函数别名":["109.2"],"eslint":["110.2"],"stylelint":["110.2"],"prettier":["110.2"],"来对我们的代码质量做检测和修复":["110.2"],"环境准备":["110.3"],"pnpm":["110.4"],"performant":["110.4"],"意味":["110.4"],"高性能的":["110.4"],"项目配置":["110.5"],"eslintrc":["110.6"],"cjs":["110.6"],"npx":["110.6"],"配置文件":["110.6"],"module":["110.6"],"exports":["110.6","121.7"],"运行环境":["110.6"],"运行更漂亮的eslint":["110.7"],"使prettier规则优先级更高":["110.7"],"eslint优先级低":["110.7"],"关闭规则":["110.8"],"warn":["110.8"],"打开的规则作为警告":["110.8"],"不影响代码执行":["110.8"],"规则作为一个错误":["110.8"],"代码不能执行":["110.8"],"界面报错":["110.8"],"要求使用":["110.8"],"而不是":["110.8"],"multiple":["110.8"],"empty":["110.8"],"styles":["110.9"],"目录下创建一个":["110.9"],"文件":["110.9","110.10","124.6","165.6"],"当然项目中需要用到清除默认样式":["110.9"],"因此在":["110.9"],"引入":["110.9"],"reset":["110.9"],"去创建我们需要":["110.10"],"数据与接口":["110.10"],"文件夹内部创建一个":["110.10"],"用户信息数据":["110.10"],"createuserlist":["110.10"],"userid":["110.10"],"avatar":["110.10"],"wpimg":["110.10"],"wallstcn":["110.10"],"f778738c":["110.10"],"e4f8":["110.10"],"b634":["110.10"],"56703b4acafe":["110.10"],"gif":["110.10"],"admin":["110.10"],"elmessage":["110.11"],"element":["110.11"],"plus":["110.11"],"创建axios实例":["110.11"],"loginformdata":["110.12"],"loginresponsedata":["110.12"],"userinforeponsedata":["110.12"],"项目用户相关的请求地址":["110.12"],"enum":["110.12"],"login":["110.12","122.14","125.5"],"配置对应的信息":["111.1"],"检查配置文件是否配置成功":["111.1"],"数据库的常用命令包括管理数据库和表的命令":["112.0"],"databases":["112.1"],"列出所有数据库":["112.1"],"column1":["112.1","116.5","116.6"],"向表中插入数据":["112.2"],"select":["112.2"],"提供了多种数据类型":["113.0"],"用于定义表中列":["113.0"],"int":["113.1"],"常用的整数类型":["113.1"],"个字符":["113.3"],"varchar":["113.3"],"ss":["113.4"],"datetime":["113.4"],"存储日期和时间":["113.4"],"存储枚举值":["113.5"],"从一个预定义的值列表中选择一个值":["113.5"],"tables":["114.0"],"组成":["114.0"],"每个表包含多个记录":["114.0"],"允许用户根据需要自由地修改和定制其源代码":["114.1"],"跨平台支持":["114.1"],"mysql可以在多个操作系统上运行":["114.1"],"包括windows":["114.1"],"macos和各种linux发行版":["114.1"],"服务器":["116.0"],"命令行客户端":["116.1"],"中创建一个新的数据库":["116.2"],"用于存储数据":["116.2"],"sql":["116.3","116.8"],"column2":["116.6"],"语句从表中删除数据":["116.8"],"shell":["117.1","117.5","125.5","125.7"],"movie":["117.3"],"chunk":["117.4"],"得到数据流":["117.4"],"通过字符串得到html结构":["117.4"],"美丽人生":["117.6"],"la":["117.6"],"vita":["117.6"],"è":["117.6"],"bella":["117.6"],"p2578474613":["117.6"],"辛德勒的名单":["117.6"],"schindler":["117.6"],"list":["117.6","118.4"],"p492406163":["117.6"],"星际穿越":["117.6"],"interstellar":["117.6"],"p2614988097":["117.6"],"盗梦空间":["117.6"],"inception":["117.6"],"平台":["118.0"],"并向客户端响应具体的内容":["118.2"],"req":["118.2","118.4","118.5","118.6","120.16","122.5","122.11","122.14"],"gender":["118.2"],"files":["118.3"],"next":["118.5","118.6"],"三个参数":["118.5"],"mw2":["118.7"],"调用了第二个局部生效的中间件":["118.7"],"两种定义局部中间件的方式":["118.7"],"错误级别的中间件":["118.8"],"用来捕获整个项目中发生的异常错误":["118.8"],"从而防止项目异常崩溃的问题":["118.8"],"错误级别中间件的处理函数中":["118.8"],"必须有":["118.8"],"个形参":["118.8"],"形参顺序从前到后分别是":["118.8"],"err":["118.8"],"错误级别的中间件必须注册在所有路由之后":["118.8"],"require":["118.8","120.3","120.6","121.9","121.19","122.2"],"代码跨域获取资源":["118.11"],"浏览器的同源安全策略默认会阻止网页":["118.11"],"跨域":["118.11"],"获取资源":["118.11"],"但如果接口服务器配置了":["118.11"],"个请求头":["118.12"],"accept":["118.12","118.14"],"language":["118.12","118.14"],"dpr":["118.12"],"downlink":["118.12"],"save":["118.12","123.0"],"请求头中包含自定义头部字段":["118.15"],"向服务器发送了":["118.15"],"runtime":["119.1"],"environment":["119.1"],"是一个基于":["119.1"],"的性能和效率非常高":["119.2"],"java":["119.2"],"语言是一个请求开启一个线程":["119.2"],"当请求处理完毕后就关闭这个线程":["119.2"],"时的劣势":["119.3"],"模式":["120.1"],"说明":["120.1"],"r":["120.1"],"读取文件":["120.1"],"文件不存在抛异常":["120.1"],"读取的数据":["120.3"],"如果未指定编码格式则返回一个":["120.3"],"buffer":["120.3"],"监听流的开启和关闭":["120.4"],"这几个监听不是必须的":["120.4"],"once":["120.4","120.7"],"open":["120.4"],"可读流打开了":["120.4"],"flag":["120.6"],"若是字符串则指定编码格式":["120.6"],"回调函数":["120.6"],"ws":["120.7"],"createwritestream":["120.7"],"hello3":["120.7"],"txt":["120.7"],"进制的形式显示":["120.8"],"每一个元素范围是":["120.8"],"00":["120.8","132.3","132.4"],"ff":["120.8"],"即":["120.8"],"原因":["120.9"],"代码在运行的时候":["120.9"],"会以执行":["120.9"],"命令时所处的目录":["120.9"],"截断文件":["120.10"],"truncate":["120.10"],"len":["120.10"],"truncatesync":["120.10"],"建立目录":["120.10"],"mkdir":["120.10"],"mode":["120.10"],"模块是":["120.11","120.15"],"会被忽略":["120.12"],"pathstr":["120.12"],"ext":["120.13"],"文件路径":["120.13"],"文件扩展名":["120.13"],"fpath":["120.14"],"not":["120.17"],"found":["120.17"],"判断用户请求的是否为":["120.17"],"模块是可组合":["121.2"],"分解和更换的单元":["121.2"],"提高维护性":["121.3"],"内置模块":["121.5"],"和函数作用域类似":["121.6"],"在自定义模块中定义的变量":["121.6"],"将模块内的成员共享出去":["121.7"],"变量代表当前模块":["121.8"],"导入自定义模块时":["121.11"],"若省略文件扩展名":["121.11"],"则":["121.11","121.21"],"进行加载":["121.12","121.22"],"直到":["121.12"],"文件系统的根目录":["121.12"],"假设在":["121.12","121.22"],"作为":["121.13"],"中的内置模块与自定义模块":["121.15"],"包是由第三方个人或团队开发出来的":["121.15"],"免费供所有人使用":["121.15"],"包的元整名称":["121.16"],"registry":["121.17"],"查看当前包镜像源":["121.17"],"包的入口文件":["121.18"],"readme":["121.18"],"md":["121.18"],"包的说明文档":["121.18"],"模块的代码只会被执行一次":["121.19"],"这样的路径标识符":["121.21"],"会把它当作内置模块或第三方模块进行加载":["121.21"],"直到文件系统的根目录":["121.22"],"users":["121.22"],"lemomn":["121.22"],"project":["121.22"],"并寻找":["121.23"],"属性值作为":["121.23"],"加载的入口":["121.23"],"db":["122.2"],"affectedrows":["122.3"],"插入成功":["122.3"],"向表中新增数据时":["122.3"],"如果数据对象的每个属性和数据表的字段一一对应":["122.3"],"则可以通过如下方式快速插入数据":["122.3"],"bruce":["122.3","122.5","122.14"],"调用接口":["122.6"],"优点":["122.6"],"开发体验好":["122.6"],"前端专业页面开发":["122.6"],"后端专注接口开发":["122.6"],"且需要良好的":["122.7"],"seo":["122.7"],"saveuninitalized":["122.11"],"向":["122.11"],"中存数据":["122.11"],"中间件配置成功后":["122.11"],"可通过":["122.11"],"访问":["122.11"],"存储用户信息":["122.11"],"不推荐使用":["122.13"],"认证机制":["122.13"],"工作原理图":["122.13"],"用户的信息通过":["122.13"],"token":["122.13"],"字符串的形式":["122.13"],"密钥为任意字符串":["122.14"],"secretkey":["122.14"],"登录成功":["122.14"],"sign":["122.14"],"添加开发依赖项":["123.0"],"dev":["123.0"],"移除依赖项":["123.0"],"uninstall":["123.0","124.3"],"manager":["124.0"],"一起安装的":["124.2"],"当你安装":["124.2"],"安装指定的包":["124.3"],"安装项目中":["124.3"],"文件中列出的所有依赖项":["124.3"],"脚本和其他元数据":["124.4"],"可以通过运行":["124.4"],"命令来初始化一个新的项目":["124.4"],"文件的":["124.5"],"dependencies":["124.5"],"本教程将向你展示如何发布自己的包到":["125.0"],"如果你还没有":["125.1"],"在你的项目目录中":["125.2"],"打开终端":["125.2"],"在项目目录中":["125.3"],"这个文件由":["125.4"],"按照提示提供你的用户名":["125.5"],"在你的项目中":["125.6"],"修改代码并增加新的功能或修复":["125.6"],"然后":["126.1"],"可以按照以下步骤安装":["126.1"],"运行以下命令来安装依赖项":["126.2"],"将读取项目根目录下的":["126.2"],"并下载安装所有列出的依赖项":["126.2"],"chongqing":["128.0"],"后堡方向":["128.1"],"4站到":["128.1"],"到了重庆后不得不去的一个地方":["128.2"],"这里更像是一座城市的名片":["128.2"],"不确定是否还可以进去":["128.3"],"涂鸦街":["128.3"],"艺术感和设计感十足":["128.3"],"早9晚5":["128.4"],"停止入场时间":["128.4"],"下午16":["128.4"],"30点后":["128.4"],"周一闭馆":["128.4"],"需提前预约":["128.4"],"木货街老火锅":["128.5"],"较场口店":["128.5"],"三角粑":["128.5"],"png":["129.0"],"alt":["129.0","132.0","133.0","135.0"],"nanjing":["130.0"],"南京南站":["130.1"],"内换乘":["130.1"],"迈皋桥方向":["130.1","130.3"],"鸡鸣寺":["130.2"],"号口":["130.2"],"下车之后步行":["130.2"],"米到达":["130.2","130.4"],"号线":["130.3","135.1","135.4","136.1"],"站到":["130.3","134.1","135.1","135.4","135.5","136.1"],"号口出":["130.3"],"步行":["130.3","137.3","137.4"],"米到终点":["130.3"],"吃完早饭":["130.3","130.4"],"之后步行":["130.4"],"步行到":["130.4","137.5"],"地铁口":["130.4"],"3eaf7c":["130.5","132.1","137.5"],"张府园":["130.5"],"shangrao":["131.0"],"上饶汽车东站":["131.1"],"搭乘巴士到":["131.1"],"禹皇顶方向":["131.2","131.3"],"再左行去阳光海岸":["131.3"],"在上饶站乘坐":["131.4"],"路":["131.4"],"夜珠垄路口方向":["131.4"],"新火车站上车乘坐":["131.4"],"具体":["131.5"],"svg":["132.0","133.0","135.0"],"可先游玩之后再到小吃街吃东西":["132.1"],"南昌水煮":["132.1"],"皮蛋瓦罐汤":["132.1"],"拉面麻油小包子":["132.1"],"小程序":["132.2"],"江博预约":["132.2"],"进行预约":["132.2"],"景点位置":["132.2","132.4"],"1号线珠江路口站":["132.2"],"开放时间":["132.3","132.4","136.3"],"需要携带":["132.3"],"身份证":["132.3"],"拌粉":["132.4"],"瓦罐汤":["132.4"],"赣菜":["132.4"],"其他景点":["132.4"],"可供替换":["132.4"],"南昌之星":["132.4"],"南昌之星摩天轮":["132.4"],"门票":["132.4","136.2","136.3"],"hangzhou":["134.0"],"湘湖方向":["134.1"],"乘坐":["134.1"],"孤山":["134.2"],"西冷印社":["134.2"],"曲院风荷":["134.2"],"苏堤":["134.2"],"西湖湿地":["134.3"],"属于湿地公园":["134.3"],"路线":["134.3"],"speaker":["134.4"],"宋城古城的景色":["134.4"],"以及情桥可以书写祝愿":["134.4"],"地铁":["135.1","136.1"],"柏林方向":["135.1"],"站内换乘":["135.3"],"青龙山地铁小镇方向":["135.3"],"武昌火车站":["135.3"],"e":["135.3","151.1"],"地铁站乘坐":["135.4"],"佛祖岭方向":["135.4","135.5"],"洪山广场":["135.5"],"changsha":["136.0"],"梅溪湖西方向":["136.1"],"公园中央的巨型汉白玉碑正面镌刻着毛泽东手书":["136.2"],"橘子洲头":["136.2"],"背面是":["136.2"],"沁园春":["136.2"],"长沙":["136.2"],"全文":["136.2"],"在特定时间段的周六晚上":["136.2"],"橘子洲烟火是一场绝不可错过的视觉盛宴":["136.2"],"euro":["136.3"],"元":["136.3"],"alarm":["136.3"],"clock":["136.3"],"早":["136.3"],"马王堆汉墓出土的":["136.4"],"年前的西汉女尸":["136.4"],"陈列馆里展有薄如蝉翼的素纱单衣":["136.4"],"完好无损的印花绵袍":["136.4"],"彩绘漆器帛画以及各种木俑和乐器":["136.4"],"辣塔粉馆":["136.5"],"周记粉店":["136.5"],"双记粉店":["136.5"],"矮子粉店":["136.5"],"老店":["136.5"],"湘菜":["136.5"],"一盏灯":["136.5"],"城东五一新村":["136.6"],"五一新村是新起的吃货的天堂":["136.6"],"长沙吃货们的夜宵新去处":["136.6"],"作为长沙一条老街":["136.6"],"五一新村藏身于芙蓉区的特色小街":["136.6"],"每当夜幕降临五一新村街就会变得热闹起来":["136.6"],"在这里汇集了长沙各种美食":["136.6"],"名牌老店搬到这里更为它带来了巨大的人气":["136.6"],"城东":["136.6"],"砂子塘":["136.6"],"xiamen":["137.0"],"厦门北站":["137.1"],"乘坐快":["137.1"],"厦大白城":["137.2"],"站乘坐":["137.2"],"软件园方向":["137.2"],"东渡":["137.3"],"800m":["137.3"],"厦门邮轮中心厦鼓码头":["137.3"],"150m":["137.4"],"到达":["137.4"],"芙蓉湖":["137.4"],"芙蓉隧道":["137.4"],"情人谷":["137.4"],"南门":["137.4"],"中的一个元素":["138.1"],"允许使用":["138.1"],"轴向右延伸":["138.3"],"但在大多数情况下":["138.4"],"的绘图上下文进行绘制是最基本和有效的方法":["138.4"],"文本":["138.5"],"图像":["138.5"],"矩形和其他形状等":["138.5"],"绘图元素可以通过":["138.5"],"陈述观点":["138.6"],"以及制作各种绚丽的视觉展示等":["138.6"],"您可以通过":["138.6"],"脚本使":["138.7"],"绘制出具有动态效果的图像和视觉艺术也显得非常合适":["138.7"],"html5":["138.8"],"中提供了许多优势":["138.8"],"但也存在一些限制":["138.8"],"图像旋转":["139.0"],"math":["139.1","164.3"],"pi":["139.1"],"表示放大十倍":["139.2"],"fillrect":["139.2","139.5","144.2","146.2"],"轴和":["139.3"],"轴移动的距离":["139.3"],"单位像素":["139.3"],"默认值1":["139.4"],"单位倍数":["139.4"],"水平倾斜":["139.4"],"默认值0":["139.4"],"单位弧度":["139.4"],"垂直倾斜":["139.4"],"源":["140.0"],"绘制在另一个物体":["140.0"],"目标":["140.0"],"只会显示目标图像之外源图像部分":["140.1"],"destination":["140.1"],"在源图像上方显示目标图像":["140.1"],"在源图像顶部显示目标图像":["140.1"],"源图像之外的目标图像部分不会被显示":["140.1"],"htmlcanvaselement":["141.1"],"找到画布":["141.1"],"moveto":["141.2"],"把路径移动到画布中的指定点":["141.2"],"不创建线条":["141.2"],"高度为线条宽度的一半":["142.1"],"linejoin":["142.1","149.3"],"指定线段交点的样式":["142.1"],"交点为扇形":["142.1"],"bevel":["142.1"],"交点为三角形底边":["142.1"],"miter":["142.1"],"从左到右的渐变等等":["142.2"],"该方法的返回值是一个":["142.2"],"canvasgradient":["142.2"],"该对象只有一个":["142.2"],"addcolorstop":["142.2"],"方向":["142.2"],"用来指定渐变点的颜色":["142.2"],"方法接受两个参数":["142.2"],"第一个参数是":["142.2"],"之间的一个位置量":["142.2"],"表示起点":["142.2"],"表示终点":["142.2"],"第二个参数是一个字符串":["142.2","142.3"],"blob":["142.3"],"有四个可能的值":["142.3"],"分别是":["142.3"],"repeat":["142.3"],"双向重复":["142.3"],"水平重复":["142.3"],"shadowoffsetx":["142.4"],"阴影的水平位移":["142.4"],"文字":["144.0","144.6"],"路径":["144.2"],"stroke":["144.3"],"closepath":["144.3"],"嘴巴":["144.3"],"sy":["144.5"],"swidth":["144.5"],"sheight":["144.5"],"获取图片":["144.5"],"textbaseline":["144.6"],"文本的垂直位置":["144.6"],"alphabetic":["144.6"],"大小":["144.6"],"字体":["144.6"],"100px":["144.6"],"microsoft":["144.6"],"yahei":["144.6"],"填充渲染文字":["144.6"],"控制点2":["145.2"],"again":["146.1"],"获取画笔":["146.2"],"getcontext":["146.2"],"2d":["146.2"],"fillstyle":["146.2"],"ccc":["146.2"],"restore":["147.3"],"绘制分钟的刻度":["147.3"],"canvas":["147.4","148.2","152.1","162.0"],"ref":["148.2"],"连接初圆润":["149.3"],"细线条":["149.4"],"savebtn":["149.4"],"保存签名":["149.4"],"change":["149.4"],"0xff0000":["151.2"],"drawrect":["151.2"],"技术的快速":["152.1"],"利用":["152.3"],"webgl":["152.3","162.0"],"pixijs":["152.4","152.6"],"提供了一系列强大的功能":["152.5"],"包括精灵":["152.5"],"加载一个纹理":["152.7"],"loader":["152.7"],"image":["152.7","165.7"],"devicepixelratio":["153.2","154.1","156.1"],"像素比":["153.2","154.1","156.1"],"antialias":["153.2"],"抗锯齿":["153.2"],"将应用画布添加到dom中":["153.2","154.1","156.1"],"innerheight":["154.1"],"backgroundcolor":["154.1"],"0x1099bb":["154.1","156.1"],"resolution":["154.1","156.1"],"screen":["154.2","157.3"],"blur":["156.2"],"将模糊滤镜添加到精灵上":["156.2"],"sprite":["156.2"],"outlinefilter":["156.3"],"0xffff00":["156.3"],"texture":["157.2"],"pixi":["157.2"],"设置位置":["157.3"],"ticker":["157.4"],"beginfill":["158.1"],"0x66ccff":["158.1"],"0x660000":["158.2","158.5"],"参数一个数组":["158.2"],"数组中的每一个元素是一个点的坐标":["158.2"],"每两个元素是一个点的x坐标和y坐标":["158.2"],"绘制圆角矩形":["158.3"],"x坐标":["158.4"],"y坐标":["158.4"],"半径":["158.4"],"其实角度":["158.4"],"宽度":["158.5"],"颜色":["158.5"],"assets":["160.0","160.1"],"用于加载资源":["160.0"],"pic1":["160.1"],"pic":["160.1","160.2"],"rmb":["160.1","160.2"],"bdstatic":["160.1","160.2"],"05b0ea405c9e690ab51627853a13de56":["160.1","160.2"],"jpeg":["160.1","160.2"],"pic2":["160.1","160.2"],"img14":["160.1","160.2"],"360buyimg":["160.1","160.2"],"jfs":["160.2"],"t1":["160.2"],"5c1b0581e1fa6c1c3":["160.2"],"58519cee2a0039e0":["160.2"],"jpg":["160.2"],"是一个基于文本的开放网络标准":["161.1"],"用来定义用于网络的矢量图形":["161.1"],"是看不出效果的":["161.3"],"cx":["161.5","161.6"],"cy":["161.5"],"ellipse":["161.6"],"points":["161.7"],"进行渲染":["162.0"],"它是一种在":["162.0"],"浏览器中渲染":["162.0"],"提供了多种渲染器":["162.0"],"包括基本的":["162.0"],"渲染器和":["162.0"],"css3d":["162.0"],"visual":["163.3"],"orbitcontrols":["163.6"],"或者自动旋转等效果":["163.8"],"就需要加入controls":["163.8"],"scene2":["163.9"],"snippet":["163.9","163.12"],"scene":["163.12"],"cube":["164.1"],"components":["164.5"],"transform":["164.5"],"开始搭建个人网站":["165.0"],"xiaosu":["165.0"],"建议勾选":["165.1"],"scripts":["165.2"],"docs":["165.2","165.4"],"build":["165.2"],"site":["165.3"],"文件就是我们的配置文件":["165.6"],"新建一个":["165.6"],"lastupdated":["165.7"],"hero":["165.7"],"组件库名称":["165.7"],"组件库文本":["165.7"],"tagline":["165.7"],"组件库副标题描述":["165.7"],"description":["165.9"],"themeconfig":["165.9"],"sitetitle":["165.9"],"左上角的":["165.9"],"logo":["165.9"],"关于侧边栏":["165.10"],"collapsible":["165.10"],"进入生成的文件夹":["165.11"],"cd":["165.11"],"dist":["165.11"],"如果是发布到自定义域名":["165.11"],"echo":["165.11"],"cname":["165.11"],"git":["165.11"]},{"0":["4.12","6.22","12.6","16.3","16.4","16.5","16.7","16.10","29.8","34.2","49.3","49.4","49.6","57.2","65.3","65.5","67.14","79.3","79.8","80.15","82.4","82.5","87.4","89.31","104.6","121.18","122.2","139.3","158.1","158.2"],"1":["4.5","4.14","9.2","16.5","16.7","20.1","21.5","21.8","21.12","21.15","28.17","28.20","29.9","29.10","34.2","57.2","69.9","78.19","83.2","83.3","83.4","101.3","101.4","120.3","130.5","139.5"],"2":["6.25","7.1","17.3","20.1","20.13","21.2","21.5","21.8","21.15","28.19","28.20","29.9","29.10","29.11","30.3","30.7","30.8","48.3","57.3","67.10","69.9","79.1","83.2","83.3","83.4","98.1","99.1","99.15","99.19","113.1","120.6","125.5","125.6","136.4","137.3","157.3","162.0","164.2"],"3":["6.25","20.5","20.13","20.14","21.9","22.4","28.19","28.20","28.28","29.10","30.3","38.0","51.0","68.1","73.6","73.8","76.8","76.12","83.2","83.3","83.4","83.6","87.1","87.3","92.4","99.14","99.21","122.3","128.2","128.3","136.5","137.4","164.1"],"4":["5.10","16.14","16.16","17.3","28.15","28.19","28.23","28.28","28.29","28.30","45.4","49.1","51.0","67.10","76.8","83.2","83.3","83.4","83.6","99.7","110.7","122.14","128.5","132.1","132.3","135.2","136.3","153.2","164.3"],"5":["28.2","28.23","28.24","28.28","28.29","28.30","47.1","49.1","83.2","83.3","83.4","84.6","92.3","99.8","128.5","132.1","132.3","132.4","136.6","137.2"],"6":["18.8","47.1","50.3","76.8","132.1"],"7":["76.12","132.1"],"8":["68.2","76.12","78.19","120.3","132.1"],"9":["132.1"],"10":["28.24","33.5","76.12","136.3","142.1"],"14":["65.5"],"15":["28.24"],"16":["33.2","136.3"],"20":["22.6","34.18","103.3","144.3","161.9"],"23":["18.16","62.1"],"25":["128.4"],"29":["28.21","122.5"],"30":["12.2","14.2","16.6","54.8","73.12","73.16","73.19"],"32":["78.19"],"34":["18.16","33.13"],"35":["131.4","160.1"],"40":["161.7"],"42":["68.2","101.7"],"45":["164.5"],"50":["136.2","144.6","161.3"],"59":["62.1"],"70":["139.1","161.7"],"80":["56.4","161.7"],"95":["161.5"],"96":["137.5"],"100":["139.2","144.6","145.1","158.2","161.6","161.8"],"120":["161.8"],"123":["67.14","89.4","101.1","106.7"],"127":["122.2"],"147":["113.1"],"150":["151.2"],"180":["139.1"],"200":["137.2","142.2","144.6","161.4"],"250":["144.3"],"255":["120.8"],"280":["131.4"],"300":["135.2","135.3","161.9"],"308":["68.2"],"324":["68.1"],"345":["68.2"],"360":["67.13"],"402":["135.3"],"403":["98.4"],"404":["98.4"],"420":["23.11"],"483":["113.1"],"647":["113.1"],"648":["113.1"],"1000":["87.5"],"1970":["65.1"],"2023":["62.1"],"2224":["160.1"],"5000":["110.11"],"12087":["160.1"],"23739":["160.1"],"111111":["110.10"],"11111111":["120.8"],"padding":["4.1"],"不能涉及差异化样式":["4.2"],"color":["4.3","136.2","149.4"],"css":["4.4","5.0","5.1","5.5","5.6","5.7","6.3","6.9","8.1","142.2","161.1"],"orange":["4.5"],"tip":["4.5","29.1","29.3","57.4","113.5"],"注意":["4.5","20.4","32.13","101.3","165.9"],"选择器3":["4.6"],"选择器":["4.6","7.0"],"li":["4.7","56.5","80.10","81.11","81.13"],"a":["4.8","21.11","21.13","21.14","22.3","22.5","29.9","99.6","101.14","102.9","106.5","106.6","117.6","120.14","121.22","165.1","165.11"],"good":["4.9"],"hover":["4.11"],"光标经过链接的样式":["4.11"],"的第":["4.12"],"个":["4.12"],"可以是数字":["4.12"],"关键字":["4.12","6.16","13.4","102.0"],"even":["4.12"],"odd":["4.12"],"公式":["4.12"],"从":["4.12","67.4","108.0"],"开始":["4.12"],"size":["4.14","60.1"],"伪元素清除浮动":["4.14"],"额外标签法":["4.14"],"隔墙法":["4.14"],"在浮动元素后面添加一个块级标签":["4.14"],"如div":["4.14"],"并设置":["4.14"],"clear":["4.14"],"both":["4.14"],"div":["4.14","6.23","6.24","26.2","26.3","26.5","56.1","78.6","78.8","85.16","90.4","146.1"],"工具":["5.0"],"即可":["5.1"],"水平排列":["5.2"],"默认值":["5.2"],"reverse":["5.2"],"水平逆向排列":["5.2"],"项目平均分布在主轴上":["5.3"],"两端不留空白":["5.3"],"around":["5.3","5.10"],"两端留有空白":["5.3"],"指定":["5.4"],"项目是否换行":["5.4"],"nowrap":["5.4"],"的缩写":["5.5"],"属性可以控制项目在空间不足时的缩小比例":["5.6"],"则会参考该值进行布局":["5.7"],"嵌套的":["5.8"],"容器有自己的主轴和交叉轴":["5.8"],"end":["5.9","117.4","120.4"],"多行项目靠交叉轴末尾位置对齐":["5.9"],"center":["5.9","8.7"],"多行项目在交叉轴上居中对齐":["5.9"],"space":["5.9","9.1"],"between":["5.9"],"通过设置":["5.10"],"属性为":["5.10"],"实现项目平均分布":["5.10"],"columns":["6.1","114.0"],"通过将网格容器":["6.1"],"container":["6.1","6.3","6.23","6.24"],"我们可以通过设置":["6.2"],"display":["6.2","8.8","9.2"],"rows":["6.3"],"属性来定义列和行的大小和结构":["6.3"],"span":["6.4","6.16","91.10"],"允许一个网格项跨越多个行或列":["6.4"],"我们可以使用":["6.4"],"布局提供了一系列强大的属性":["6.5"],"可以指定固定大小":["6.6"],"如像素":["6.6"],"百分比等":["6.6"],"也可以使用":["6.6"],"fr":["6.6"],"单位表示可用空间的比例分配":["6.6"],"header":["6.7","6.24","122.13"],"areas":["6.8"],"的缩写属性":["6.8"],"可以通过一个属性同时定义列":["6.8"],"行和区域":["6.8"],"可以使用两个值表示行和列的间隔":["6.9"],"分别定义网格列和行之间的间隔":["6.10"],"与":["6.10","35.8","63.0","64.0","87.3","108.0"],"定义了当网格容器中的网格项目无法放入先前定义的网格轨道时":["6.11"],"自动创建的额外列和行的大小":["6.11"],"可以指定固定大小或使用":["6.11"],"默认值是":["6.12"],"row":["6.12"],"表示按照行进行放置":["6.12"],"用于在网格项目中定义对齐方式":["6.13"],"控制项目在列轴上的对齐方式":["6.13"],"控制网格项目在列轴上的对齐方式":["6.14"],"用于定义单个网格项目自身在网格单元格中的对齐方式":["6.15"],"用于将网格项目放置在指定的列和行位置":["6.16"],"可以使用数字":["6.16"],"布局":["6.17"],"100px":["6.18"],"auto":["6.18","11.2"],"1fr":["6.18","6.19"],"定义三列":["6.18","6.19"],"第一列宽度为":["6.18"],"repeat":["6.19"],"每列宽度为1fr":["6.19"],"width":["6.20","8.1","9.2","23.11","77.23","89.31","148.2","157.1"],"768px":["6.20"],"initial":["6.22","57.2","77.23"],"scale":["6.22","57.2","77.23"],"title":["6.22","57.2","91.6"],"simple":["6.22"],"layout":["6.22","6.23","6.24"],"body":["6.23","6.24","17.5","122.11","154.1"],"class":["6.23","6.24","56.1","78.11","78.20","79.9","80.14","82.6","92.4","102.0","102.9","129.0","132.0","133.0","135.0"],"布局和":["6.26"],"布局适用于复杂的网页布局":["6.27"],"如主页布局":["6.27"],"支持网格区域的命名":["6.28"],"更具语义性":["6.28"],"flexbox":["6.28"],"grid":["6.29","6.31"],"中的顺序一致":["6.30"],"可以使用":["6.30","60.0","78.13","84.6"],"order":["6.30"],"布局在现代浏览器中得到了很好的支持":["6.31"],"布局强大":["6.32"],"但在某些情况下可能会对性能产生一定影响":["6.32"],"以提高代码的可读性和维护性":["6.33"],"嵌套使用":["6.33"],"id":["7.0","81.5","86.6"],"比较规则":["7.1"],"按照":["7.1"],"从左到右":["7.1"],"的顺序":["7.1"],"依次比较大小":["7.1"],"当前位胜出后":["7.1"],"后面的不再对比":["7.1"],"例如":["7.1","58.1","138.8"],"height":["8.3","9.3","157.3"],"100vh":["8.3"],"position":["8.5"],"absolute":["8.5"],"translate":["8.6"],"content":["8.7","77.23","98.3"],"000":["9.1"],"white":["9.1"],"400px":["9.2"],"设置元素的宽度":["9.2"],"box":["9.2","56.1","89.30"],"60px":["9.3"],"line":["9.3"],"30px":["9.3"],"track":["10.0"],"没有滑块":["10.0"],"20px":["11.1"],"top":["11.1","90.11"],"object":["11.2","20.1","20.4","20.12","46.2","53.4"],"fit":["11.2"],"cover":["11.2"],"age":["12.1","12.3","14.2","15.22","35.3","73.4","73.12","73.16","73.19","80.5","80.8","80.11","102.11","106.1","106.2"],"this":["12.1","13.4","15.9","17.18","21.17","47.4","47.5","53.7","53.9","79.4","79.8","79.11","80.5","80.7","80.8","80.9","84.2","84.4","84.5","85.9","101.14"],"person2":["12.2"],"name":["12.3","14.2","15.9","15.11","15.14","22.9","53.3","53.9","73.2","73.4","73.18","74.1","77.23","80.5","89.6","89.17","89.20","102.9","116.4","116.6","126.2","149.4"],"major":["12.3"],"super":["12.3","79.4","82.3","82.5","82.6","84.4","102.6"],"sayhello":["12.4","15.12","70.2","71.1"],"console":["12.4","14.2","18.9","20.8","20.9","20.15","22.2","28.26","30.8","32.5","34.3","34.5","34.7","34.18","45.3","52.5","53.3","53.7","53.8","53.9","55.2","55.3","58.9","63.6","64.6","68.2","70.2","71.1","73.20","98.6","101.11","103.4","104.6","110.8","120.7","120.12","160.2"],"multiply":["12.5"],"if":["12.6","43.8","46.2","48.2","48.7","49.2","54.5","77.14","79.11","84.1","120.3","120.17","141.1"],"throw":["12.6","118.8"],"new":["12.6","14.2","14.4","20.12","53.2","65.4","71.2","118.8","144.5","147.3","154.2","163.7"],"error":["12.6","52.3","52.4","101.5","102.8","118.8"],"半径不能是负的":["12.6"],"入门":["13.1"],"js":["13.2","14.2","20.4","33.5","34.5","34.10","46.1","48.5","58.2","58.3","65.2","67.5","67.6","67.8","67.9","67.11","67.12","73.4","76.4","76.10","76.12","76.14","86.2","97.4","120.11","120.15","121.11","121.22","124.1","139.3","142.4","163.9","163.12"],"的基础":["13.2"],"并且也被其他编程语言":["13.2"],"如":["13.2","17.10","48.0","69.11","77.14","88.1","91.14"],"的语言标准":["13.3"],"还在此基础上新增了一些拓展":["13.3"],"使得我们可以在浏览器可以操作":["13.3"],"dom":["13.3","161.1"],"bom":["13.3"],"在":["13.3","27.1","43.5","53.1","77.8","87.3","94.3"],"let":["13.4","18.12","18.19","29.2","29.10","33.5","34.5","34.9","34.10","49.6","89.6","89.8","89.19","90.2","101.8","104.6","144.5"],"和":["13.4","26.2","33.6","65.4","66.6","87.2","92.5","101.8","137.4"],"const":["13.4","14.2","15.13","29.9","46.1","68.2","69.8","71.2","73.9","73.17","74.1","76.12","78.2","78.6","78.8","78.22","80.5","83.2","83.3","83.4","83.5","84.2","84.3","84.4","84.5","86.9","89.4","89.31","98.2","101.13","102.10","104.5","118.10"],"提供块级作用域":["13.4"],"支持箭头函数":["13.4"],"简化函数定义和":["13.4"],"的处理":["13.4"],"新增模板字符串":["13.4"],"支持多行字符串和插入表达式":["13.4"],"引入了解构赋值":["13.4"],"可以方便地从数组或对象中提取值":["13.4"],"提供了类和模块化的支持":["13.4"],"更接近传统面向对象编程":["13.4"],"添加了":["13.4"],"promise":["13.4"],"用于更好地处理异步操作":["13.4"],"for":["13.4","30.0"],"of":["13.4","21.13","21.14"],"循环":["13.4"],"用于遍历可迭代对象":["13.4"],"引入":["13.4"],"symbol":["13.4"],"类型":["13.4","101.8"],"用于创建唯一的对象属性名":["13.4"],"中一种强大的数据结构":["14.1"],"对每个键值对执行回调函数":["14.2"],"mymap":["14.2","14.4"],"添加键值对":["14.2"],"john":["14.2","15.14","45.3","53.2","53.3","74.1"],"获取值":["14.2"],"log":["14.2","15.14","18.9","20.9","20.11","20.15","22.2","28.26","30.8","31.1","32.5","34.3","34.7","34.14","34.18","45.1","52.5","53.7","53.8","53.9","55.2","55.3","55.4","58.6","58.9","63.6","64.6","68.2","70.2","71.1","73.20","76.11","103.4","104.6","106.7","118.6","120.7","120.12","151.1","160.2"],"mymap2":["14.5"],"dos":["14.6"],"合并两个":["14.6"],"对象时":["14.6"],"代码组织方式会变得不够优雅和高效":["15.1"],"代码量庞大":["15.2"],"文件众多":["15.2"],"从而避免了命名冲突的问题":["15.3"],"开发者可以更容易地理解每个模块的功能":["15.4"],"只需要导入相应的模块":["15.5"],"export":["15.6","81.10","87.3"],"module1":["15.7","15.13","15.23"],"constructor":["15.9","82.5","82.6","102.7"],"我们可以将其他模块中的变量":["15.10"],"输出":["15.14","17.16","17.17","47.1","53.2","55.1","55.2","55.3","55.4","63.6","64.6","68.2"],"main":["15.16","15.19","15.22","87.3"],"hello":["15.17","18.14","19.4","19.5","31.1","69.8","70.2","71.1","71.2","73.7","78.2","80.7","118.7","120.6"],"my":["15.18","19.4","19.5","70.2","85.4","85.17","90.8"],"is":["15.18","17.17","19.2","19.5","53.6","53.8","80.9","91.15","101.14","120.16"],"import":["15.19","15.21","15.23","80.14","110.9"],"myname":["15.19"],"避免命名冲突或提高代码可读性":["15.20"],"as":["15.22"],"then":["15.23","52.5","98.6","160.1"],"需要注意以下几点":["15.24"],"strict":["15.27","108.0"],"每个模块都有自己的作用域":["15.28"],"并且可以与其他模块进行交互":["15.28"],"模块化的意义在于避免命名冲突":["15.28"],"中的元素只会":["16.1"],"可以连写":["16.3"],"add":["16.5","16.6","16.10","99.18","118.4","126.2","165.11"],"forty":["16.8"],"two":["16.8"],"方法相同":["16.9"],"myarray":["16.12"],"filter":["16.15","87.6"],"x":["16.15","17.12","20.13","92.4","118.12","144.6","149.3"],"has":["16.15"],"就用默认值":["17.2"],"只有这两种情况下":["17.4"],"默认值才会生效":["17.4"],"上面代码指定":["17.5"],"如果没有提供参数":["17.5"],"函数":["17.5","76.8"],"的参数默认为一个空对象":["17.5"],"下面是另一个解构赋值默认值的例子":["17.5"],"fetch":["17.5"],"url":["17.5","38.0","43.8","69.11"],"z":["17.6","17.12"],"报错":["17.7","101.12"],"因为这样相当于传了一个":["17.7"],"undefined":["17.7"],"不符合解构赋值":["17.7"],"函数默认值":["17.7"],"解构赋值":["17.7"],"解构赋值默认值":["17.7"],"看起来和展开语法完全相同都是使用":["17.9"],"的语法糖":["17.9"],"属性表示的是实参的长度":["17.10"],"即调用函数的时候传入的参数个数":["17.10"],"这样我们就对":["17.10"],"对象有了一定的了解":["17.10"],"image":["17.10"],"20220826180356855":["17.10"],"的开发模式下":["17.10"],"想要使用传递的参数":["17.10"],"则需要按位置把对应的参数取出来":["17.10"],"尽管":["17.10"],"是一个类数组且可遍历的变量":["17.10"],"但它终究不是数组":["17.10"],"它不支持数组方法":["17.10"],"因此我们不能调用":["17.10"],"foreeach":["17.10"],"等数组的方法":["17.10"],"需要使用一些特殊的方法转换成数组使用":["17.10"],"arguments":["17.11"],"获取实际参数":["17.11"],"剩余参数是一个":["17.11"],"与对象解构赋值结合":["17.12"],"y":["17.12","142.3","144.6","149.3","157.3","158.3","161.4"],"会引入剩余参数的概念":["17.13"],"可以看到剩余参数所带来的好处":["17.13"],"箭头函数通常与其他":["17.14"],"函数体在箭头后面的花括号内":["17.15"],"如果函数体只有一行代码并且返回一个表达式":["17.15"],"可以省略花括号和":["17.15"],"多个参数":["17.16"],"因为箭头函数会继承外层作用域的":["17.18"],"可能导致":["17.18"],"或":["17.19","81.8"],"后面加一个逗号":["17.19"],"就会报错":["17.19"],"如果像上面这样":["17.19"],"将参数写成多行":["17.19"],"err":["17.20"],"处理错误":["17.20"],"上面代码中":["17.20","32.2","139.2"],"改":["18.1","28.5"],"除了常用":["18.2"],"world":["18.3","18.6","32.2","69.8"],"trimleft":["18.5"],"trimmedstringvalue":["18.6"],"stringvalue":["18.7","18.12"],"na":["18.7"],"abcde":["18.11"],"true":["18.13","20.21","43.8","73.15","101.7","110.6","146.2","149.3"],"str":["18.14","69.8","120.16"],"match":["18.17"],"bat":["18.18"],"sat":["18.18","18.20"],"fat":["18.18","18.20"],"text":["18.19","59.2","118.12","144.6"],"cat":["18.19","70.3"],"也被称为模板字面量":["19.1"],"and":["19.2","19.3","19.5","120.16"],"i":["19.2","49.3","49.4","49.6","69.3","70.1","71.1","71.2","121.16"],"multiple":["19.3"],"lines":["19.3","110.8"],"maintains":["19.3"],"the":["19.3"],"除了属性简写":["20.1"],"sex2":["20.4"],"属性名表达式如果是一个对象":["20.4"],"默认情况下会自动将对象转为字符串":["20.4"],"这一点要特别小心":["20.4"],"合法标识符":["20.5"],"能用点语法优先使用点语法":["20.5"],"function":["20.6","30.11","43.9","46.2","48.5","53.7","54.7","58.2","58.7","58.9","73.4","75.0","78.22","89.31","97.4","120.3","120.6","120.7","146.2","149.3","152.7"],"上面三种":["20.6"],"的用法都会报错":["20.6"],"因为对于":["20.6"],"javascript":["20.6","33.1","63.2","63.3","64.2","64.3","68.2","69.4","77.0","78.13","83.1","85.1","86.8","152.1"],"引擎来说":["20.6"],"taste":["20.8"],"甜":["20.8"],"新对象拥有全部属性":["20.9"],"相同属性":["20.9"],"后者覆盖前者":["20.9"],"e":["20.13","22.2","22.3","58.9","120.12"],"use":["20.15","92.4","97.4","116.3"],"写字":["20.15"],"c":["20.17","21.11","22.3","22.4","31.0","73.6","100.4","120.12","120.14"],"jerry":["20.18"],"算法":["20.20"],"用来解决这个问题":["20.20"],"就是部署这个算法的新方法":["20.20"],"它用来比较两个值是否严格相等":["20.20"],"与严格比较运算符":["20.20"],"的行为基本一致":["20.20"],"直接合并到了第一个参数中":["20.21"],"返回的就是合并后的对象":["20.21"],"可以合并多个对象":["20.21"],"第一个参数使用一个空对象来实现合并返回一个新对象的目的":["20.21"],"array":["20.22","104.3"],"iterator":["20.22"],"数组的":["20.22"],"属性名无法转换为数值":["21.3"],"返回长度为":["21.3"],"key0":["21.4"],"value0":["21.4"],"abc":["21.6","101.12","102.7"],"参数1":["21.9","21.15"],"用来填充的值":["21.10"],"参数2":["21.10","21.17"],"被填充的起始索引":["21.10"],"参数3":["21.10"],"b":["21.11","22.4","22.5","29.9","33.5","120.12","120.14"],"d":["21.11","120.12"],"不使用":["21.12"],"包含的指定值":["21.15"],"原数组":["21.17"],"指定遍历函数中":["21.17"],"我们可以从数组或对象中提取数据":["22.0"],"并将其赋值给对应的变量":["22.0"],"rest":["22.5"],"country":["22.10"],"unknown":["22.10"],"mpeg":["23.0","23.2"],"您的浏览器不支持音频播放":["23.0"],"视频示例":["23.0"],"video":["23.0"],"定义了声音内容":["23.5"],"source":["23.5","23.6","23.11"],"定义一个视频":["23.6"],"用户控制界面":["23.7"],"poster":["23.7"],"视频封面":["23.7"],"autoplay":["23.7"],"播放":["23.8"],"runoob":["23.10","23.11"],"com":["23.10","23.11","52.5"],"try":["23.10","23.11","111.0"],"src":["23.11","25.4","31.4","85.7","144.5"],"https":["23.11","25.3","52.5","156.1","165.11"],"www":["23.11","118.12"],"demo":["23.11"],"markup":["24.0"],"文档类型声明":["24.1"],"告诉浏览器文档使用的":["24.1"],"以下是一些常用的":["24.2"],"h1":["24.2","78.2","78.14","78.15","90.9","122.5"],"到":["24.2"],"h6":["24.2"],"标题标签":["24.2"],"用于定义标题":["24.2","26.1"],"article":["24.3"],"等":["24.3","60.1"],"从而实现更丰富的用户体验":["24.4"],"在进阶阶段":["24.4"],"可以学习响应式设计":["24.4"],"web":["24.4"],"accessibility":["24.4"],"这是h2级别的标题":["25.1"],"h3":["25.1"],"这是一个段落文本":["25.2"],"列表项1":["25.5","25.6"],"这是一个div容器":["25.7"],"style":["25.8","89.28","92.4","146.1"],"表头1":["25.9"],"点击我":["25.12"],"username":["25.13","122.5","122.14","165.11"],"用户名":["25.13"],"首页":["25.14","120.17"],"mp4":["25.15"],"controls":["25.15","163.8"],"它们由尖括号包围":["26.0"],"为最高级别的标题":["26.1"],"为最低级别":["26.1"],"但用于内联元素的包裹":["26.2"],"strong":["26.2"],"标签中包裹这个":["26.3"],"custom":["26.5"],"example":["26.5","52.5"],"然后自动填充以前保存的密码":["27.1"],"这里推荐一种特别简单的方法解决这个问题":["27.1"],"属性":["27.1","32.12","59.2"],"如果有多个数据可以用数组保存起来":["28.0"],"var":["28.1","62.2","76.4","142.2"],"arr":["28.1","29.10","51.1"],"unshift":["28.6"],"创建一个数组":["28.7","28.8"],"count":["28.7","79.3","79.4","79.8","82.3","82.4","82.5","87.4"],"removed":["28.9","28.14","28.17"],"yellow":["28.10","143.0"],"black":["28.10"],"shift":["28.11","31.7"],"green":["28.12","28.13"],"item":["28.12","28.13","80.10","85.12"],"colors3":["28.15"],"includes":["28.18"],"nicholas":["28.21"],"sort":["28.22"],"blue":["28.26"],"some":["28.27"],"mapresult":["28.32"],"可以省略":["29.1"],"false":["29.1","32.10","33.11","49.0","84.2","84.3","84.4","84.5","146.2","149.3","165.10"],"哈哈哈":["29.1"],"为止":["29.2"],"如果所有的条件表达式都是":["29.2"],"则执行":["29.2"],"从键盘输入小明的期末成绩":["29.2"],"score":["29.2"],"prompt":["29.2"],"请输入小明的期末成绩":["29.2"],"检查score是否合法":["29.2"],"default":["29.3","81.10","87.3","91.13"],"执行的流程":["29.3"],"do":["29.4"],"执行流程":["29.5"],"语句在执行时":["29.5","29.6"],"执行顺序":["29.6"],"obj":["29.9","32.9","76.4"],"element":["29.10","58.2","78.2","78.6","78.8"],"循环适用于迭代对象的值":["29.11"],"迭代对象的类型不同":["29.11"],"循环适用于遍历对象":["29.11"],"包括普通对象":["29.11"],"内层循环":["29.12"],"虽然":["30.0"],"函数名":["30.2"],"函数体代码":["30.2"],"全部小写":["30.3"],"函数是做某件事情":["30.3"],"函数名一般是动词":["30.3"],"形参2":["30.6"],"在声明函数的小括号里面是":["30.6"],"形式上的参数":["30.6"],"实参1":["30.6"],"如果实参的个数多于形参的个数":["30.7"],"会取到形参的个数":["30.7"],"后面的代码不会被执行":["30.8"],"alert":["30.8"],"我是不会被执行的哦":["30.8"],"fn":["30.8"],"跳出本次循环":["30.9"],"无法直接使用":["30.10"],"xxxx":["30.12","43.9","100.4"],"的语法类似于":["31.0"],"语言":["31.0"],"代码":["31.2","50.2"],"head":["31.3","99.15"],"meta":["31.3","110.11"],"charset":["31.3"],"utf":["31.3","120.3"],"标签的":["31.4"],"ctrl":["31.6"],"大括号就定义了一个对象":["32.2"],"它被赋值给变量":["32.2"],"所以变量":["32.2"],"1p":["32.3"],"不报错":["32.3"],"h":["32.3"],"w":["32.3","120.1"],"p":["32.3","80.7","80.8","84.3","91.9","101.13"],"q":["32.3"],"上面对象的三个键名":["32.3"],"都不符合标识名的条件":["32.3"],"所以必须加上引号":["32.3"],"对象的每一个键名又称为":["32.3"],"如果取消某一个变量对于原对象的引用":["32.4"],"不会影响到另一个变量":["32.4"],"无法确定是对象还是代码块":["32.5"],"一律解释为代码块":["32.5"],"上面的语句是一个代码块":["32.5"],"而且只有解释为代码块":["32.5"],"的":["32.7","33.9","91.17","119.1"],"属性时":["32.7"],"如果使用点运算符":["32.7"],"就是字符串":["32.7"],"但是不使用引号":["32.7"],"那么":["32.7"],"就是一个变量":["32.7"],"指向字符串":["32.7"],"方括号运算符内部还可以使用表达式":["32.7"],"分别使用点运算符和方括号运算符":["32.8"],"对属性赋值":["32.8"],"允许属性的":["32.8"],"key1":["32.9"],"并没有":["32.10"],"但是":["32.10","32.12"],"命令照样返回":["32.10"],"因此":["32.10"],"不能根据":["32.10"],"命令的结果":["32.10"],"认定某个属性是存在的":["32.10"],"只有一种情况":["32.10"],"命令会返回":["32.10"],"那就是该属性存在":["32.10"],"且不得删除":["32.10"],"tostring":["32.11","32.12","107.1"],"运算符的一个问题是":["32.11"],"它不能识别哪些属性是对象自身的":["32.11"],"还遍历继承的属性":["32.12"],"举例来说":["32.12"],"对象都继承了":["32.12"],"循环不会遍历到这个属性":["32.12"],"属性是存在的":["32.12"],"如果":["32.13"],"区块内部有变量的赋值操作":["32.13"],"必须是当前对象已经存在的属性":["32.13"],"否则会创造一个当前作用域的全局变量":["32.13"],"幂运算":["33.2"],"模运算":["33.2"],"取余数":["33.2"],"等价于":["33.3"],"减等于":["33.3"],"新值":["33.5"],"的值不同":["33.6"],"是新值":["33.6"],"大于等于号":["33.7"],"如果找到":["33.9","33.10"],"则直接返回":["33.9","33.10"],"或运算是找":["33.10"],"条件运算符在执行时":["33.12"],"会先对条件表达式进行求值判断":["33.12"],"圆括号":["33.13"],"可以用来提高运算的优先级":["33.13"],"因为它的优先级是最高的":["33.13"],"number":["34.1","83.5","89.4","101.4","101.14","102.11"],"floatnum1":["34.2"],"floatnum2":["34.2"],"message":["34.3","88.1","89.6","89.18","89.19","89.20","91.10","101.10"],"jacob":["34.4"],"car":["34.5"],"的值":["34.6"],"othergenericsymbol":["34.7"],"我们这里主要讲述下面三种":["34.8"],"person":["34.9","45.3","73.4","74.1","106.5"],"num2":["34.11"],"return":["34.11","45.1","46.2","48.2","49.5","54.7","78.14","78.17","78.21","83.4","84.3","89.0","102.1","103.2","103.4","103.5","104.2","104.3","104.4"],"函数表达式":["34.11"],"regexp":["34.12"],"typeof":["34.14","46.2"],"对象":["34.16","162.0"],"对象会转换为":["34.16"],"所有表示空性的没有的错误的值都会转换为":["34.16"],"引用类型的对象存储于堆中":["34.17"],"在栈中存放的是指向堆内存的地址":["34.20"],"不同的类型数据导致赋值变量时的不同":["34.20"],"全局变量":["35.1"],"在严格模式下":["35.1"],"如果像这样给未声明的变量赋值":["35.1"],"则会导致抛出referenceerror":["35.1"],"定义多个变量":["35.1"],"syntaxerror":["35.2"],"标识符age":["35.2"],"已经声明过了":["35.2"],"块作用域没有重复声明则使用相同标识符则不会报错":["35.2"],"zhangsan":["35.3"],"是块级作用域":["35.5"],"所以检查不到之前是否声明过":["35.5"],"没有定义":["35.6"],"常见的异步循环问题":["35.6"],"settimeout":["35.6","50.2","87.5"],"typeerror":["35.7"],"给常量赋值":["35.7"],"也不允许重复声明":["35.7"],"都存在变量提升":["35.8"],"但":["35.8"],"对象代表当前窗口或标签页中加载的文档":["36.0"],"createelement":["36.1"],"tagname":["36.1","59.1"],"并将其添加到文档中":["36.2"],"newparagraph":["36.2"],"对象提供了对浏览器历史记录的操作":["37.0"],"导航到下一个页面":["37.1","37.2"],"如获取或修改元素":["38.0"],"创建新的元素或节点":["38.0"],"修改文档结构等":["38.0"],"location":["38.0"],"它提供了与当前窗口的":["38.0"],"相关的信息和操作":["38.0","39.0"],"它包含了":["38.0"],"的主机名部分":["39.1"],"pathname":["39.1"],"protocol":["39.2"],"对象提供了关于浏览器的信息":["40.0"],"appname":["40.1","40.2"],"浏览器的名称":["40.1"],"对象提供了关于用户屏幕的信息":["41.0"],"availwidth":["41.1"],"屏幕的可用宽度":["41.1"],"获取屏幕的可用宽度":["41.2"],"关闭当前窗口":["42.1","42.2"],"resizeto":["42.1"],"blank":["42.2"],"是一种创建交互式网页应用的网页开发技术":["43.1"],"可以在不重新加载整个网页的情况下":["43.1"],"对象的":["43.2"],"open":["43.2","43.8","120.7"],"方法与服务端建立连接":["43.2"],"构造函数用于初始化一个":["43.3"],"password":["43.4","52.5","110.10"],"参数说明":["43.4"],"表示当前的请求方式":["43.4"],"请求中要发送的数据体":["43.5"],"响应体下载中":["43.6"],"responsetext":["43.6"],"已经获取部分数据":["43.6"],"done":["43.6"],"请求完成":["43.6"],"整个请求过程已完毕":["43.6"],"只要":["43.6"],"属性值一变化":["43.6"],"就会触发一次":["43.6"],"readystatechange":["43.6"],"success":["43.9"],"中一种强大且常用的特性":["45.0"],"它允许内部函数访问其外部函数的作用域":["45.0"],"incrementcounter":["45.2"],"可以实现模块化的代码结构":["45.4"],"将相关的功能和状态封装在闭包中":["45.4"],"提供公共接口给外部":["45.4"],"从而实现代码的隔离和组织":["45.4"],"保存状态":["45.4"],"闭包可以用于保存函数的状态":["45.4"],"闭包中的变量是共享的":["45.5"],"如果多个闭包引用相同的外部变量":["45.5"],"那么它们会共享相同的变量实例":["45.5"],"方法":["46.1","90.5"],"shallowcopy":["46.1"],"会丢失或报错":["46.2"],"使用递归函数":["46.2"],"deepclone":["46.2"],"null":["46.2","63.2","64.2","101.8","108.0","142.3"],"take":["47.1"],"部分应用函数":["47.2"],"柯里化可以部分应用函数":["47.2"],"即预先设置函数的一部分参数":["47.2"],"然后返回一个接收剩余参数的新函数":["47.2"],"这使得函数的调用更加灵活和可定制":["47.2"],"需要注意的是":["47.2"],"下面是几种常见的实现方式":["47.3"],"else":["47.4","84.1","97.5","103.5"],"nextargs":["47.4","47.6"],"apply":["47.5"],"本质上是优化高频率执行代码的一种手段":["48.0"],"浏览器的":["48.0"],"resize":["48.0"],"scroll":["48.1","48.4"],"timer":["48.2","48.3"],"args":["48.2"],"可以将时间戳写法的特性与定时器写法的特性相结合":["48.3"],"实现一个更加精确的节流":["48.3"],"实现如下":["48.3"],"throttled":["48.3"],"debounce":["48.5"],"func":["48.5"],"cleartimeout":["48.6"],"不为null":["48.6"],"没有立马执行但是需要被执行的任务":["50.1"],"放在任务队列里面":["50.1"],"在主线程执行过程中同步任务会立即执行":["50.1"],"宏任务":["50.2"],"整个":["50.2"],"script":["50.2","90.5","123.0"],"setinterval":["50.2"],"没有":["50.3"],"执行以一个宏任务":["50.3"],"重复循环上述步骤形成一个事件循环":["50.3"],"可以看出各任务的执行先后关系":["50.3"],"同步任务":["50.3"],"微任务":["50.3"],"replace":["51.2"],"g":["51.2","69.3"],"split":["51.2","102.10"],"pre":["51.3","54.5","54.7","89.24"],"cur":["51.3","54.5"],"length":["51.4"],"rejected":["52.0"],"已失败":["52.0"],"当":["52.0","82.1"],"对象的状态从":["52.0"],"异步操作":["52.1","87.3"],"在操作成功时调用":["52.1"],"value":["52.1","52.2","68.2","73.13","78.5","78.18","78.21","89.28","102.10"],"处理第二个操作成功的结果":["52.3"],"yetanotherpromise":["52.3"],"catch":["52.3","52.5"],"处理任意一个":["52.4"],"实例失败的结果":["52.4"],"在上述示例中":["52.4"],"接收一个":["52.4"],"api":["52.5","89.1","90.6","98.1","110.11","117.2","122.11","138.4","138.5","138.7"],"login":["52.5","122.11"],"post":["52.5","98.3","118.4","122.11"],"response":["52.5"],"这个原型对象可以被其他对象继承":["53.1"],"从而实现属性和方法的共享":["53.1"],"create":["53.4","74.2","110.11","112.3","116.2"],"让我们一一了解这些方式":["53.5"],"eating":["53.6","53.8"],"dog":["53.6","70.1","117.6"],"的原型继承是动态的":["53.11"],"中的继承是通过原型链来实现的":["53.12"],"而":["53.13","60.1","101.9"],"但最好不要这样做":["53.15"],"可以节省内存":["53.16"],"它会覆盖父对象上的属性或方法":["53.17"],"来创建对象":["53.18"],"数组的一个高阶函数":["54.0"],"它用于对数组中的元素进行累积操作":["54.0"],"它接受四个参数":["54.1"],"前一个值":["54.1"],"prev":["54.1"],"设置初始值":["54.3"],"reduce":["54.5","54.6","54.7"],"newarr":["54.6"],"english":["54.8"],"方法不会修改原始数组":["54.9"],"它始终返回一个新的累积结果":["54.9"],"如果需要对原始数组进行修改":["54.9"],"请使用其他数组方法":["54.9"],"中有两种主要的作用域类型":["55.0"],"inner":["55.2","55.3","58.10"],"innervariable":["55.3"],"在现有":["56.1"],"结构基础上插入新的元素节点":["56.1"],"hr":["56.1"],"普通盒子":["56.1"],"点击按钮向":["56.1"],"点击按钮删除节点":["56.2"],"button":["56.2","82.7","89.7","89.10","89.13","90.8"],"要么是兄弟关系":["56.3"],"序号":["56.4"],"课程名":["56.4"],"难度":["56.4"],"操作":["56.4"],"ul":["56.5","78.17","81.11","81.13"],"文档解析为":["57.1"],"树":["57.1"],"并提供了一组":["57.1"],"标题":["57.2"],"等都属于元素节点":["57.3"],"是指":["57.3"],"标签中的属性":["57.3"],"html":["57.4","78.1","85.6","85.14","86.4","91.10","120.17","165.6"],"中常用的一项功能":["58.0"],"用户使用":["58.1"],"方法来添加事件监听器":["58.2"],"eventhandler":["58.2"],"eventname":["58.2"],"不同的是":["58.5"],"不会在子元素上触发":["58.5"],"mouseleave":["58.5"],"键盘按下了":["58.6"],"focus":["58.7"],"keydown":["58.8"],"当用户按下键盘上的任意键时触发":["58.8"],"可以使用该事件来监测实时的键盘输入":["58.8"],"并进行相应处理":["58.8"],"keyup":["58.8"],"click":["58.9","85.13","89.5","89.7","89.10","89.13","89.14"],"child":["58.10","91.9","91.11","102.11"],"表单事件":["58.11"],"submit":["58.11"],"input":["58.11"],"或者根据目标元素的特定属性或位置来执行相应操作":["58.12"],"通过事件委托":["58.12"],"你只需要在父元素上绑定一个事件监听器":["58.12"],"无论子元素的数量如何变化":["58.12"],"只要满足选择器条件的子元素触发了事件":["58.12"],"都可以被捕获和处理":["58.12"],"这样可以避免为每个子元素分别绑定事件监听器":["58.12"],"从而减少内存占用和提高性能":["58.12"],"将一个节点添加为另一个节点的子节点":["59.0"],"removechild":["59.0"],"insertbefore":["59.3"],"font":["60.1","136.2"],"如果元素已经具有指定的类名":["60.2"],"则移除它":["60.2"],"如果元素没有指定的类名":["60.2"],"getelementsbytagname":["61.0"],"根据标签名获取元素节点集合":["61.0"],"queryselector":["61.0"],"elements":["61.1"],"classname":["61.1"],"内容":["61.2"],"innerhtml":["61.2"],"然后浏览器会将":["62.0"],"gmt":["62.1"],"path":["62.1","81.15","86.7","86.10","152.7"],"cookies":["62.2"],"thu":["62.3"],"01":["62.3"],"jan":["62.3"],"stringify":["62.4"],"方法将其转换为字符串存储":["62.4"],"然后在需要时使用":["62.4"],"parse":["62.4"],"方法将其还原":["62.4"],"每个域名和浏览器对":["62.4"],"允许开发者在浏览器中存储和检索持久化的键值对数据":["63.0"],"是要存储的数据的键":["63.1","64.1"],"返回":["63.2","64.2","68.2"],"方法来删除指定键的数据":["63.4","64.4"],"getitem":["63.6","64.6"],"允许开发者在浏览器中存储和检索会话级别的键值对数据":["64.0"],"十二月":["65.1"],"getseconds":["65.1"],"获取秒数":["65.1"],"gettime":["65.1","65.4"],"获取日期的时间戳":["65.1"],"返回值为从":["65.1"],"年":["65.1"],"月":["65.1"],"有四种方式初始化日期":["65.2"],"setfullyear":["65.3"],"date":["65.4","147.3"],"now":["65.4"],"的内置对象为开发者提供了丰富的功能和方法":["66.0"],"能够简化开发过程并处理各种数据和操作":["66.0"],"数值对象":["66.1"],"boolean":["66.1"],"布尔对象":["66.1"],"其他对象都继承自它":["66.2"],"删除":["66.3"],"如拼接":["66.4"],"转换为字符串":["66.5"],"设置时间":["66.7"],"如求绝对值":["66.8"],"分割":["66.9"],"替换等复杂的文本处理任务":["66.9"],"除了上述常用的内置对象外":["66.9"],"可以对数字进行计算":["67.0"],"用于":["67.0"],"圆周率":["67.1"],"返回一个数的绝对值":["67.3"],"往上不包括":["67.4"],"四舍五入原则":["67.7"],"找出最小值":["67.8"],"找出最大值":["67.9"],"返回的是一个数的平方根":["67.11"],"positive":["68.1"],"infinity":["68.1","101.2"],"表示正无穷大":["68.1"],"当一个数超过了":["68.1"],"valueof":["68.2"],"对象的原始数值":["68.2"],"示例代码":["68.2"],"max":["68.2","110.8"],"7976931348623157e":["68.2"],"可以使用正则表达式执行以下操作":["69.1"],"匹配":["69.1"],"matching":["69.1"],"正则表达式可以使用字面量形式或构造函数形式来创建":["69.2"],"模式字符串和可选的修饰符字符串":["69.4"],"匹配前面的元素一次或多次":["69.5"],"不区分大小写匹配":["69.6"],"m":["69.6","102.2","165.11"],"匹配空格字符":["69.7"],"s":["69.7","69.10"],"匹配非空格字符":["69.7"],"返回匹配结果的数组或":["69.8"],"使用名称访问捕获的子串":["69.9"],"来匹配字符串的开始和结束":["69.10"],"允许点号":["69.10"],"匹配任意字符":["69.10"],"包括换行符":["69.10"],"数据提取":["69.11"],"使用正则表达式从文本中提取特定的信息":["69.11"],"am":["70.1","71.1","71.2"],"子类":["70.1","72.2"],"breed":["70.1"],"call":["70.1"],"meow":["70.3"],"之后":["71.0"],"引入了":["71.0"],"创建类的实例":["71.2"],"person1":["71.2","104.5"],"每个对象都有自己的状态和行为":["72.1"],"继承是一种对象之间共享属性和方法的机制":["72.2"],"通过继承":["72.2"],"一个类":["72.2"],"可以继承另一个类":["72.2"],"父类":["72.2"],"张三":["73.2"],"调用对象的属性":["73.3"],"我们采取":["73.3"],"对象名":["73.3"],"属性名":["73.3"],"我们理解为":["73.3"],"uname":["73.4"],"sex":["73.4"],"prop":["73.5"],"返回指定对象上一个自有属性对应的属性描述符":["73.5"],"getownpropertynames":["73.5"],"返回一个给定对象自身的所有属性的名称数组":["73.5"],"getownpropertysymbols":["73.5"],"obj3":["73.6"],"jane":["73.10"],"修改无效":["73.10"],"newobj":["73.14"],"删除属性无效":["73.18"],"用于实现继承和共享属性和方法":["74.0"],"直到找到为止":["74.1"],"示例":["74.1","163.9","163.12"],"friend":["74.2"],"的原型是":["74.2"],"继承":["74.3"],"通过原型链":["74.3"],"等方法来设置对象的原型":["74.4"],"而不是直接修改":["74.4"],"现在这里的代码会在严格模式下运行":["75.0"],"启用单个函数的严格模式":["75.0"],"如果你只想在特定函数内启用严格模式":["75.0"],"可以在函数体的开头添加":["75.0"],"会创建一个执行期上下文的内部对象":["76.1"],"以方法的形式调用":["76.3"],"this是调用方法的对象":["76.3"],"绑定到什么":["76.4"],"方法的另一个应用":["76.7"],"可以实现继承":["76.7"],"之所以能实现继承":["76.7"],"其实是利用了上面的作用":["76.7"],"先将":["76.8"],"然后执行":["76.8"],"需要传递":["76.10"],"数组":["76.10","107.0"],"所以它有一些巧妙应用":["76.10"],"稍后看接下来的应用举例就知道了":["76.10"],"语法":["76.10","76.14"],"求数组中多个元素的最大值":["76.12"],"arr1":["76.12"],"下面这一行代码的目的":["76.12"],"无需改变":["76.12"],"是最为合适的":["76.14"],"新函数":["76.14"],"fn1":["76.14"],"想要将this指向哪里":["76.14"],"函数实参1":["76.14"],"的设计理念是声明式编程":["77.1"],"开发者只需描述":["77.1"],"应该如何在不同状态下进行渲染":["77.1"],"而无需关心实现的细节":["77.1"],"每个组件具有自己的状态和行为":["77.3"],"这种组件化的开发模式使得代码更易于维护":["77.3"],"的结构":["77.4"],"当组件的状态发生变化时":["77.4","77.11"],"会通过比较新旧虚拟":["77.4"],"即数据只能从父组件流向子组件":["77.5"],"应用程序":["77.6"],"比如":["77.6","110.6"],"我们需要掌握以下几个核心概念":["77.7"],"函数组件是一种简单的声明式组件":["77.8"],"类组件具有更多的功能":["77.8"],"如生命周期方法和状态管理":["77.8"],"代码中编写类似":["77.9"],"的标记":["77.9","78.1"],"通过":["77.10","118.12"],"更新和卸载阶段":["77.12"],"在这些生命周期方法中":["77.12"],"通过事件处理函数":["77.13"],"我们可以执行特定的操作":["77.13"],"如更新组件的状态":["77.13"],"map":["77.15","80.10","88.2"],"方法遍历数组":["77.15"],"我们可以通过对表单元素的事件监听和状态更新":["77.16"],"来收集用户的输入并实时更新组件的状态":["77.16"],"中共享状态的技术":["77.17"],"中实现组件的复用逻辑":["77.18"],"而不必通过":["77.19"],"props":["77.19","82.3","82.5","82.6","87.2"],"用于在函数组件中添加状态":["77.20"],"副作用和其他":["77.20"],"来写一个":["77.21"],"这个包":["77.22"],"是专门用来创建":["77.22"],"组件":["77.22"],"组件生命周期等":["77.22"],"compatible":["77.23"],"ie":["77.23"],"edge":["77.23"],"viewport":["77.23"],"device":["77.23"],"from":["77.24","80.14","81.12","89.31","116.6","116.8","157.2"],"reactdom":["77.24","80.15"],"ui":["78.0","78.7","78.9","79.5","165.7"],"代码中编写类似于":["78.1"],"标签可以是":["78.4"],"使用":["78.5","84.6","91.14","126.1","160.0"],"key":["78.5","80.10"],"这样可以在":["78.7"],"中插入动态的内容":["78.7"],"拆分成独立的":["78.9"],"react":["78.10","79.6","79.9","79.10","80.4","81.6","81.7","81.12"],"元素":["78.10"],"jsx":["78.11","79.9","80.14","82.6"],"welcome":["78.11","84.3"],"可以在组件中获取这些属性并进行相应的渲染":["78.12"],"isloggedin":["78.14","78.15","84.2","84.4","84.5"],"我们经常需要渲染数据列表":["78.16"],"setstate":["78.18"],"target":["78.18"],"extends":["78.20","79.6","79.9","79.10","80.4","82.6","102.6","102.11","106.3","110.6"],"component":["78.20","79.6","79.9","79.10","80.4","81.15","82.5","82.6","86.6","92.4"],"componentdidmount":["78.20"],"provider":["78.21"],"dark":["78.21"],"toolbar":["78.21"],"生命周期方法等":["78.22"],"counter":["78.22"],"这些方法允许我们在特定时间点执行代码":["79.0"],"控制组件的行为":["79.0"],"操作等":["79.1","85.18"],"组件更新阶段":["79.1"],"绑定方法":["79.3"],"handleclick":["79.3"],"initialcount":["79.4"],"用于描述组件的":["79.5"],"结构":["79.5"],"发送网络请求":["79.6"],"mycomponent":["79.9","79.10","82.6","91.2"],"prevprops":["79.11"],"prevstate":["79.11"],"做一些副作用操作":["79.11"],"someprop":["79.11"],"组件即将被销毁时取消订阅":["79.13"],"off":["79.13"],"处理事件":["79.13"],"组件是构建用户界面的基本单位":["80.0"],"每个组件可以接收外部传入的数据":["80.0"],"组件都可以通过":["80.1"],"接收数据":["80.1"],"这些数据可以来自组件的父组件或者外部环境":["80.1"],"子组件":["80.3","91.16","94.1","94.4"],"static":["80.4"],"render":["80.5","83.2","83.3","83.4","84.2","84.3","84.4","84.5"],"布尔值":["80.6"],"active":["80.9"],"index":["80.10","105.7","110.12","120.17","165.2","165.6"],"是只读的":["80.13"],"组件本身无法修改":["80.13"],"然后在组件中引入":["80.14"],"并进行验证":["80.14"],"设置默认props":["80.15"],"使用组件并传递props":["80.15"],"document":["80.15","141.1","154.1"],"single":["81.1"],"page":["81.1","118.8"],"application":["81.1","118.12","118.15","157.1"],"会渲染对应的页面组件":["81.3"],"路径":["81.4"],"中传递一个特定的":["81.5"],"然后在页面组件中根据":["81.5"],"router":["81.6","81.7","86.8"],"npm":["81.8","105.10","117.1","125.4"],"yarn":["81.8","110.4"],"进行安装":["81.8"],"的依赖":["81.9"],"about":["81.10","120.17"],"nav":["81.11","89.17","89.19","165.9"],"to":["81.11","81.13","81.14","86.5","152.7"],"exact":["81.15"],"是组件用于存储和管理可变数据的一种机制":["82.0"],"是":["82.1","87.1"],"组件的一部分":["82.1"],"因此它受到组件的生命周期和渲染过程的影响":["82.1"],"handleincrement":["82.4"],"onincrement":["82.7"],"中":["83.0","84.0"],"我们通常使用":["83.1"],"numbers":["83.2","83.3"],"newnumbers":["83.5"],"节点":["83.6"],"抽象列表项":["83.6"],"如果列表项的渲染逻辑较复杂":["83.6"],"建议将其抽象成组件":["83.6"],"以提高代码的可读性和复用性":["83.6"],"注意性能":["83.6"],"当列表数据较大时":["83.6"],"要注意列表渲染的性能":["83.6"],"switch":["84.1"],"state":["84.2","84.4","84.5","87.4"],"fragment":["84.6"],"包裹多个元素":["84.6"],"当需要在条件渲染中返回多个元素时":["84.6"],"来包裹这些元素":["84.6"],"manager":["85.3"],"first":["85.4"],"模板中":["85.6"],"imagesrc":["85.7"],"isvisible":["85.9"],"in":["85.12","96.2"],"实例数据的双向绑定":["85.14"],"template":["85.16","91.12"],"可以进行":["85.18"],"beforeupdate":["85.18","89.27"],"数据更新前":["85.18"],"在数据更新之前调用":["85.18"],"发生在重新渲染之前":["85.18"],"可以在此处进行状态更新前的准备工作":["85.18"],"updated":["85.18"],"官方提供的路由管理器":["86.1"],"用于实现单页面应用":["86.1"],"spa":["86.1"],"到您的":["86.2"],"home":["86.3","110.10","118.8"],"components":["86.3"],"标签来渲染路由匹配到的组件":["86.4"],"parent":["86.7"],"routes":["86.9","86.10","110.10"],"如路由别名":["86.12"],"用于管理":["87.0"],"可以被多个组件共用":["87.1"],"避免重复逻辑代码":["87.1"],"mutations":["87.1"],"变更":["87.1"],"events":["87.2"],"状态定义":["87.3"],"状态修改":["87.3"],"获取状态":["87.3"],"将":["87.3"],"应用关联":["87.3"],"应用的入口文件":["87.3"],"increment":["87.4"],"incrementasync":["87.5"],"context":["87.5","139.3","142.4"],"commit":["87.5","99.10","110.2","165.11"],"获取未完成的todos":["87.6"],"unfinishedtodos":["87.6"],"todo":["87.6"],"获取特定id的todo":["87.6"],"gettodobyid":["87.6"],"find":["87.6"],"能够监听属性的读取和修改操作":["88.1"],"依赖追踪":["88.1"],"dependency":["88.1"],"tracking":["88.1"],"在模板中":["88.1"],"当你使用数据对象中的属性时":["88.1"],"的依赖追踪更加精细化":["88.2"],"使用了基于":["88.2"],"数据结构的依赖收集":["88.2"],"每个属性都有一个关联的":["88.2"],"存储依赖关系":["88.2"],"这种方式比":["88.2"],"使用的数组更高效":["88.2"],"响应式触发":["88.2"],"组件只需引入不用注册":["89.0"],"属性和方法也不用":["89.0"],"的统一入口":["89.1"],"简单来说":["89.1"],"就是所有的":["89.1"],"count1":["89.2"],"count2":["89.2"],"val":["89.2"],"notref":["89.4"],"changemsg":["89.5"],"change":["89.5","89.7"],"string":["89.6","101.9","101.10","102.7","102.9"],"修改":["89.7"],"vue":["89.8","89.12","89.31","90.7","90.8","92.2","92.7","110.7","164.5"],"或是一个":["89.9"],"数据是会变的":["89.12"],"但不会更新视图":["89.12"],"它可以接收一个函数或对象作为参数":["89.15"],"会返回一个只读的":["89.15"],"data":["89.16","118.14"],"参数一":["89.16"],"监听的数据":["89.16"],"bar":["89.17"],"message2":["89.18"],"并在其依赖变更时重新运行该函数":["89.21"],"也是一个函数":["89.22"],"函数或生命周期钩子被调用时":["89.23"],"组件更新前执行":["89.24"],"在我们使用":["89.25"],"vue3":["89.25","90.5"],"元素被更新之前调用":["89.27"],"dir":["89.28"],"directivebinding":["89.28"],"background":["89.28"],"无论值是否有更改都可用":["89.29"],"arg":["89.29"],"传递给指令的参数":["89.29"],"如果有的话":["89.29"],"例如在":["89.29"],"foo":["89.29","121.12"],"onmounted":["89.31"],"onunmounted":["89.31"],"ref":["89.31","147.4","149.4"],"usewindowresize":["89.31"],"子父组件":["90.1"],"甚至兄弟组件通信":["90.1"],"自定义事件":["90.1"],"可以实现子父组件通信":["90.1"],"全局事件总线":["90.1"],"方式":["90.2"],"事件":["90.3"],"另外一种自定义事件":["90.3"],"原生":["90.3","92.5"],"当然点击事件想注入多个参数可以按照下图操作":["90.4"],"但是切记注入的事件对象务必叫做":["90.4"],"标签内部":["90.5"],"使用了":["90.5"],"defineemits":["90.5"],"此方法是":["90.5"],"提供的方法":["90.5"],"不需要引入直接使用":["90.5"],"也就没有":["90.6"],"prototype":["90.6"],"以及组合式":["90.6"],"实现父子组件数据同步":["90.7"],"msg":["90.7"],"在父组件内部使用一个子组件":["90.8"],"ref与":["90.9"],"son":["90.9"],"可以实现隔辈组件传递参数":["90.10"],"组件组件提供数据":["90.10"],"可以用":["90.12"],"a替换":["90.12"],"填入组件a部分的结构":["90.12"],"tree":["91.5"],"shaking":["91.5"],"我是标题":["91.6"],"父组件使用插槽":["91.8"],"在父组件给这个插槽填充内容":["91.8"],"父组件":["91.9"],"v":["91.9","99.11","105.7"],"children":["91.12"],"组件有两个插槽":["91.13"],"它们都只接收一个直接子节点":["91.13"],"插槽里的节点会尽可能展示出来":["91.13"],"如果不能":["91.13"],"则展示":["91.13"],"fallback":["91.13"],"完全不受父级style样式影响":["91.14"],"通过to":["91.14"],"属性插入到指定元素位置":["91.14"],"view":["91.15","154.1","156.1"],"多个条件判断的子组件":["91.15"],"开发者可以自定义":["91.17"],"model修饰符":["91.17"],"bind":["91.17"],"sync":["91.17"],"修饰符和组件的":["91.17"],"with":["92.4"],"preview":["92.4"],"syntax":["92.4"],"直接回车":["92.4"],"这两种使用vite创建vue3项目的步骤一样":["92.6"],"运行命令":["92.6","116.1"],"输入项目名称":["92.6"],"正式版在今年9月份发布":["93.1"],"2年多开发":["93.1"],"更新渲染快133":["93.2"],"watch":["93.3"],"新的生命周期函数":["93.3"],"普通写法":["94.2"],"seutp":["94.3"],"语法糖模式发现":["94.3"],"http":["97.1"],"install":["97.2","125.7"],"params":["97.3"],"添加请求拦截器":["97.4"],"axios":["97.4"],"interceptors":["97.4","110.11"],"request":["97.4"],"status":["97.5"],"headers":["97.5"],"集中式管理":["98.1"],"apibaseurl":["98.2"],"service":["98.2"],"type":["98.3","149.4"],"如果没有设置请求头":["98.3"],"method":["98.3"],"您未登录":["98.4"],"或者登录已经超时":["98.4"],"请先登录":["98.4"],"您没有权限操作":["98.4"],"请求地址出错":["98.4"],"postaction":["98.5"],"xxx":["98.6"],"引入上面login方法所在的文件":["98.6"],"res":["98.6","104.6","122.11"],"配置局部账户":["99.1"],"只对当前":["99.1"],"日志信息":["99.6"],"提交当前目录及其子目录的变更":["99.6"],"cached":["99.7"],"比较指定文件暂存区和":["99.7"],"的差异":["99.7"],"n":["99.8","101.8","109.1"],"次的版本信息":["99.8"],"已有分支":["99.10"],"基于某个":["99.10"],"分支":["99.12"],"分支名":["99.13"],"把当前分":["99.14"],"基于":["99.14"],"暂存区指定文件恢复成和":["99.15"],"一样":["99.15"],"reset":["99.15"],"bash":["99.16","99.20"],"git":["99.16","100.1","100.2"],"别名":["99.18"],"地址":["99.18","99.19"],"origin":["99.21"],"master":["99.21"],"如果省略本地分支名":["99.21"],"copy内容到git":["100.5"],"infinitynumber":["101.2"],"无穷大":["101.2"],"warning":["101.3"],"list":["101.4"],"ok":["101.7"],"类型的变量":["101.9"],"void":["101.9","102.9","102.11"],"类型不可以分给其他类型":["101.9"],"这样写会报错":["101.9"],"void类型不可以分给其他类型":["101.9"],"函数中使用联合类型":["101.12"],"any":["101.14","103.4","153.2","154.1","156.1"],"strlength1":["101.14"],"一般方法":["102.1"],"say":["102.1","102.6","102.8"],"我叫":["102.1"],"protected":["102.3"],"修饰符":["102.4","102.5"],"man":["102.6"],"你的意思是改为访问静态成员":["102.8"],"吗":["102.8"],"asd":["102.9"],"names":["102.10"],"setage":["102.11"],"返回值":["103.0"],"为上面那个函数添加类型":["103.1"],"ts":["103.1","106.4","110.9"],"items":["103.4"],"而在使用的时候再指定具体类型的一种特性":["104.0"],"上不存在属性":["104.7"],"我们可以使用泛型约束来实现":["104.7"],"是一种由微软开发的自由和开源的编程语言":["105.1"],"智能":["105.2"],"的提示":["105.2"],"相对于js而言":["105.2"],"先编译再执行":["105.3"],"在写的时候就会发现错误了":["105.3"],"编译阶段就能检查类型发现大部分错误":["105.5"],"项目里使用":["105.6"],"编译":["105.7"],"tsc":["105.9"],"来定义对象的类型":["106.0"],"接口是对象的状态":["106.0"],"但是对象里面缺少age属性":["106.1"],"使用接口约束的时候不能多一个属性也不能少一个属性":["106.1"],"interface":["106.4","106.5"],"propname":["106.6"],"大":["107.1"],"代表所有拥有":["107.1"],"hasownproperty":["107.1"],"方法的类型":["107.1"],"所以所有原始类型":["107.1"],"非原始类型都可以赋给":["107.1"],"tslib":["108.0"],"导入辅助工具函数":["108.0"],"isolatedmodules":["108.0"],"将每个文件做为单独的模块":["108.0"],"transpilemodule":["108.0"],"类似":["108.0"],"严格的类型检查选项":["108.0"],"启用所有严格类型检查选项":["108.0"],"noimplicitany":["108.0"],"在表达式和声明上有隐含的":["108.0"],"any类型时报错":["108.0"],"strictnullchecks":["108.0"],"启用严格的":["108.0"],"检查":["108.0"],"noimplicitthis":["108.0"],"我是一个字符串":["109.2"],"定义联合类型别名":["109.2"],"husky":["110.2"],"来做":["110.2"],"拦截":["110.2"],"node":["110.3","117.5","121.11"],"由":["110.4"],"衍生而来":["110.4"],"解决了":["110.4"],"env":["110.6","110.11"],"browser":["110.6"],"浏览器端":["110.6"],"es2021":["110.6"],"规则继承":["110.6"],"全部规则默认是关闭的":["110.6"],"这个配置项开启推荐规则":["110.6"],"推荐规则参照文档":["110.6"],"函数不能重名":["110.6"],"js的eslint插件":["110.7"],"查找vue语法错误":["110.7"],"发现错误指令":["110.7"],"不允许多个空行":["110.8"],"process":["110.8"],"production":["110.8"],"debugger":["110.8"],"unexpected":["110.8"],"multiline":["110.8"],"禁止空余的多行":["110.8"],"useless":["110.8"],"escape":["110.8"],"禁止不必要的转义字符":["110.8"],"在入口文件引入":["110.9"],"但是你会发现在":["110.9"],"desc":["110.10"],"平台管理员":["110.10"],"roles":["110.10"],"buttons":["110.10"],"cuser":["110.10"],"detail":["110.10"],"token":["110.10","122.14"],"baseurl":["110.11"],"vite":["110.11"],"app":["110.11","157.4","159.2"],"base":["110.11"],"timeout":["110.11"],"请求拦截器":["110.11"],"admin":["110.12","165.7"],"acl":["110.12"],"userinfo":["110.12","122.14"],"info":["110.12"],"htm":["111.0"],"files":["111.0","120.3","120.6"],"uri":["111.0"],"cmd":["111.1"],"nginx":["111.1"],"t":["111.1"],"数据操作命令以及授权和权限管理命令":["112.0"],"column2":["112.1","116.5","116.7"],"创建一个新的表":["112.1"],"alter":["112.1"],"where":["112.2"],"condition":["112.2"],"从表中检索数据":["112.2"],"从用户撤销特定数据库或表的权限":["112.3"],"user":["112.3","122.11"],"字段":["113.0"],"可变长度的字符串":["113.3"],"存储一个或多个预定义的值":["113.5"],"除了上述常见的数据类型":["113.5"],"每个记录包含多个字段":["114.0"],"通过使用查询语言":["114.0"],"如sql":["114.0"],"可扩展性":["114.1"],"mysql具有良好的可扩展性":["114.1"],"可以通过分布式架构和主从复制来处理大规模数据和高并发访问":["114.1"],"高性能":["114.1"],"mysql通过优化查询执行计划":["114.1"],"创建数据库":["116.0"],"创建表":["116.0"],"打开命令行终端":["116.1"],"u":["116.1"],"sql":["116.2"],"database":["116.3"],"column1":["116.4","116.7"],"values":["116.5"],"value1":["116.5","116.7"],"table":["116.6","116.8"],"解析标记并提供用于遍历":["117.2"],"操作结果数据结构的":["117.2"],"douban":["117.3"],"创建一个空数组":["117.4"],"把数据以对象的形式存放在数组中":["117.4"],"allfiles":["117.4"],"获取html中的数据":["117.4"],"load":["117.4","152.7","160.1","160.2"],"p513344864":["117.6"],"楚门的世界":["117.6"],"truman":["117.6"],"show":["117.6"],"p479682972":["117.6"],"忠犬八公的故事":["117.6"],"hachi":["117.6"],"tale":["117.6"],"p2587099240":["117.6"],"海上钢琴师":["117.6"],"leggenda":["117.6"],"del":["117.6"],"快速":["118.0"],"男":["118.2"],"请求成功":["118.2"],"bruce":["118.3","121.12"],"可直接访问":["118.3"],"参数把流转关系交给下一个中间件或路由":["118.5"],"中间件注意事项":["118.5"],"调用了第1个全局中间件":["118.6"],"定义第二个全局中间件":["118.6"],"get":["118.7"],"send":["118.7","118.8"],"服务器内部发生了错误":["118.8"],"定义错误级别的中间件":["118.8"],"捕获整个项目的异常错误":["118.8"],"从而防止程序的崩溃":["118.8"],"导入中间件":["118.10"],"相关的":["118.11"],"响应头":["118.11"],"就可解除浏览器端的跨域访问限制":["118.11"],"值仅限于":["118.12"],"plain":["118.12"],"multipart":["118.12"],"form":["118.12"],"urlencoded":["118.12"],"三者之一":["118.12"],"如果客户端向服务器发送了额外的请求头信息":["118.12"],"则需要在服务器端":["118.12"],"dpr":["118.14"],"downlink":["118.14"],"save":["118.14"],"json":["118.15","122.12"],"格式的数据":["118.15"],"chrome":["119.1"],"v8":["119.1"],"引擎":["119.1"],"则完全没有采用这种模型":["119.2"],"它本质上就是一个单线程":["119.2"],"但一个线程如何服务于大量的请求":["119.2"],"如何处理高并发的呢":["119.2"],"程序运行不稳定":["119.3"],"读写文件":["120.1"],"rs":["120.1"],"同步模式下打开文件用于读取":["120.1"],"同步模式下打开文件用于读写":["120.1"],"txt":["120.3","120.6"],"可读流关闭了":["120.4"],"数据读取完毕":["120.4"],"关闭可写流":["120.4"],"nodejs":["120.6","121.21"],"流打开了":["120.7"],"00000000":["120.8"],"每一个元素占用一个字节内存":["120.8"],"是对底层内存的直接操作":["120.8"],"动态拼接出被操作文件的完整路径":["120.9"],"解决方案":["120.9"],"mkdirsync":["120.10"],"删除目录":["120.10"],"rmdir":["120.10"],"rmdirsync":["120.10"],"重命名文件和目录":["120.10"],"rename":["120.10"],"oldpath":["120.10"],"newpath":["120.10"],"require":["120.13","121.12","121.13"],"定义文件的存放路径":["120.13"],"fpath":["120.13"],"your":["120.16"],"关于页面":["120.17"],"模块化可提高代码的复用性和可维护性":["121.2"],"实现按需加载":["121.2"],"更好的分离":["121.3"],"自定义模块":["121.5"],"方法等成员":["121.6"],"供外界使用":["121.7"],"导入自定义模块时":["121.7","121.21"],"得到的就是":["121.7"],"变量是一个对象":["121.8"],"不会导致模块的代码被执行多次":["121.9"],"会按顺序尝试加载文件":["121.11"],"users":["121.12"],"project":["121.12"],"文件里调用了":["121.12"],"加载的入口":["121.13"],"如果没有":["121.13"],"中的包都是免费且开源的":["121.15"],"由于":["121.15"],"包的名称":["121.18"],"version":["121.18"],"不论是内置模块":["121.19"],"如果省略了文件的扩展名":["121.21"],"里调用":["121.22"],"tools":["121.22"],"如果目录里没有":["121.23"],"文件":["121.23","124.4"],"或者":["121.23"],"createpool":["122.2"],"host":["122.2"],"set":["122.3","164.1"],"更新数据":["122.3"],"update":["122.3","123.0","124.3"],"用户体验好":["122.6"],"页面局部刷新":["122.6"],"无需重新请求页面":["122.6"],"减轻服务器的渲染压力":["122.6"],"可考虑服务端渲染":["122.7"],"后台管理项目":["122.7"],"islogin":["122.11"],"保存在客户端浏览器中":["122.13"],"服务器通过还原":["122.13"],"字符串的形式来认证用户的身份":["122.13"],"组成部分":["122.13"],"payload":["122.13"],"signature":["122.13"],"参数":["122.14"],"用户信息对象":["122.14"],"加密密钥":["122.14"],"配置对象":["122.14"],"token有效期":["122.14"],"尽量不保存敏感信息":["122.14"],"因此只有用户名":["122.14"],"没有密码":["122.14"],"expiresin":["122.14"],"10h":["122.14"],"字符串还原为":["122.14"],"客户端访问有权限的接口时":["122.14"],"需通过请求头的":["122.14"],"remove":["123.0"],"更新依赖项":["123.0"],"upgrade":["123.0"],"运行脚本命令":["123.0"],"run":["123.0"],"清理缓存":["123.0"],"的默认包管理器":["124.1"],"也是世界上最大的开源软件注册表":["124.1"],"时":["124.2"],"卸载指定的包":["124.3"],"更新指定的包":["124.3"],"并生成":["124.4"],"部分":["124.5"],"你可以列出项目所需的包及其版本号":["124.5"],"定义脚本和使用":["124.6"],"publish":["124.6"],"请访问":["125.1"],"并执行以下命令来初始化项目":["125.2"],"编写你的包的代码":["125.3"],"init":["125.4"],"密码和邮箱":["125.5"],"执行以下命令发布你的包":["125.5"],"bug":["125.6"],"通过包管理器安装":["126.1"],"添加依赖项":["126.2"],"若要添加新的依赖项":["126.2"],"可以运行以下命令":["126.2"],"svg":["128.0","130.0","131.0","134.0","136.0","137.0"],"曾家岩":["128.1"],"换乘":["128.1"],"轨道交通2号线":["128.1"],"较场口方向":["128.1"],"3站到":["128.1"],"胖子妈盐水鸭":["128.2"],"好又来酸辣粉":["128.2"],"降龙爪爪":["128.2"],"烟雨山冰汤圆等":["128.2"],"网红2号线穿楼地点":["128.3"],"出站后下楼穿过马路就是观景台":["128.3"],"重庆人民可谓是对游客殚精竭虑":["128.3"],"这个观景台正是拍摄":["128.3"],"参观预约":["128.4"],"巴渝文化表演88元":["128.4"],"118元":["128.4"],"李子坝梁山鸡":["128.5"],"重庆小面":["128.5"],"一只酸奶牛":["128.5"],"重庆特色奶茶店":["128.5"],"drawing":["129.0","132.0","133.0","135.0"],"张府园":["130.1"],"高铁":["130.1","134.1"],"bullettrain":["130.1","134.1"],"游玩之后可以直接步行到":["130.2"],"乘坐":["130.2","130.5","135.3","137.5"],"步行到":["130.3"],"地铁口":["130.3"],"油坊桥方向":["130.3"],"站到达":["130.3"],"珠江路":["130.4"],"4km":["130.4"],"到达终点":["130.4"],"可以买周边":["130.4"],"三清山南部":["131.1"],"住宿可以定在三清山南部":["131.1"],"右行去巨蟒出山":["131.2"],"玉京峰":["131.3"],"三清宫":["131.3"],"站到友邦广场下车然后步行":["131.4"],"米到奥林至尊东然后乘坐":["131.4"],"槠溪老街方向":["131.4"],"步行到新火车站":["131.5"],"在上饶站乘坐":["131.5"],"老太婆辣藕":["132.1"],"南昌拌粉":["132.1"],"串串":["132.1"],"麻糍":["132.1"],"糯叽叽的热罩子":["132.1"],"羊子街":["132.2"],"小吴水煮":["132.2"],"芋泥麻糍":["132.2"],"有相同":["132.2"],"麻辣肠子":["132.2"],"麻辣莲藕":["132.2"],"鸡蛋汉堡":["132.2"],"小程序":["132.3"],"byg人脸识别":["132.3"],"进行预约":["132.3"],"景点位置":["132.3"],"地铁1号线八一馆站":["132.3"],"人":["132.4","136.2"],"滕王阁":["132.4"],"南昌市东湖区仿古街58号":["132.4"],"卢塞恩小镇":["132.4"],"八一广场":["132.4"],"八大山人纪念馆":["132.4"],"周一闭馆":["132.4"],"法定节假日除外":["132.4"],"龙翔站":["134.1"],"front":["134.1"],"花港观鱼":["134.2"],"雷峰塔":["134.2"],"三潭印月":["134.2"],"音乐喷泉":["134.2"],"flags":["134.3"],"步行81米到龙翔桥乘坐":["134.3"],"4路b线":["134.3"],"以及古代表演":["134.4"],"西湖湿地":["134.4"],"属于湿地公园":["134.4"],"洪山广场":["135.1"],"1km":["135.2"],"到达":["135.2","137.2"],"博物馆":["135.2"],"步行":["135.2","135.3","137.2"],"口出":["135.3"],"米到":["135.3","137.2"],"武昌火车站综合体":["135.3"],"广埠屯":["135.4"],"k":["135.4"],"口":["135.4","136.1"],"站内换乘":["135.5"],"武汉火车站方向":["135.5"],"五一广场":["136.1"],"6c":["136.1"],"euro":["136.2","136.4"],"免费":["136.2","136.4"],"3eaf7c":["136.2"],"沙滩公园门票":["136.2"],"元":["136.2"],"晚":["136.3"],"缆车时间":["136.3"],"下午":["136.3"],"点前":["136.3"],"需去东门":["136.3"],"且下雨天不开放":["136.3"],"兵器等":["136.4"],"想要了解一座城市最好的方法就是去他的博物馆看看":["136.4"],"门票":["136.4"],"玉楼东":["136.5"],"西湖楼":["136.5"],"湘鄂情":["136.5"],"湘春酒家":["136.5"],"伍厚德堂":["136.5"],"炊烟小炒黄牛肉":["136.5"],"娟娟餐馆等":["136.5"],"口味虾":["136.5"],"砂子塘夜宵一条街作为南边出现较早的夜宵一条街":["136.6"],"湘菜":["136.6"],"烧烤种类齐全":["136.6"],"砂子堂夜宵街每天下午":["136.6"],"点开始":["136.6"],"到凌晨结束":["136.6"],"无论什么季节":["136.6"],"这条街都人气爆棚":["136.6"],"是长沙吃夜宵的好地方":["136.6"],"可以感受到长沙最市井热烈的夜宵风情":["136.6"],"线":["137.1"],"k1":["137.1"],"路":["137.1"],"第一码头站方向":["137.1"],"下车之后步行":["137.2"],"300m":["137.2"],"小吃街":["137.2"],"800m":["137.2"],"乘坐轮船":["137.3"],"鼓浪屿三丘田码头":["137.3"],"西":["137.4"],"群贤":["137.4"],"门":["137.4"],"一直走到":["137.4"],"梧村车站":["137.5"],"脚本在矩形区域中绘制图像":["138.1"],"动画和其他复杂的视觉效果":["138.1"],"轴向下延伸":["138.3"],"可以通过":["138.3"],"提供了两种基本的绘图上下文":["138.4"],"进行控制":["138.5"],"在一个网页上创造一个交互式地图":["138.6"],"让用户点击地图上的数据点来查看更多的信息或与其他应用程序进行交互":["138.6"],"您可以控制图形元素的位移":["138.7"],"位置":["138.7"],"颜色和其他属性":["138.7"],"不同的浏览器可能解释":["138.8"],"图像缩放":["139.0"],"fillrect":["139.1","139.3"],"原来的矩形是":["139.2"],"缩放后展示出来是":["139.2"],"垂直缩放":["139.4"],"水平位移":["139.4"],"单位像素":["139.4"],"垂直位移":["139.4"],"之上":["140.0"],"那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面":["140.0"],"在源图像中显示目标图像":["140.1"],"只有源图像内的目标图像部分会被显示":["140.1"],"源图像是透明的":["140.1"],"在源图像外显示目标图像":["140.1"],"getelementbyid":["141.1"],"判断是否有getcontext":["141.1"],"lineto":["141.2"],"添加一个新点":["141.2"],"绘制一条从当前位置到指定新点":["141.2"],"交点为菱形":["142.1"],"miterlimit":["142.1"],"指定交点菱形的长度":["142.1"],"该属性只在":["142.1"],"属性的值等于":["142.1"],"时有效":["142.1"],"表示":["142.2"],"颜色":["142.2","156.3"],"gradient":["142.2"],"pink":["142.2"],"skyblue":["142.2"],"垂直重复":["142.3"],"no":["142.3"],"不重复":["142.3"],"如果第二个参数是空字符串或":["142.3"],"则等同于":["142.3"],"shadowoffsety":["142.4"],"阴影的垂直位移":["142.4"],"下面是一个例子":["142.4"],"填充":["144.2"],"beginpath":["144.2","149.3"],"rect":["144.2"],"左眼":["144.3"],"stroke":["144.4"],"closepath":["144.4"],"两条线段使用fill":["144.4"],"img":["144.5"],"tx":["144.5"],"png":["144.5","152.7","165.7","165.9"],"文本":["144.6"],"绘制文字最大宽度":["144.6"],"终点x":["145.2"],"终点y":["145.2"],"isdraw":["146.2","149.3"],"onmousedown":["146.2","149.3"],"onmouseup":["146.2"],"globalcompositeoperation":["146.2"],"获取当前的时间":["147.3"],"time":["147.3"],"hour":["147.3"],"gethours":["147.3"],"min":["147.3"],"getminutes":["147.3"],"sec":["147.3"],"round":["149.3"],"设置允许绘制的变量":["149.3"],"event":["149.3"],"pagex":["149.3"],"offsetleft":["149.3"],"pagey":["149.3"],"offsettop":["149.3"],"moveto":["149.3","158.5"],"onmouseleave":["149.3"],"inputcolor":["149.4"],"endfill":["151.2"],"轻量级的":["152.1"],"技术进行硬件加速渲染":["152.3"],"能够处理大量的图形元素并实现流畅的动画效果":["152.3"],"提供了简洁而直观的":["152.4"],"sprite":["152.5"],"可以在现代浏览器上运行":["152.6"],"onassetsloaded":["152.7"],"当纹理加载完成后执行的回调函数":["152.7"],"创建一个矩形":["153.2"],"rectangle":["153.2"],"设置边框样式":["153.2"],"linestyle":["153.2"],"appendchild":["154.1"],"显示helloworld文字":["154.1"],"创建一个圆形":["154.2"],"circle":["154.2"],"创建一个纹理":["156.1"],"texture":["156.1"],"img14":["156.1"],"filters":["156.2"],"监听鼠标是否进入精灵":["156.2"],"轮廓宽度":["156.3"],"创建发光滤镜":["156.3"],"glowfilter":["156.3"],"window":["157.1"],"innerwidth":["157.1"],"drawellipse":["158.1"],"drawpolygon":["158.2"],"宽":["158.3"],"高":["158.3"],"圆角半径":["158.3"],"结束角度":["158.4"],"顺":["158.4"],"逆时针":["158.4"],"透明度":["158.5"],"jfs":["160.1"],"t1":["160.1"],"5c1b0581e1fa6c1c3":["160.1"],"58519cee2a0039e0":["160.1"],"jpg":["160.1"],"异步加载资源":["160.1","160.2"],"texturespromise":["160.1","160.2"],"加载完成后创建精灵":["160.1"],"loadbundle":["160.2"],"progress":["160.2"],"加载完成":["160.2"],"图像在放大或改变尺寸的情况下其图形质量不会有所损失":["161.1"],"因此能够优雅而简洁地渲染不同大小的图形":["161.1"],"并和":["161.1"],"x1":["161.3"],"x2":["161.3"],"r":["161.5"],"cy":["161.6"],"l":["161.9"],"渲染器是最常用的":["162.0"],"因为它利用了":["162.0"],"gpu":["162.0"],"加速":["162.0"],"提供更高的性能和更好的渲染效果":["162.0"],"scene":["162.0"],"场景是":["162.0"],"中所有":["162.0"],"对象的容器":["162.0"],"您可以在场景中添加":["162.0"],"移动和管理各种":["162.0"],"如几何体":["162.0"],"threejs":["163.3"],"three":["163.6"],"pi":["164.3"],"围绕x轴旋转45度":["164.3"],"blog":["165.0"],"readme":["165.1"],"新建文件夹":["165.2"],"在文件夹":["165.2"],"内新建":["165.2"],"cd":["165.3"],"dev":["165.4"],"打包":["165.4"],"作为我们的主页":["165.6"],"在新建一个":["165.6"],"logo":["165.7"],"alt":["165.7"],"yyg":["165.7"],"actions":["165.7"],"theme":["165.7"],"brand":["165.7"],"左上角的logo":["165.9"],"它的路径是从public文件夹开始的":["165.9"],"所以这里引用的是public":["165.9"],"jpg这张图":["165.9"],"是不是可以动态展开":["165.10"],"collapsed":["165.10"],"发布到":["165.11"]},{"0":["4.1","7.1","20.14","28.14","29.2","32.7","73.15","77.23","78.22","80.4","82.3","82.6","92.3","102.10","122.11","139.1","139.4","158.4","160.1"],"1":["16.3","16.4","16.10","17.7","17.13","20.4","21.1","21.17","28.2","28.9","28.14","32.9","35.6","45.2","56.4","65.4","75.0","77.23","82.4","82.5","82.6","91.15","101.9","102.10","103.4","103.5","104.2","104.3","131.1","139.2","139.4","164.1"],"2":["4.5","4.14","6.20","9.1","9.2","16.3","16.4","16.5","16.7","16.10","17.7","20.4","21.1","28.2","30.6","34.14","35.6","45.2","47.1","48.7","73.3","75.0","89.24","90.4","92.6","99.16","101.4","103.4","103.5","104.2","104.3","117.6","131.4","135.1","139.4","141.1","164.1"],"3":["4.14","16.5","16.7","16.13","17.7","21.5","21.8","21.15","29.9","29.12","30.7","30.8","32.7","33.7","35.6","54.4","76.3","88.1","89.1","90.4","94.1","98.1","99.18","101.4","103.4","117.6","122.2","130.3","130.4","131.4","135.3","136.2","136.4","137.3","162.0","164.2"],"4":["16.13","17.18","21.8","28.20","33.7","35.6","38.0","54.9","68.1","87.1","88.2","101.6","103.4","113.1","122.11","136.2","136.5","161.1","162.0"],"5":["6.25","12.6","28.19","28.20","29.8","33.6","45.4","51.0","67.7","83.6","99.7","101.6","122.14","130.4"],"6":["17.3","51.0","84.6","99.8","101.2","131.5","132.2"],"7":["13.4","32.7","122.3","130.5","132.2"],"8":["13.4","31.3","132.2","132.3"],"9":["18.8","110.7","136.2"],"10":["132.1","132.2","142.2","142.4"],"11":["65.3","132.1","132.2"],"12":["132.1","132.2"],"13":["132.1"],"14":["132.1"],"15":["156.3"],"16":["110.3"],"17":["33.2","132.4"],"18":["35.4","73.2","102.6"],"20":["102.8","137.1"],"25":["62.1","71.2"],"27":["131.1"],"29":["35.1"],"30":["71.1","71.2","132.3","135.2","139.1","139.2","147.3","161.8","161.9"],"32":["158.4"],"34":["130.4"],"35":["156.1"],"40":["161.9"],"50":["8.5","145.2","161.5"],"54":["158.3"],"58":["164.5"],"64":["158.1"],"66":["161.9"],"70":["131.4"],"77":["164.5"],"80":["118.8"],"87":["137.2"],"90":["67.12","161.7"],"92":["137.2"],"100":["29.2","93.1","130.3","139.1","139.3","142.2","153.2","154.1","158.5","161.7"],"120":["161.9"],"123":["32.10","102.9","109.2"],"150":["161.4"],"160":["158.3"],"164":["158.1"],"200":["143.0","145.2","153.2","161.3","161.7","161.8"],"294":["113.1"],"295":["113.1"],"300":["153.2"],"324":["68.2"],"350":["144.3"],"400":["23.0"],"408":["98.4"],"409":["98.4"],"450":["145.1","145.2"],"500":["135.3","145.2"],"600":["147.4","148.2"],"967":["113.1"],"1970":["62.3","113.4"],"2015":["15.1"],"2016":["13.4"],"2017":["13.4"],"2224":["156.1"],"3000":["118.3"],"12087":["156.1"],"23739":["156.1"],"65535":["113.3"],"只能选择全部标签":["4.2"],"css":["4.2","4.6","6.2","6.6","6.8","6.10","6.11","6.12","6.13","6.14","6.16","6.30","8.2","56.5"],"pink":["4.3"],"md":["4.4","165.2"],"有标签名":["4.5"],"标签名必须写在前面":["4.5"],"id":["4.5","25.11","77.23","81.15","122.3"],"选择器":["4.5"],"理论上可以作为交集的条件":["4.5"],"但实际应用中几乎不用":["4.5"],"n":["4.6"],"color":["4.7","4.8","25.8"],"p1":["4.9"],"p2":["4.9"],"active":["4.11","149.4"],"链接被按下时的样式":["4.11"],"先找父亲的第":["4.12"],"个孩子":["4.12"],"再看是否为元素":["4.12"],"是成功":["4.12"],"否失败":["4.12"],"是直接找第":["4.12"],"属性且属性值以":["4.13"],"开头的":["4.13"],"style":["4.14","110.9","127.2","161.5"],"父级元素添加overflow":["4.14"],"将其属性值设置为":["4.14"],"hidden":["4.14","9.3"],"auto":["4.14","6.16"],"或":["4.14","52.0","79.1","83.6","165.3"],"scroll":["4.14","48.0"],"父级添加after伪元素":["4.14"],"它通过在父元素上设置":["5.0"],"display":["5.0","5.5","5.8","6.3","6.6","6.8","6.9"],"container":["5.1","5.5","5.8","6.2","6.6","6.8","6.9","6.10","6.11","6.22","160.0","160.1","160.2"],"一旦容器成为":["5.1"],"column":["5.2","6.4","6.12","112.1"],"垂直排列":["5.2"],"垂直逆向排列":["5.2"],"项目在交叉轴上的对齐方式":["5.3"],"项目靠交叉轴起始位置对齐":["5.3"],"不换行":["5.4","9.1"],"默认值":["5.4"],"换行":["5.4"],"item":["5.6","5.7","28.31","28.32","49.5","117.4"],"scss":["5.8"],"多行项目平均分布在交叉轴上":["5.9"],"两端不留空白":["5.9"],"around":["5.9"],"两端留有空白":["5.9"],"导航栏布局":["5.10"],"direction":["5.10"],"row":["5.10","6.4"],"分割为网格单元格":["6.1"],"cells":["6.1"],"开发者可以更轻松地控制页面元素在网格中的位置和大小":["6.1"],"来实现":["6.2"],"和":["6.4","8.6","26.1","69.6","76.8","122.13","138.4","161.1"],"属性来指定一个网格项的位置和跨度":["6.4"],"用于更精确地控制网页布局":["6.5"],"可以使用空格分隔值来创建多列或多行":["6.6"],"sidebar":["6.7"],"content":["6.7","59.2","91.6","120.3","120.16"],"footer":["6.7"],"类似":["6.10"],"但允许分别指定列和行的间隔":["6.10"],"fr":["6.11"],"单位":["6.11"],"也可以设置为":["6.12"],"控制项目在行轴上的对齐方式":["6.13","6.15"],"grid":["6.13","6.14"],"控制网格项目在行轴上的对齐方式":["6.14"],"控制项目在列轴上的对齐方式":["6.15"],"网格线名称或":["6.16"],"值来指定位置":["6.16"],"我们可以创建灵活且复杂的网页布局":["6.17"],"第二":["6.18"],"列宽度自适应":["6.18"],"第三列占据剩余空间":["6.18"],"rows":["6.18","6.19"],"repeat":["6.20","18.5"],"大于768px时":["6.20"],"使用两列布局":["6.20"],"布局在实际应用中非常强大":["6.21"],"body":["6.22","57.2","77.23","91.14"],"div":["6.22","77.23","78.21","80.3","80.5","82.4","83.5","85.6","86.4","89.12","91.16","127.2"],"class":["6.22","71.0","79.5"],"header":["6.22","6.23","89.30","91.6"],"nav":["6.23","6.24","96.2"],"navigation":["6.23","6.24"],"布局是":["6.26"],"产品展示页面等":["6.27"],"flexbox":["6.27","6.33"],"适用于一维布局":["6.28"],"支持在主轴上对齐网格项":["6.28"],"布局时":["6.29"],"属性来改变网格项的顺序":["6.30"],"但在旧版本的浏览器中可能存在兼容性问题":["6.31"],"为了确保网页在不同浏览器中正常显示":["6.31"],"当网页中包含大量网格项和复杂的布局时":["6.32"],"可能会导致渲染性能下降":["6.32"],"布局":["6.33"],"实现更复杂的布局需求":["6.33"],"结合":["6.33"],"类选择器":["7.0"],"元素选择器":["7.0"],"400px":["8.1","8.3","146.1"],"200px":["8.1"],"background":["8.1","11.2"],"box":["8.3","58.5"],"width":["8.3","9.0","23.0","42.1","118.14","147.4","161.4"],"left":["8.5","144.6"],"top":["8.5"],"margin":["8.6"],"水平居中":["8.7"],"align":["8.7","127.2"],"nowrap":["9.1"],"改变元素为box弹性盒子":["9.2"],"line":["9.2"],"clamp":["9.2"],"限定行数":["9.2"],"不是一个规范的属性":["9.2"],"没有在css规范草案中":["9.2"],"position":["9.3"],"relative":["9.3"],"overflow":["9.3"],"piece":["10.0"],"垂直滚动条和水平滚动条交汇的部分":["10.0"],"f00":["11.1"],"朝右的三角形":["11.1"],"60px":["11.1"],"image":["11.2","100.5"],"url":["11.2","98.4","110.10"],"图片路径":["11.2"],"中":["12.0","53.1","77.8","87.3","140.0"],"引入了类":["12.0"],"类的方法":["12.1"],"alice":["12.2","15.13","17.17"],"调用父类的构造函数":["12.3"],"this":["12.3","26.5","48.2","74.1","76.12","78.8","80.3","80.14","85.10","87.3","87.4","87.5","87.6","90.6","102.7","102.9","108.0","117.4"],"log":["12.4","12.6","15.23","18.3","18.6","18.11","19.3","20.8","20.17","21.17","22.3","22.4","22.5","22.8","22.10","22.11","28.10","28.15","28.24","29.10","30.11","33.5","34.5","34.15","34.16","45.3","53.3","58.7","62.2","69.8","73.3","73.11","73.18","74.1","78.20","82.5","84.3","84.5","98.6","101.11","101.13","102.6","103.5","118.2","120.3","120.6","120.16","141.1"],"你好":["12.4","154.1"],"我叫":["12.4"],"console":["12.5","12.6","15.23","16.8","18.3","18.6","18.11","18.12","19.2","19.3","19.4","20.17","21.10","21.17","22.3","22.4","22.5","22.8","22.10","22.11","28.10","28.14","28.15","28.23","28.24","29.10","30.11","33.5","34.15","34.16","43.9","58.7","62.2","67.1","69.8","73.3","73.10","73.11","73.14","73.18","74.1","78.20","82.5","89.17","101.13","102.6","103.5","118.2","120.3","120.6","120.16","141.1"],"const":["12.6","20.5","43.6","47.5","53.4","58.5","60.2","65.4","69.4","70.2","70.3","71.1","78.5","78.7","78.12","79.10","86.3","102.1","103.2","104.4","104.6","106.6","110.12"],"actionscript":["13.2"],"jscript":["13.2"],"等":["13.2","54.9"],"所使用":["13.2"],"node":["13.3","121.23"],"环境中可以读写文件等操作":["13.3"],"因为":["13.3"],"是在":["13.3"],"基础上的拓展":["13.3"],"所有":["13.3"],"es7":["13.4"],"es2016":["13.4"],"prototype":["13.4"],"includes":["13.4","54.5"],"用于检查数组是否包含某个元素":["13.4"],"引入指数运算符":["13.4"],"es8":["13.4"],"es2017":["13.4"],"entries":["13.4"],"values":["13.4"],"它是一种用于存储键值对的集合":["14.1"],"判断键是否存在":["14.2"],"true":["14.2","20.20","21.15","29.5","33.11","33.12","34.3","58.10","73.20","79.1","101.5","102.6","156.2"],"city":["14.2"],"false":["14.2","18.13","20.20","34.7","35.1","66.6","79.1"],"删除键值对":["14.2"],"array":["14.4","21.5","28.1","28.32","46.2","51.3","51.4","54.7","101.4"],"from":["14.4","15.11","15.12","15.16","15.18","15.19","15.21","120.8","120.10"],"有重复的键值":["14.6"],"则后面的会覆盖前面的":["14.6"],"对应值即":["14.6"],"为了解决这些问题":["15.1"],"ecmascript":["15.1"],"这些问题会变得更为明显":["15.2"],"模块化的意义在于将代码分割成不同的模块":["15.2"],"每个模块拥有自己的作用域":["15.2"],"并且修改":["15.4"],"而不需要重复编写代码":["15.5"],"关键字":["15.6","17.15","71.0"],"function":["15.8","32.3","74.1","76.4","78.10","101.12","144.5"],"sayhello":["15.8","15.9","15.14","74.1"],"函数或类导入到当前模块中":["15.10"],"module1":["15.11","15.12"],"new":["15.13","43.6","49.1","53.4","76.3","101.10","104.6","118.4","142.3"],"hello":["15.14","18.12","20.1","74.1","76.11","77.21","79.13","80.14","101.7"],"import":["15.16","15.17","15.18","15.22"],"myage":["15.16","76.8"],"main":["15.17","15.18","121.18"],"as":["15.21"],"name":["15.21","34.9","35.7","53.7","76.8","78.7","80.7","80.14","89.19","91.11","103.2","106.1","106.7","116.3","116.8","125.7"],"更好地组织和维护代码":["15.28"],"提高代码的重用性":["15.28"],"出现一次":["16.1"],"thirty":["16.6"],"iterator1":["16.6","16.8"],"for":["16.6","20.22","29.4","46.2","94.4"],"返回一个新的迭代器对象":["16.9"],"该对象包含":["16.9"],"string":["16.12","34.1","34.6","34.14","90.2","101.12","104.4","104.5","106.4","106.7","109.1"],"union":["16.14"],"使用":["16.15","20.22","77.1","81.3","81.15","89.7","165.2"],"方法判断当前":["16.15"],"对象":["16.15","32.11","32.12","52.5","89.15"],"中是否含有":["16.15"],"difference":["16.16"],"es6":["17.3"],"默认值实现方式":["17.3"],"注意":["17.4","77.23"],"null":["17.4","43.5","43.8","48.2","48.7","76.12"],"method":["17.5","20.1","110.10"],"get":["17.5","43.4","43.5","52.5","122.11"],"headers":["17.5"],"http":["17.5","118.3","118.8","121.17"],"example":["17.5","25.3","25.4","26.4","79.6","79.11"],"com":["17.5","79.6","100.4","117.3","156.1"],"报错":["17.5"],"上面代码中":["17.5","32.12","32.13","139.5","142.2"],"的第二个参数是一个对象":["17.5"],"就可以为它的三个属性设置默认值":["17.5"],"解释":["17.7"],"与":["17.7"],"互等":["17.7"],"其实就是":["17.7"],"不同之处在于剩余参数用于解构数组和对象":["17.9"],"从某种意义上说":["17.9"],"slice":["17.10"],"call":["17.10","53.6","76.5"],"终于借助":["17.10"],"方法把":["17.10"],"转化成一个真正的数组了":["17.10"],"但是这样无疑是一个繁琐的过程":["17.10"],"而且不容易理解":["17.10"],"这时":["17.10"],"真数组":["17.11"],"是一个":["17.11"],"这里的剩余参数是个对象":["17.12"],"准确的应该叫":["17.12"],"剩余元素":["17.12"],"func":["17.12"],"本节内容可以总结以下几点":["17.13"],"剩余参数是为了能替代函数内部的":["17.13"],"特性":["17.14","77.20"],"add":["17.15","89.2","112.1","157.4"],"multiply":["17.16","47.1"],"x":["17.16","32.3","98.3","101.12"],"y":["17.16","69.10"],"箭头函数中的this":["17.17"],"person2":["17.17","71.2"],"的指向错误":["17.18"],"在需要动态绑定":["17.18"],"即每个参数占据一行":["17.19"],"以后修改代码的时候":["17.19"],"想为函数":["17.19"],"添加第三个参数":["17.19"],"或者调整参数的次序":["17.19"],"命令后面带有参数":["17.20"],"很多时候":["17.20"],"查":["18.1","28.5"],"以及":["18.2"],"进行字符串拼接之外":["18.2"],"trimright":["18.5"],"copyresult":["18.7"],"world":["18.12","101.7"],"bar":["18.13","89.19"],"arr":["18.16","101.5"],"search":["18.17","39.1"],"pattern":["18.18","69.4","69.8"],"at":["18.18","18.20","118.8"],"bat":["18.19"],"sat":["18.19"],"fat":["18.19"],"result":["18.20","104.4"],"是一种方便拼接字符串的新语法":["19.1"],"模板字符串使用反引号":["19.1"],"m":["19.2","19.5","69.3"],"years":["19.2","19.5","70.2"],"old":["19.2","19.5","70.2"],"breaks":["19.3"],"输出":["19.3","19.5","29.10","45.1","45.2","45.3","69.8","74.2","76.3"],"is":["19.4","26.5","53.7","53.9","70.2","78.8","85.9"],"i":["19.5","50.2","70.2","74.1"],"方法也可以简写":["20.1"],"o":["20.1","50.2"],"keya":["20.4"],"a":["20.4","20.11","21.6","24.2","26.5","49.0","57.2","57.3","78.8","91.15","99.5","103.4","103.5","118.12","120.13","121.21"],"keyb":["20.4"],"b":["20.4","21.13","21.14","103.5","106.4","120.13","121.21"],"myobject":["20.4"],"javascript":["20.5","45.5","53.13","63.1","63.4","64.1","64.4","69.3","72.2","125.3","138.6","161.1"],"person":["20.5","76.3","89.8","102.9","106.1","106.4"],"这里的":["20.6","118.2"],"都没有用在对象的方法之中":["20.6"],"第一种写法是":["20.6"],"用在属性里面":["20.6"],"第二种和第三种写法是":["20.6"],"用在一个函数里面":["20.6"],"然后赋值给":["20.6"],"目前":["20.6"],"只有对象方法的简写法可以让":["20.6"],"引擎确认":["20.6"],"定义的是对象的方法":["20.6"],"引擎内部":["20.6"],"number":["20.12","34.6","67.0","83.2","83.3","101.12","103.1","104.3","104.5","104.7","106.2","106.3","106.7","109.2"],"字符串在数组中展开":["20.13"],"会直接覆盖":["20.15"],"再优化":["20.18"],"js":["20.20","33.6","34.16","43.6","58.5","65.4","67.3","67.4","76.3","76.7","78.2","105.7","120.10","121.23","142.1"],"foo":["20.20","35.1","76.4"],"注意事项":["20.21"],"基本数据类型作为源对象":["20.21"],"与对象的展开类似":["20.21"],"先转换成对象":["20.21"],"再合并":["20.21"],"undefined":["20.21","21.3","32.13","34.5"],"等方法是实例方法":["20.22"],"返回的都是":["20.22"],"对象的":["20.22"],"等方法是构造函数方法":["20.22"],"返回的是数组":["20.22"],"应用":["20.22"],"of":["20.22"],"循环遍历对象":["20.22"],"元素值为":["21.3"],"的数组":["21.3"],"array1":["21.3"],"key1":["21.4"],"value1":["21.4"],"回调函数":["21.9"],"参数2":["21.9","144.5"],"可选":["21.9","21.10","52.5"],"指定回调函数中的":["21.9"],"被填充的结束索引":["21.10"],"默认为数组末尾":["21.10"],"e":["21.11","117.6","146.2"],"f":["21.11","165.11"],"g":["21.11","105.10","123.0"],"循环":["21.12"],"不管嵌套多少层":["21.16"],"的指向":["21.17"],"下面我将详细介绍数组解构和对象解构的用法":["22.0"],"以及一些扩展功能":["22.0"],"前面必须要加分号":["22.6"],"age":["22.9","35.1","35.4","62.1","73.2","106.3"],"videoplayer":["23.0"],"ogg":["23.2"],"webm":["23.3"],"规定了多媒体资源":["23.5"],"可以是多个":["23.5"],"定义多种媒体资源":["23.6"],"比如":["23.6","90.3"],"自动播放":["23.7"],"muted":["23.7"],"是否静音":["23.7"],"loop":["23.7"],"psuse":["23.8"],"暂停":["23.8"],"demo":["23.10"],"horse":["23.10"],"movie":["23.11"],"mp4":["23.11"],"type":["23.11","25.13","78.18","90.2","90.8","120.16"],"您的浏览器不支持":["23.11"],"html5":["23.11","24.1"],"标签":["23.11","26.3"],"language":["24.0"],"是一种用于创建网页和网页应用程序的标记语言":["24.0"],"版本是":["24.1"],"文档的根元素":["24.1"],"包含整个网页的内容":["24.1"],"头部部分":["24.1"],"为最高级别的标题":["24.2"],"为最低级别":["24.2"],"p":["24.2","25.7","26.1","32.12","36.2","61.2","79.13","80.3","80.5","80.14","82.3","82.4","84.2","84.4","84.5","91.16","102.1","102.10","116.1"],"段落标签":["24.2","26.1"],"用于定义段落文本":["24.2","26.1"],"锚链接标签":["24.2"],"多媒体支持":["24.3"],"video":["24.3"],"audio":["24.3"],"无障碍性":["24.4"],"表单验证":["24.4"],"框架等":["24.4"],"标记":["25.0"],"为了避免这种情况":["25.0"],"这是h3级别的标题":["25.1"],"h4":["25.1"],"www":["25.3","26.4","98.3"],"jpg":["25.4","118.3"],"列表项2":["25.5","25.6"],"包含一段文本":["25.7"],"blue":["25.8"],"表头2":["25.9"],"这是另一行文本":["25.10"],"checkbox":["25.11"],"input":["25.13","78.18","85.14"],"text":["25.13","27.1","43.9","78.18","117.4","127.2","154.1","165.9"],"about":["25.14","86.3","118.7"],"关于我们":["25.14"],"您的浏览器不支持视频播放":["25.15"],"ul":["26.1","56.2","83.2","83.3","83.5","94.4"],"li":["26.1","56.2","83.2","83.3","94.4","117.4"],"em":["26.2"],"强调标签":["26.2"],"分别表示强调和斜体":["26.2"],"img":["26.2","92.6"],"从而形成嵌套的关系":["26.3"],"https":["26.4","79.6","79.11"],"tag":["26.5"],"的标签上添加下面的属性":["27.1"],"autocomplete":["27.1"],"off":["27.1"],"然后放到一个变量中":["28.0"],"管理非常方便":["28.0"],"创建了一个空的数组":["28.1"],"splice":["28.6","28.11","49.2"],"red":["28.7","34.10","136.1","147.3"],"count":["28.8","78.22","80.4","82.6"],"yellow":["28.9","154.2"],"orange":["28.9"],"brown":["28.10"],"取得最后一项":["28.12"],"取得第一项":["28.13"],"删除第一项":["28.14"],"purple":["28.17"],"插入两个值":["28.17"],"删除一个元素":["28.17"],"find":["28.18"],"element":["28.21","36.1","58.3"],"index":["28.21","28.32","117.5","120.13","120.14","129.0","132.0","133.0","135.0"],"every":["28.27"],"someresult":["28.28"],"everyresult":["28.29"],"filterresult":["28.31"],"执行流程":["29.1"],"语句在执行会先对":["29.1"],"isnan":["29.2"],"alert":["29.2","73.4"],"请输入一个合法的分数":["29.2"],"当成绩为100时":["29.2"],"奖励一辆bmw":["29.2"],"语句在执行时":["29.3"],"会依次将":["29.3"],"后的表达式和":["29.3"],"后的表达式进行全等比较":["29.3"],"会先对条件表达式进行判断":["29.5"],"如果结果为":["29.5","33.12"],"则执行循环体":["29.5"],"会先执行":["29.6"],"后的循环体":["29.6"],"执行完毕后":["29.6"],"会对while后的条件表达式进行判断":["29.6"],"c":["29.9","111.1","120.13","135.5"],"let":["29.9","34.11","46.2","48.5","103.4","106.2","106.3"],"prop":["29.9"],"数组":["29.11","80.6","142.1"],"函数等":["29.11"],"循环适用于遍历可迭代对象":["29.11"],"包括数组":["29.11"],"字符串":["29.11"],"map":["29.11","34.12","47.5","54.9","83.1","83.5"],"用来跳过当次循环":["29.12"],"循环语句也能实现一些简单的重复操作":["30.0"],"但是比较具有局限性":["30.0"],"此时我们就可以使用":["30.0"],"这是函数表达式写法":["30.2"],"匿名函数后面跟分号结束":["30.2"],"var":["30.2","63.2","64.2","120.10","142.3"],"函数不调用自己不执行":["30.3"],"调用函数的时候千万不要忘记加小括号":["30.3"],"函数是可以相互调用的":["30.3"],"实参2":["30.6"],"在函数调用的小括号里面是实参":["30.6"],"实际的参数":["30.6"],"形参和实参的执行过程":["30.6"],"如果实参的个数小于形参的个数":["30.7"],"多于的形参定义为undefined":["30.7"],"最终的结果就是":["30.7"],"nan":["30.7"],"形参可以看做是不用声明的变量":["30.7"],"返回的结果是最后一个值":["30.8"],"我们求任意两个数的":["30.8"],"加减乘数结果":["30.8"],"继续执行下次循环":["30.9"],"tip":["30.12","72.2","74.4","79.13","80.15"],"无需调用":["30.12"],"但它是一种解释性语言":["31.0"],"不需要编译":["31.0"],"document":["31.1","58.5","77.23"],"通过":["31.2","54.0","77.9","77.20","118.2"],"script":["31.2","94.3","124.3"],"标签将":["31.2"],"title":["31.3","77.23","90.8","117.4"],"基":["31.3"],"属性引入":["31.4"],"标签如果带":["31.4"],"html":["31.6","85.3","86.6","91.14","120.13","120.14"],"alt":["31.7","128.0","130.0","131.0","134.0","136.0","137.0"],"就指向一个对象":["32.2"],"该对象内部包含两个键值对":["32.2"],"又称为两个":["32.2"],"成员":["32.2"],"第一个键值对是":["32.2"],"属性":["32.3","32.11","32.13","57.3","74.4","76.8","80.15","84.6","102.6","106.0","142.2"],"property":["32.3"],"它的":["32.3","88.1"],"键值":["32.3"],"可以是任何数据类型":["32.3"],"如果一个属性的值为函数":["32.3"],"通常把这个属性称为":["32.3"],"方法":["32.3","60.1"],"它可以像函数那样调用":["32.3"],"return":["32.3","47.6","48.5","54.5","54.6","78.18","79.13","80.4","80.5","80.14","82.3","82.4","83.2","83.3","83.5","84.2","84.4","84.5","97.4","103.3","104.6","110.11","120.3","120.6"],"然后":["32.4","52.5","142.2"],"的值变为":["32.4"],"这时不会对":["32.4"],"才能执行":["32.5"],"如果要解释为对象":["32.5"],"最好在大括号前加上圆括号":["32.5"],"因为圆括号的里面":["32.5"],"只能是表达式":["32.5"],"所以确保大括号只能解释为对象":["32.5"],"数字键可以不加引号":["32.7"],"因为会自动转成字符串":["32.7"],"后绑定":["32.8"],"也就是说":["32.8"],"你可以在任意时刻新增属性":["32.8"],"没必要在定义对象的时候":["32.8"],"key2":["32.9"],"defineproperty":["32.10"],"value":["32.10","65.2","89.4","89.31"],"configurable":["32.10"],"上面代码之中":["32.10"],"哪些属性是继承的":["32.11"],"就像上面代码中":["32.11"],"本身并没有":["32.11"],"但是":["32.11"],"native":["32.12"],"code":["32.12","110.7"],"没有任何输出":["32.12"],"继承了":["32.12"],"并没有":["32.13"],"对":["32.13","94.1"],"赋值等于创造了一个全局变量":["32.13"],"正确的写法应该是":["32.13"],"先定义对象":["32.13"],"中常用的运算符有":["33.1"],"算数运算符":["33.1"],"浮点数的进度问题":["33.2"],"浮点数值的最高精度是":["33.2"],"乘等于":["33.3"],"是旧值":["33.6"],"a1":["33.6"],"判等号":["33.7"],"判断两边值是否相等":["33.7"],"没有":["33.9","33.10"],"才会返回":["33.9","33.10"],"对于非布尔值进行与运算":["33.9"],"对于非布尔值或运算":["33.10"],"即圆括号中的表达式会第一个运算":["33.13"],"使用运算符时":["33.13"],"如果遇到拿不准的":["33.13"],"可以直接通过":["33.13"],"boolean":["34.1"],"floatnum3":["34.2"],"有效":["34.2"],"但不推荐":["34.2"],"floatnum":["34.2"],"包含":["34.3"],"值的变量跟未定义变量是有区别的":["34.3"],"jingleheimerschmidt":["34.4"],"字符串是不可变的":["34.4"],"意思是一旦创建":["34.4"],"非空字符串":["34.6"],"foosymbol":["34.7"],"nicholas":["34.9"],"colors":["34.10"],"利用string":["34.14"],"typeof":["34.15"],"只用这5种情况":["34.16"],"其他都为true":["34.16"],"当我们把变量赋值给一个变量时":["34.17"],"10值":["34.18"],"引用类型数据存放在堆中":["34.19"],"每个堆内存对象都有对应的引用地址指向它":["34.19"],"引用地址存放在栈中":["34.19"],"简单类型赋值":["34.20"],"是生成相同的值":["34.20"],"found":["35.1"],"不能定义名为eval":["35.1"],"和arguments":["35.1"],"的变量":["35.1"],"否则会导致语法错误":["35.1"],"声明提升":["35.1"],"lisi":["35.2","35.7"],"不会被提升":["35.3"],"try":["35.5"],"你可能以为会输出0":["35.6"],"实际上会输出5":["35.6"],"zhangsan":["35.7","76.3","89.8"],"比":["35.8"],"优先级高":["35.8"],"它提供了对文档内容进行访问和操作的方法和属性":["36.0"],"创建新元素":["36.1"],"并使用":["36.1"],"appendchild":["36.1"],"createelement":["36.2"],"textcontent":["36.2"],"可以使用它向前或向后导航":["37.0"],"go":["37.1"],"forward":["37.2"],"导航到相对于当前页面的偏移量为2的页面":["37.2"],"的各个部分":["38.0"],"如协议":["38.0"],"主机名":["38.0"],"路径和查询参数等":["38.0"],"同时也提供了一些导航方法":["38.0"],"如重定向到其他":["38.0"],"刷新页面等":["38.0"],"它包含了":["39.0"],"的路径部分":["39.1"],"将页面重定向到新的url":["39.2"],"assign":["39.2"],"如浏览器的名称":["40.0"],"版本":["40.0","124.4"],"appversion":["40.1"],"获取浏览器的版本":["40.2"],"如屏幕的尺寸":["41.0"],"不包括系统任务栏或工具栏":["41.1"],"屏幕可用宽度":["41.2"],"availwidth":["41.2"],"获取屏幕的可用高度":["41.2"],"的顶级对象":["42.0"],"height":["42.1","89.31","146.1","148.2","157.1","161.4"],"调整窗口的大小":["42.1"],"close":["42.2","120.7"],"调整窗口大小":["42.2"],"与服务器交换数据":["43.1"],"并且更新部分网页":["43.1"],"的原理简单来说通过":["43.1"],"构建请求所需的数据内容":["43.2"],"并通过":["43.2"],"实例对象":["43.3"],"常见的有":["43.4"],"post":["43.4","43.8","110.10"],"服务端地址":["43.4"],"如果不传递数据则为":["43.5"],"如果使用":["43.5"],"属性用于接收服务器端的响应结果":["43.6"],"举个例子":["43.6"],"request":["43.6","97.5"],"send":["43.8","122.5","122.11"],"else":["43.8","120.17"],"xml":["43.9"],"请求成功后的回调函数":["43.9"],"即使外部函数已经执行完毕":["45.0"],"也可以继续访问":["45.0"],"closure":["45.1"],"在上述示例中":["45.2","52.3","52.5","55.4","62.1"],"通过捕获外部变量":["45.4"],"闭包可以持久化存储函数的状态":["45.4"],"并在每次调用时保持该状态":["45.4"],"这在处理异步操作":["45.4"],"定时器和事件处理等场景中特别有用":["45.4"],"实现函数柯里化":["45.4"],"可能会导致意外的行为":["45.5"],"闭包是":["45.5"],"中一项强大的特性":["45.5"],"originalobject":["46.1"],"使用扩展运算符":["46.1"],"newobj":["46.2","73.7"],"isarray":["46.2","51.4","54.7"],"key":["46.2","83.2","83.3","84.6","85.12"],"in":["46.2","84.3","84.5"],"用于乘以":["47.1"],"柯里化可能会增加代码的复杂性和理解难度":["47.2"],"过度的柯里化可能导致函数嵌套过深":["47.2"],"难以阅读和调试":["47.2"],"因此":["47.2","53.17","62.4"],"在使用柯里化时":["47.2"],"需要根据具体场景和需求权衡使用的程度":["47.2"],"concat":["47.4","51.3","54.7"],"nextargs":["47.5"],"mergedargs":["47.5"],"arg":["47.5"],"这种方法使用箭头函数和递归来实现柯里化":["47.6"],"keypress":["48.0"],"mousemove":["48.0","48.4"],"等事件在触发时":["48.0"],"会不断地调用绑定在事件上的回调函数":["48.0"],"mousedown":["48.1","48.4"],"settimeout":["48.2","48.6"],"apply":["48.2"],"starttime":["48.3"],"curtime":["48.3"],"delay":["48.5"],"timer":["48.5"],"callnow":["48.6"],"第一次会立即执行":["48.6"],"以后只有事件执行后才会再次触发":["48.6"],"定义要进行的函数":["48.7"],"uniquearray":["49.1"],"每删除一个树":["49.2"],"保证j的值经过自加后不变":["49.2"],"length":["49.3","49.4","49.6","101.14"],"if":["49.3","49.4","49.6","51.4","79.4","79.8","79.9","91.15","120.6","146.2","149.3"],"has":["49.6","78.20"],"遇到异步任务时不会立马执行":["50.1"],"会将异步任务放入一个":["50.1"],"任务队列":["50.1"],"task":["50.1"],"requestanimationframe":["50.2"],"请求动画":["50.2"],"ui":["50.2","78.1"],"渲染":["50.2","50.3"],"宏任务":["50.3"],"任务队列执行":["50.3"],"先进先出":["50.3"],"的顺序":["50.3"],"循环第一遍":["50.3"],"先打印所有同步任务":["50.3"],"使用infinity":["51.1"],"无论多少层都将扁平化为一维数组":["51.1"],"优化":["51.2"],"res3":["51.2"],"变为":["52.0"],"时":["52.0","68.1"],"会调用相应的回调函数":["52.0"],"在操作失败时调用":["52.1"],"error":["52.1","52.2","66.9","97.4","102.6","109.1","110.11"],"在回调函数中":["52.1"],"可以执行异步操作":["52.1"],"例如发送网络请求":["52.1"],"处理成功的结果":["52.2"],"处理失败的结果":["52.2"],"处理任意一个操作失败的结果":["52.3"],"第一个":["52.3","139.5"],"方法返回了一个新的":["52.3"],"并返回一个新的":["52.4"],"当":["52.4","108.0"],"中的所有":["52.4"],"实例都成功完成时":["52.4"],"新的":["52.4"],"实例的":["52.4"],"函数封装了一个基本的":["52.5"],"请求":["52.5","98.3"],"它接收三个参数":["52.5"],"请求的":["52.5"],"请求的方法":["52.5"],"例如":["52.5","58.2","83.6"],"和请求的数据":["52.5"],"函数内部创建了一个":["52.5"],"并使用传递的参数设置请求的相关属性":["52.5"],"方法发送请求":["52.5"],"当请求成功完成时":["52.5"],"原型是一个关键的概念":["53.1"],"在上面的例子中":["53.2","80.15","81.15","82.7","87.5"],"定义了一个构造函数":["53.2"],"它有一个属性":["53.2"],"和一个方法":["53.2"],"buddy":["53.4"],"golden":["53.4"],"retriever":["53.4"],"breed":["53.6","53.8"],"eating":["53.7","53.9"],"dog":["53.7","53.8","53.9","102.2"],"这意味着你可以在运行时更改对象的原型":["53.11"],"这种灵活性可以带来很多优势":["53.11"],"这意味着一个对象可以继承多个原型对象的属性和方法":["53.12"],"因为它可能会导致意外的行为和不稳定性":["53.15"],"如果需要扩展内建对象的功能":["53.15"],"因为所有对象实例共享同一个方法":["53.16"],"将数组缩减为单个值":["54.0"],"当前值":["54.1"],"currentvalue":["54.1"],"当前索引":["54.1"],"pre":["54.6"],"cur":["54.6","54.7"],"sum":["54.8"],"reduce":["54.8"],"如":["54.9","66.9","78.13"],"filter":["54.9"],"foreach":["54.9"],"全局作用域和局部作用域":["55.0"],"内部的":["55.4","73.5"],"盒子插入节点":["56.1"],"button":["56.1","89.2","89.12","94.2"],"btn":["56.1"],"再来看另一种情形的代码演示":["56.1"],"不仅如此":["56.3"],"span":["56.4"],"初级":["56.4"],"变色":["56.4"],"api":["57.1","79.6","79.11","110.10","121.15","138.1","138.3","138.8","152.4"],"应用程序编程接口":["57.1"],"来访问和操作":["57.1"],"树中的节点":["57.1"],"文本":["57.2"],"href":["57.2","57.3"],"标签的":["57.3"],"提供了丰富的功能和方法":["57.4"],"使开发者能够通过":["57.4"],"与网页进行交互和动态操作":["57.4"],"它允许你监听和响应用户与网页元素之间的交互":["58.0"],"鼠标点击":["58.1"],"网页中的一个按钮":["58.1"],"其中":["58.2","59.1","116.1"],"是要监听的事件名称":["58.2"],"click":["58.2","89.2","94.2"],"mouseover":["58.2"],"contextmenu":["58.5"],"当用户在元素上点击鼠标右键时触发":["58.5"],"通常用于显示自定义的上下文菜单":["58.5"],"wheel":["58.5"],"当用户使用鼠标滚轮时触发":["58.5"],"queryselector":["58.5"],"keyup":["58.6"],"有焦点触发":["58.7"],"当用户释放键盘上的按键时触发":["58.8"],"类似于":["58.8","90.11"],"在事件处理程序中":["58.9"],"可以通过事件对象访问有关事件的详细信息":["58.9"],"事件对象提供了许多属性和方法":["58.9"],"以帮助我们处理事件":["58.9"],"事件捕获":["58.10"],"可以通过将第三个参数设置为":["58.10"],"来启用事件捕获模式":["58.10"],"在事件捕获模式下":["58.10"],"change":["58.11","89.4","89.13","89.14"],"focus":["58.11"],"blur":["58.11"],"页面加载事件":["58.11"],"事件委托还可以解决动态添加或删除的子元素无法自动绑定事件监听器的问题":["58.12"],"因为委托是基于事件冒泡的":["58.12"],"所以后续添加的子元素也能够触发绑定在父元素上的事件监听器":["58.12"],"总结起来":["58.12"],"事件委托是一种利用事件冒泡机制":["58.12"],"在父元素上统一绑定事件监听器":["58.12"],"通过事件的目标元素来判断并处理子元素的事件":["58.12"],"提供了更简洁":["58.12"],"删除指定的子节点":["59.0"],"setattribute":["59.0"],"或者":["59.2","98.6","121.13"],"existingelement":["59.3"],"插入到":["59.3"],"是相应的属性值":["60.1"],"获取元素的计算样式":["60.1"],"getcomputedstyle":["60.1"],"则添加它":["60.2"],"检查是否包含类名":["60.2"],"contains":["60.2"],"hasclass":["60.2"],"根据选择器获取匹配的第一个元素节点":["61.0"],"queryselectorall":["61.0"],"根据选择器获取匹配的所有元素节点":["61.0"],"通过标签名获取元素":["61.1"],"getelementsbytagname":["61.1"],"传入标签名":["61.1"],"修改元素的属性":["61.2"],"存储在用户的计算机上":["62.0"],"每次用户请求与相同域名下的网页时":["62.0"],"浏览器都会将相关":["62.0"],"我们设置了两个":["62.1"],"00":["62.3"],"的存储容量都有限制":["62.4"],"通常在几":["62.4","63.6","64.6"],"kb":["62.4"],"左右":["62.4","63.6","64.6"],"存储大量数据可能会导致溢出或性能问题":["62.4"],"sessionstorage":["63.0"],"不同":["63.0","64.0"],"是对应的值":["63.1","64.1"],"存储的值必须是字符串类型":["63.1","64.1"],"username":["63.2","64.2","116.1","122.11"],"setitem":["63.3","64.3"],"中的所有数据":["63.5","64.5"],"的存储容量是有限的":["63.6","64.6"],"mb":["63.6","64.6"],"localstorage":["64.0"],"日至今的毫秒数":["65.1"],"gettimezoneoffset":["65.1"],"获取本地时间与":["65.1"],"utc":["65.1"],"时间之间的时差":["65.1"],"返回值为以分钟为单位的整数值":["65.1"],"setdate":["65.1"],"day":["65.1"],"设置日期的天数为指定的值":["65.1"],"参数为一个整数":["65.1"],"setfullyear":["65.1"],"year":["65.1"],"设置日期的年份为指定的值":["65.1"],"参数为一个四位数的整数":["65.1"],"sethours":["65.1"],"hour":["65.1"],"设置日期的小时数为指定的值":["65.1"],"第二个参数为月份":["65.3"],"到":["65.3","130.4","134.3","135.4","136.1","137.4"],"之间的整数值":["65.3"],"表示从一月到十二月":["65.3"],"实例化":["65.4"],"today":["65.5"],"无论是处理基本数据类型":["66.0"],"集合数据":["66.0"],"文本数据还是进行数学计算":["66.0"],"date":["66.1"],"日期时间":["66.1"],"math":["66.1","157.3","158.4"],"提供了一系列通用的方法":["66.2"],"查询":["66.3"],"查找":["66.4"],"替换等":["66.4"],"计算等":["66.5"],"格式化等":["66.7"],"计算平方根":["66.8"],"生成随机数等":["66.8"],"还有一些其他的内置对象":["66.9"],"类型":["67.0","110.8"],"舍弃小数部分":["67.5","67.6"],"整数部分加1":["67.5"],"整数部分不变":["67.6"],"求":["67.10"],"的":["67.10","73.3"],"求某数的平方根":["67.11"],"pi":["67.13","157.3"],"将返回":["68.1"],"min":["68.2"],"5e":["68.2"],"positive":["68.2"],"negative":["68.2"],"使用正则表达式来检查字符串是否符合特定模式":["69.1"],"搜索":["69.1"],"searching":["69.1"],"使用正则表达式在字符串中查找特定模式的出现位置":["69.1"],"替换":["69.1"],"replacing":["69.1"],"匹配前面的元素零次或一次":["69.5"],"定义字符类":["69.5"],"多行匹配":["69.6"],"允许":["69.6"],"匹配单词字符":["69.7"],"w":["69.7","105.9"],"匹配非单词字符":["69.7"],"greeting":["69.9"],"subject":["69.9"],"u":["69.10","101.8"],"启用":["69.10"],"unicode":["69.10"],"匹配模式":["69.10"],"粘附模式":["69.10"],"日期":["69.11"],"数字等":["69.11"],"语法解析":["69.11"],"使用正则表达式解析特定的语法或格式":["69.11"],"object":["70.1"],"create":["70.1","73.14","98.2","102.6"],"and":["70.2"],"am":["70.2","74.1"],"unknown":["70.3"],"sound":["70.3"],"使得类的定义和使用更加直观和方便":["71.0"],"使用构造函数创建对象实例":["71.1"],"person1":["71.1","76.3"],"john":["71.1","71.2"],"jane":["71.2","74.2"],"在面向对象编程中":["72.1"],"的属性和方法":["72.2"],"从而实现代码的重用和扩展":["72.2"],"多态性":["72.2"],"多态性允许不同的对象对相同的消息作出不同的响应":["72.2"],"它可以通过函数重载或方法覆盖来实现":["72.2"],"obj":["73.3"],"sayhi":["73.4"],"我的名字叫":["73.4"],"返回一个给定对象自身的所有":["73.5"],"symbol":["73.5"],"属性的数组":["73.5"],"getprototypeof":["73.5"],"返回指定对象的原型":["73.5"],"mergedobj":["73.6"],"不会影响原对象":["73.10"],"propnames":["73.12"],"symbols":["73.13"],"我们可以实现继承":["74.3"],"子对象可以继承父对象的属性和方法":["74.3"],"proto":["74.4"],"myfunction":["75.0"],"在这个函数内的代码会在严格模式下运行":["75.0"],"严格模式的一些特性和限制包括":["75.0"],"变量必须先声明后使用":["75.0"],"避免意外创建全局变量":["75.0"],"一个执行期上下文定义了一个函数执行时的环境":["76.1"],"每调用一次函数":["76.1"],"指向的是一个对象":["76.2"],"构造函数":["76.3"],"指向实例对象":["76.3"],"arrowfn":["76.4"],"常见的方法有":["76.5"],"语法":["76.7"],"fn1":["76.7","76.10"],"实现继承":["76.8"],"给":["76.8"],"father":["76.8"],"增加":["76.8"],"myname":["76.8"],"想要将this指向哪里":["76.10"],"函数实参1":["76.10"],"函数实参2":["76.10","76.14"],"备注":["76.10"],"指向":["76.12"],"所以":["76.12"],"第一个参数填":["76.12"],"或者填":["76.12"],"都可以":["76.12"],"严格模式中":["76.12"],"参数":["76.14"],"第一个参数":["76.14"],"在":["76.14","77.13","90.7","140.0"],"函数运行时":["76.14"],"指定":["76.14"],"库":["77.0","97.1","152.1"],"virtual":["77.1"],"dom":["77.1","77.24","81.12","84.6","85.7"],"虚拟":["77.1"],"技术":["77.1"],"复用和测试":["77.3"],"开发者可以将大型应用程序拆分为小的":["77.3"],"树的差异":["77.4"],"找出需要更新的部分":["77.4"],"并最小化地更新真实":["77.4"],"子组件无法直接修改父组件的数据":["77.5"],"router":["77.6","81.4","86.6"],"用于实现前端路由":["77.6"],"组件可以接受输入的数据":["77.8"],"称为":["77.8"],"我们可以以一种更直观的方式描述组件的结构和样式":["77.9"],"父组件可以向子组件传递数据或方法":["77.10"],"这种单向数据流的机制使得":["77.10"],"会自动重新渲染组件以反映最新的状态":["77.11"],"状态是类组件中的一个特殊对象":["77.11"],"我们可以执行特定的操作":["77.12"],"如初始化组件":["77.12"],"发送网络请求":["77.13","79.11"],"处理用户输入等":["77.13"],"和三元表达式":["77.14"],"来控制组件的渲染逻辑":["77.14"],"并将数组的每个元素渲染成相应的组件":["77.15"],"列表渲染允许动态地渲染多个相同类型的组件":["77.15"],"提供了一些方便的组件来处理表单数据":["77.16"],"允许将共享的状态提升到共同的父组件":["77.17"],"实现组件之间的数据共享":["77.17"],"可以增强组件的功能":["77.18"],"使得代码更具可复用性和灵活性":["77.18"],"一层层传递":["77.19"],"上下文提供了一种便捷的方式来在组件之间共享数据":["77.19"],"操作":["77.22"],"的扩展库":["77.22"],"mycontainer":["77.23"],"client":["77.24"],"app":["77.24","85.4","87.3","151.2"],"的魔法":["78.0"],"从而使得构建动态":["78.1"],"变得更加直观和简洁":["78.1"],"将被转换为以下":["78.2"],"也可以是自定义的":["78.4"],"组件":["78.4","165.7"],"的形式":["78.5"],"h1":["78.6"],"syntax":["78.6"],"可复用的组件":["78.9"],"从而使得代码结构更加清晰和易于维护":["78.9"],"jsx":["78.10","78.12","79.5"],"welcome":["78.10","78.14","78.15","84.2","84.4"],"extends":["78.11","79.5","80.14","102.2"],"的条件语句":["78.13"],"back":["78.14","78.15"],"比如商品列表":["78.16"],"product":["78.17"],"render":["78.18","79.13","80.4","80.14","82.3","82.4","83.5"],"form":["78.18","98.3"],"handlefahrenheitchange":["78.19"],"mounted":["78.20"],"setcount":["78.22"],"usestate":["78.22"],"handleincrement":["78.22","82.5","82.6"],"并进行必要的操作":["79.0"],"理解":["79.0"],"shouldcomponentupdate":["79.1","83.6"],"在组件更新之前调用":["79.1"],"返回":["79.1"],"用于控制组件是否需要重新渲染":["79.1"],"bind":["79.3"],"setstate":["79.3"],"prevstate":["79.3","79.4","79.8","82.5"],"nextprops":["79.4","79.8","79.9"],"根据props更新state":["79.4","79.8"],"mycomponent":["79.5","80.14"],"fetch":["79.6","79.11"],"data":["79.6","85.16","96.2","98.5","110.11","110.12"],"nextstate":["79.9"],"根据新的props或state判断是否需要重新渲染":["79.9"],"someprop":["79.9"],"获取更新前的dom快照":["79.10"],"snapshot":["79.10"],"somedomelement":["79.10"],"scrolltop":["79.10"],"props":["79.11","80.7","80.8","80.9"],"总结":["79.13"],"这些数据被称为":["80.0"],"在组件的生命周期中是只读的":["80.1"],"意味着组件本身无法修改接收到的":["80.1"],"对象等":["80.6"],"isactive":["80.9"],"yes":["80.9"],"no":["80.9"],"使用组件并传递props":["80.10"],"的传递是自上而下的":["80.12"],"的值":["80.13"],"component":["80.14","81.11","81.13","81.14","85.17","86.7","86.10","91.2"],"getelementbyid":["80.15"],"root":["80.15","122.2"],"如果没有传递":["80.15"],"将使用默认值":["80.15"],"spa":["81.1"],"在用户体验和性能方面有很大的优势":["81.1"],"在传统多页应用中":["81.1"],"每次用户切换页面都会导致整个页面的重新加载":["81.1"],"route":["81.3"],"react":["81.4","81.5"],"加载对应的数据":["81.5"],"提供了":["81.6","81.7"],"link":["81.6","86.6","165.7","165.9"],"history":["81.7","92.4"],"对象来管理导航历史记录":["81.7"],"bash":["81.8","86.2"],"install":["81.8","105.10","165.3"],"我们就可以在项目中开始使用它了":["81.9"],"以下是使用":["81.9"],"path":["81.11","81.13","81.14","86.9","122.14"],"exact":["81.11","81.13","81.14"],"reactdom":["81.12"],"user":["81.15","84.2","84.3","84.4","122.2"],"export":["81.15","84.3","84.4","110.12"],"default":["81.15","90.2"],"组件来创建导航链接":["81.15"],"从而实现页面之间的切换":["81.15"],"允许我们在组件内部保存数据":["82.0"],"发生变化时":["82.1"],"会重新渲染组件":["82.1"],"并根据新的":["82.1"],"updated":["82.5","89.28"],"错误的方式":["82.6"],"直接修改state的值":["82.6"],"onclick":["82.7"],"increment":["82.7"],"我们将":["82.7"],"提升到了":["82.7"],"传递给":["82.7"],"这样":["82.7","87.3"],"列表渲染是一种常见的技术":["83.0"],"用于动态地生成列表元素":["83.0"],"的数组和":["83.1"],"listitems":["83.4"],"的性能优化技术":["83.6"],"purecomponent":["83.6"],"来避免不必要的重新渲染":["83.6"],"使用箭头函数":["83.6"],"条件渲染是一种根据特定条件决定是否渲染组件或组件的一部分的技术":["84.0"],"或三元表达式来实现条件渲染":["84.1"],"条件渲染允许我们根据不同的条件来显示或隐藏组件":["84.1"],"或者根据不同的状态来渲染不同的内容":["84.1"],"please":["84.2","84.3","84.5"],"to":["84.3","84.5","86.8"],"continue":["84.3","84.5"],"以避免额外的":["84.6"],"节点":["84.6"],"如果返回的元素列表可能会发生变化":["84.6"],"框架":["85.1","119.1"],"它允许您将应用程序划分为可复用的组件":["85.1"],"直接引入vue":["85.3"],"on":["85.7","120.4","156.2"],"用于监听":["85.7"],"visible":["85.9"],"isvisible":["85.10"],"items":["85.12","165.9","165.10"],"handleclick":["85.13"],"me":["85.13"],"message":["85.16","89.5","118.8","120.3","120.6"],"数据更新后":["85.18"],"在数据更新之后调用":["85.18"],"发生在重新渲染之后":["85.18"],"可以在此处执行依赖于更新后":["85.18"],"的操作":["85.18"],"beforedestroy":["85.18"],"销毁前":["85.18"],"在实例销毁之前调用":["85.18"],"可以在此处进行清理工作":["85.18"],"的路由功能":["86.1"],"学习":["86.1"],"项目中":["86.2"],"使用npm":["86.2"],"template":["86.4","89.0","89.12","91.13","91.14","91.17"],"home":["86.5"],"beforeeach":["86.8"],"category":["86.9"],"lazy":["86.10"],"重定向":["86.12"],"应用中的共享状态":["87.0"],"state":["87.0"],"中唯一允许修改状态的地方":["87.1"],"它们类似于事件":["87.1"],"每个":["87.1"],"mutation":["87.1"],"都有一个字符串的事件类型和一个回调函数":["87.1"],"在回调函数中进行实际的状态修改操作":["87.1"],"actions":["87.1"],"动作":["87.1"],"的繁琐操作":["87.2"],"可预测性":["87.2"],"由于状态的变更必须通过":["87.2"],"导入":["87.3"],"并将其关联到":["87.3"],"实例中":["87.3"],"整个应用的组件都可以通过":["87.3"],"来访问":["87.3"],"decrement":["87.4"],"组件中的代码":["87.4","87.5","87.6"],"methods":["87.4","87.5"],"我们在":["87.5"],"中新增了一个":["87.5"],"会建立一个与该属性的依赖关系":["88.1"],"每个依赖关系都会跟踪哪些":["88.1"],"watcher":["88.1"],"观察者":["88.1"],"依赖于这个属性":["88.1"],"响应式触发":["88.1"],"reactivity":["88.1","88.2"],"trigger":["88.1","88.2"],"当数据对象的属性被修改时":["88.1"],"当数据对象的属性被访问或修改时":["88.2"],"会捕获这些操作":["88.2"],"并触发相应的依赖":["88.2"],"这使得":["88.2"],"能够更精确地追踪数据的依赖关系":["88.2"],"从而避免不必要的更新":["88.2"],"优化与缓存":["88.2"],"引入了许多性能优化策略":["88.2"],"才能于":["89.0"],"中使用":["89.0"],"也不用写":["89.0"],"compositionapi":["89.1"],"新特性都应该写在这个函数内部":["89.1"],"组件中所用到的":["89.1"],"count3":["89.2"],"changemsg":["89.4"],"创建一个自定义的":["89.7"],"并对其依赖项跟踪和更新触发进行显式控制":["89.7"],"需求":["89.7"],"ref":["89.9","89.15"],"change1":["89.10"],"test1":["89.10"],"按钮":["89.13","89.14"],"vue":["89.15","91.13","91.14","91.17","110.6"],"参数二":["89.16"],"数据改变时触发的回调函数":["89.16"],"newval":["89.16","89.17"],"oldval":["89.16","89.17"],"name2":["89.20"],"不用直接指定要监视的数据":["89.21"],"回调函数中使用的哪些响应式数据就监视哪些响应式数据":["89.21"],"用于清除":["89.22"],"effect":["89.22"],"侦听器会被链接到该组件的生命周期":["89.23"],"并在组件卸载时自动停止":["89.23"],"sync":["89.24"],"组合式api":["89.25"],"是没有":["89.25"],"update":["89.27","112.2"],"这个周期方法被移除":["89.27"],"beforeupdate":["89.28"],"更新之前":["89.28"],"为":["89.29"],"modifiers":["89.29"],"包含修饰符":["89.29"],"的对象":["89.29"],"onresize":["89.31"],"window":["89.31"],"innerwidth":["89.31"],"bus":["90.1"],"可以实现任意组件通信":["90.1"],"pubsub":["90.1"],"发布订阅模式实现任意组件通信":["90.1"],"vuex":["90.1"],"接受的数据类型":["90.2"],"默认参数":["90.2"],"接受默认数据":["90.2"],"事件可以让用户与网页进行交互":["90.3"],"handler1":["90.4"],"我要传递多个参数":["90.4"],"方法执行":["90.5"],"传递一个数组":["90.5"],"数组元素即为将来组件需要触发的自定义事件类型":["90.5"],"此方执行会返回一个":["90.5"],"emit":["90.5"],"方法用于触发自定义事件":["90.5"],"当点击按钮的时候":["90.5"],"事件回调内部调用":["90.5"],"方法去触发自定义事件":["90.5"],"写法没有":["90.6"],"那么在":["90.6"],"想实现全局事件的总线功能就有点不现实啦":["90.6"],"vue3":["90.7","94.1","110.6"],"中一个组件可以通过使用多个":["90.7"],"让父子组件多个数据同步":["90.7"],"下方代码相当于给组件":["90.7"],"success":["90.8"],"size":["90.8"],"small":["90.8"],"标题":["90.8"],"但是需要注意":["90.9"],"如果想让父组件获取子组件的数据或者方法需要通过":["90.9"],"defineexpose":["90.9"],"对外暴露":["90.9"],"方法用于提供数据":["90.10"],"此方法执需要传递两个参数":["90.10"],"分别提供数据的":["90.10"],"也是集中式管理状态容器":["90.11"],"b替换":["90.12"],"填入组件b部分的结构":["90.12"],"作用域插槽":["90.12"],"可以理解为":["90.12"],"子组件数据由父组件提供":["90.12"],"但是子组件内部决定不了自身结构与外观":["90.12"],"样式":["90.12"],"子组件":["90.12"],"代码如下":["90.12"],"components":["91.2","163.3","165.7"],"更加友好":["91.5"],"在使用":["91.5"],"right":["91.6","144.6"],"fancybutton":["91.10"],"msg":["91.12","91.16","122.11"],"插槽里的节点":["91.13"],"异步组件":["91.13"],"自定义classname等等":["91.14"],"comp":["91.15"],"v":["91.15","94.4"],"选项已移除":["91.17"],"父组件":["91.17"],"modelvalue简写为v":["91.17"],"cli":["92.2"],"babel":["92.4","110.7"],"alongside":["92.4"],"linter":["92.4"],"formatter":["92.4"],"config":["92.4","97.4","98.4","110.11"],"动态导入":["92.5"],"hmr":["92.5"],"速度快到惊人的":["92.5"],"构建的项目模板":["92.6"],"latest":["92.7"],"位贡献者":["93.1"],"内存减少54":["93.2"],"使用proxy代替defineproperty实现数据响应式":["93.2"],"provide与inject":["93.3"],"新组件":["93.3"],"fragment":["93.3"],"的改进":["94.1"],"不好定义了需要在开启一个":["94.3"],"可以用在浏览器和":["97.1"],"axios":["97.2"],"在发送请求之前做些什么":["97.4"],"对请求错误做些什么":["97.4"],"提出了要求":["97.5"],"但没有收到答复":["97.5"],"是浏览器中xmlhttprequest的一个实例":["97.5"],"请求头设置":["98.1"],"一般可以在请求头中携带公共的参数":["98.1"],"baseurl":["98.2"],"application":["98.3"],"urlencoded":["98.3"],"请求超时":["98.4"],"系统已存在相同数据":["98.4"],"imort":["98.6"],"getaction":["98.6"],"getaction方法所在的文件路径":["98.6"],"省时又省力他不香吗":["98.8"],"前端架构带你":["98.8"],"local":["99.1"],"比较两个版本的差异":["99.7"],"以前者为基准看后者的变化":["99.7"],"表示最后一次":["99.7"],"commit":["99.7"],"对应的版本":["99.7"],"查看所有分支的版本历史":["99.8"],"all":["99.8"],"以图形形式展示版本历史":["99.8"],"强制删除本地分支":["99.12"],"分":["99.14"],"做":["99.14"],"以便把":["99.14"],"合":["99.14"],"到当前分":["99.14"],"amend":["99.16"],"合并":["99.16"],"删除远程仓库别名":["99.18"],"克隆远程仓库指定分支到本地":["99.19"],"等同于推送一个空的本地分支到远程分支":["99.21"],"表示删除指定的远程分支":["99.21"],"等同于":["99.21"],"scm":["100.1"],"bush":["100.2"],"here":["100.2"],"email":["100.3"],"xxxx":["100.3"],"xxx":["100.4","165.11"],"直接按三次回车":["100.4"],"ssh个人设置":["100.5"],"也可以使用es6的字符串模板":["101.1"],"decimal":["101.2"],"使用构造函数":["101.3"],"创造的对象不是布尔值":["101.3"],"第二种方式是使用数组泛型":["101.4"],"当赋值或访问一个已知索引的元素时":["101.5"],"会得到正确的类型":["101.5"],"字符串枚举":["101.6"],"warning":["101.8"],"test":["101.9","122.2"],"num1":["101.9"],"throw":["101.10"],"只会抛出异常没有返回值":["101.11"],"定义一个一个函数得到一个数字或字符串值的长度":["101.12"],"getlength":["101.12"],"strlength2":["101.14"],"可以定义类":["102.0"],"基本上":["102.0"],"es6的class可以看作只是一个":["102.0"],"我":["102.1"],"了":["102.1"],"创建类的实例":["102.1"],"cry":["102.2"],"可以让你定义的变量":["102.4"],"内部访问":["102.4"],"代表定义的变量私有的只能在内部访问":["102.5"],"zs":["102.6"],"静态函数":["102.8"],"同样也是不能通过this":["102.8"],"去调用":["102.8"],"也是通过类名去调用":["102.8"],"constructor":["102.9"],"super":["102.11"],"的类型":["103.0"],"fn":["103.2","106.7"],"str":["104.2","120.8","120.10"],"树哥":["104.5"],"interface":["104.7","106.1"],"len":["104.7"],"它是":["105.1"],"ts属于":["105.2"],"强类型":["105.2"],"语言":["105.2"],"ts不能直接执行":["105.3"],"需要先编译成":["105.3"],"支持最新的javascript新特特性":["105.5"],"周边生态繁荣":["105.5"],"typescript就并不是那么顺畅":["105.6"],"ts":["105.7","110.8"],"indexts":["105.7"],"升成tsconfig":["105.7"],"和行为":["106.0"],"必须与接口保持一致":["106.1"],"any":["106.6","108.0","110.8"],"类":["107.0"],"严格模式下":["107.1"],"不可以":["107.1"],"bigobject":["107.1"],"表达式值为":["108.0"],"类型的时候":["108.0"],"生成一个错误":["108.0"],"alwaysstrict":["108.0"],"以严格模式检查每个模块":["108.0"],"并在每个文件里加入":["108.0"],"use":["108.0","110.11","122.14"],"额外的检查":["108.0"],"nounusedlocals":["108.0"],"有未使用的变量时":["108.0"],"抛出错误":["108.0"],"nounusedparameters":["108.0"],"有未使用的参数时":["108.0"],"noimplicitreturns":["108.0"],"并不是所有函数里的代码都有返回值时":["108.0"],"nofallthroughcasesinswitch":["108.0"],"abc":["109.1"],"不能将类型":["109.1"],"s1":["109.2"],"commitlint":["110.2"],"来统一提交规范":["110.2"],"preinstall":["110.2"],"pnpm":["110.3"],"内部潜在的":["110.4"],"bug":["110.4"],"极大的优化了性能":["110.4"],"扩展了使用场景":["110.4"],"被誉为":["110.4"],"最先进的包管理工具":["110.4"],"对象不能出现重复key":["110.6"],"recommended":["110.6"],"vue3语法规则":["110.6"],"plugin":["110.6"],"essential":["110.6"],"ts语法规则":["110.6"],"typescript":["110.6"],"要为特定类型的文件指定处理器":["110.6"],"查找违规风格指南":["110.7"],"该解析器允许使用eslint校验所有babel":["110.7"],"io":["110.8"],"unused":["110.8"],"vars":["110.8"],"禁止定义未使用的变量":["110.8"],"prefer":["110.8"],"expect":["110.8"],"禁止使用":["110.8"],"ignore":["110.8"],"explicit":["110.8"],"全局样式文件中没有办法使用":["110.9"],"变量":["110.9"],"因此需要给项目中引入全局变量":["110.9"],"variable":["110.9"],"创建一个":["110.9"],"system":["110.10"],"系统管理员":["110.10"],"用户登录接口":["110.10"],"login":["110.10"],"请求地址":["110.10"],"请求方式":["110.10"],"response":["110.10","110.11"],"响应拦截器":["110.11"],"处理网络错误":["110.11"],"logout":["110.12"],"登录接口":["110.12"],"reqlogin":["110.12"],"qrouter":["111.0"],"加上这一句":["111.0"],"找指定路径下的文件":["111.0"],"d":["111.1"],"下面列出了一些常用的":["112.0"],"向表中添加一个新的列":["112.1"],"set":["112.2","160.1","164.3"],"identified":["112.3"],"by":["112.3"],"password":["112.3","122.2"],"创建一个新用户":["112.3"],"alter":["112.3"],"的数据类型":["113.0"],"每个数据类型都有特定的存储需求和可接受的值范围":["113.0"],"bigint":["113.1"],"double":["113.2"],"双精度浮点数":["113.2"],"7976931348623157e":["113.2"],"timestamp":["113.4"],"存储时间戳":["113.4"],"范围从":["113.4"],"mysql":["113.5"],"还提供了其他特定用途的数据类型":["113.5"],"如二进制类型":["113.5"],"用户可以对数据库进行各种操作":["114.0"],"包括创建":["114.0"],"读取":["114.0"],"更新和删除数据":["114.0"],"数据库的优势包括":["114.0"],"索引和缓存等技术":["114.1"],"提供了快速的数据读写性能":["114.1"],"丰富的功能":["114.1"],"mysql提供了丰富的功能和工具":["114.1"],"包括存储过程":["114.1"],"触发器":["114.1"],"插入数据":["116.0"],"查询数据":["116.0"],"database":["116.2","122.2"],"将":["116.3","116.5","116.6","122.14"],"datatype":["116.4"],"column2":["116.4"],"value2":["116.5","116.7"],"where":["116.6","116.7","116.8","122.3"],"condition":["116.6","116.7","116.8"],"init":["117.1"],"它不会像网络浏览器那样解释结果":["117.2"],"具体来说":["117.2"],"它不会生成视觉渲染":["117.2"],"top250":["117.3"],"each":["117.4"],"star":["117.4"],"info":["117.4"],"bd":["117.4"],"pianista":["117.6"],"sull":["117.6"],"oceano":["117.6"],"p2574551676":["117.6"],"三傻大闹宝莱坞":["117.6"],"idiots":["117.6"],"p579729551":["117.6"],"放牛班的春天":["117.6"],"les":["117.6"],"choristes":["117.6"],"p2884280708":["117.6"],"机器人总动员":["117.6"],"wall":["117.6"],"开放":["118.0"],"极简的":["118.0"],"query":["118.2"],"可以获取到客户端发送过来的查询参数":["118.2"],"目录下的静态资源":["118.3"],"localhost":["118.3"],"images":["118.3"],"bg":["118.3"],"向外导出路由对象":["118.4"],"module":["118.4"],"exports":["118.4","121.8"],"注册路由模块":["118.4"],"在注册路由之前注册中间件":["118.5"],"错误级别中间件除外":["118.5"],"中间件可连续调用多个":["118.5"],"调用了第2个全局中间件":["118.6"],"page":["118.7"],"发生了错误":["118.8"],"listen":["118.8"],"server":["118.8"],"running":["118.8"],"require":["118.10"],"主要在服务器端进行配置":["118.11"],"客户端浏览器无须做任何额外的配置":["118.11"],"即可请求开启了":["118.11"],"ccess":["118.12"],"对额外的请求头进行声明":["118.12"],"否则这次请求会失败":["118.12"],"viewport":["118.14"],"在浏览器与服务器正式通信之前":["118.15"],"浏览器会先发送":["118.15"],"option":["118.15"],"运行时环境":["119.1"],"基于":["119.1"],"express":["119.1"],"可以快速构建":["119.1"],"web":["119.1","122.12"],"这是因为":["119.2"],"采用的是异步的":["119.2"],"非阻塞的模型":["119.2"],"这里所谓的":["119.2"],"可能会出现服务不可用的情况":["119.3"],"写文件":["120.1"],"不存在则创建":["120.1"],"存在则覆盖原有内容":["120.1"],"wx":["120.1"],"文件存在打开失败":["120.1"],"failed":["120.3","120.6"],"可写流打开了":["120.4"],"可写流关闭了":["120.4"],"要读取一个可读流中的数据":["120.4"],"要为可读流绑定一个data事件":["120.4"],"data事件绑定完毕自动开始读取数据":["120.4"],"err":["120.6"],"流关闭了":["120.7"],"通过ws向文件中输出内容":["120.7"],"因此大小一旦确定就不能修改":["120.8"],"常用方法":["120.8"],"encoding":["120.8"],"直接提供完整的路径":["120.9"],"从而防止路径动态拼接的问题":["120.9"],"renamesync":["120.10"],"监视文件更改":["120.10"],"watchfile":["120.10"],"filename":["120.10"],"listener":["120.10"],"hello前端":["120.10"],"buf":["120.10"],"buffer":["120.10"],"官方提供的":["120.11","120.15"],"readfile":["120.12"],"fullname":["120.13"],"设置":["120.16"],"响应头":["120.16"],"模块的内部数据":["121.2"],"实现是私有的":["121.2"],"实现按需加载":["121.3"],"第三方模块":["121.5"],"只能在当前模块内被访问":["121.6"],"指向的对象":["121.7"],"默认情况下":["121.7"],"是对外的接口":["121.8"],"提高模块加载效率":["121.9"],"按确切的文件名加载":["121.11"],"补全":["121.11","121.21"],"tools":["121.12"],"则":["121.12","121.23"],"会按以下顺序查找":["121.12","121.22"],"文件":["121.13","165.2"],"的内置模块仅提供了一些底层的":["121.15"],"现在也有其他的包管理工具":["121.16"],"版本号":["121.18"],"入口文件":["121.18"],"核心代码":["121.18"],"用户自定义模块":["121.19"],"会按顺序分别尝试加载以下的文件":["121.21"],"按照确切的文件名进行加载":["121.21"],"入口不存在或无法解析":["121.23"],"将会试图加载目录下的":["121.23"],"快捷方式":["122.3"],"页面最终在浏览器里生成":["122.6"],"缺点":["122.6"],"不利于":["122.6"],"seo":["122.6"],"完整的":["122.6"],"交互性强":["122.7"],"无需考虑":["122.7"],"status":["122.11"],"done":["122.11"],"从":["122.11"],"取数据":["122.11"],"token":["122.12"],"是真正的用户信息":["122.13"],"加密后的字符串":["122.13"],"是安全性相关部分":["122.13"],"保证":["122.13"],"安全性":["122.13"],"三者使用":["122.13"],"分隔":["122.13"],"authorization":["122.14"],"字段":["122.14"],"字符串发送到服务器进行身份认证":["122.14"],"服务器可以通过":["122.14"],"中间件将客户端发送过来的":["122.14"],"解析还原成":["122.14"],"unless":["122.14"],"指定哪些接口无需访问权限":["122.14"],"cache":["123.0"],"clean":["123.0"],"检查过时的依赖项":["123.0"],"outdated":["123.0","124.3"],"安装全局依赖项":["123.0"],"包管理器":["124.0"],"允许开发者轻松地安装":["124.1"],"更新":["124.1","125.6"],"也会自动安装":["124.2"],"你可以通过在终端中运行以下命令来检查是否已安装":["124.2"],"检查过时的包":["124.3"],"run":["124.3"],"运行在":["124.3"],"在创建项目时":["124.4"],"可以提供一些信息":["124.4"],"如项目名称":["124.4"],"当其他开发者获得你的项目时":["124.5"],"他们可以使用":["124.5"],"命令":["124.6"],"你可以将自己的包发布到":["124.6"],"官方网站":["125.1"],"shell":["125.2"],"可以创建一个或多个":["125.3"],"命令生成":["125.4"],"并包含了你的包的基本信息":["125.4"],"publish":["125.5"],"这将会将你的包上传到":["125.5"],"package":["125.6","125.7","165.11"],"json":["125.6","165.11"],"npm":["126.1","165.3"],"全局安装":["126.1"],"打开终端并运行以下命令":["126.1"],"是你要添加的包的名称":["126.2"],"移除依赖项":["126.2"],"如果你想移除不再需要的依赖项":["126.2"],"remove":["126.2"],"drawing":["128.0","130.0","131.0","134.0","136.0","137.0"],"临江门":["128.1"],"3号口出":["128.1"],"这里是老重庆的印记":["128.2"],"漫步石板路的小巷之间":["128.2"],"是体验山城韵味的最佳方式之一":["128.2"],"一面是烟火人家老重庆":["128.2"],"对面滚滚而逝的长江":["128.2"],"老厂房既保留了独栋旧楼原有的工业风貌":["128.3"],"又加入了现代设计的艺术风格":["128.3"],"老与新的糅合":["128.3"],"让这里独具魅力":["128.3"],"艺术感与怀旧感相伴相生":["128.3"],"早9晚6":["128.4"],"下午5点后":["128.4"],"招牌酸奶西米露":["128.5"],"原味":["128.5"],"红豆":["128.5"],"绿豆三种口味":["128.5"],"蓝莓刨酸奶":["128.5"],"front":["130.1"],"南京站地铁3号线":["130.1"],"往":["130.1"],"林场方向":["130.2"],"南京林业大学新庄":["130.2"],"下车":["130.2"],"步行":["130.2","130.4","135.4","135.5"],"1km":["130.2","135.4"],"到达":["130.2"],"云锦路":["130.3"],"号口":["130.3"],"之后步行":["130.3"],"米到达终点":["130.3"],"南京大屠杀遇难同胞纪念馆":["130.3"],"2km":["130.4"],"中山陵停车场":["130.4"],"路":["130.4","131.5","135.2","135.3","137.5"],"中山码头方向":["130.4"],"号线":["130.5"],"迈皋桥方向":["130.5"],"站到":["130.5","137.1"],"车费大概":["131.1"],"大概":["131.1"],"小时车程":["131.1"],"可以":["131.1"],"东方女神":["131.2"],"西海岸":["131.3"],"下午":["131.3"],"奥林至尊东上车乘坐":["131.4"],"站到槠溪老街下车之后步行":["131.4"],"米到达":["131.4","135.3"],"下午步行到槠溪老街乘坐":["131.4"],"公交西站方向":["131.5"],"腊肠蛋黄糯米饭":["132.1"],"糊羹":["132.1"],"芋泥麻糍":["132.1"],"竹筒奶茶":["132.1"],"鲲茶":["132.1"],"绿豆饼":["132.1"],"汤泡饭":["132.2"],"粉蒸肉":["132.2"],"咸蛋黄糯米饭":["132.2"],"咸菜笋馅的包子":["132.2"],"皮薄馅大的烧饼":["132.2"],"甜豆花":["132.2"],"野生小板栗":["132.2"],"之后可以在绳金塔美食街吃东西":["132.3"],"自驾40min左右":["132.3"],"需要携带":["132.4"],"小程序":["132.4"],"进行预约":["132.4"],"南昌市青云谱区青云谱路259号":["132.4"],"火车东站d":["134.1"],"打卡景点":["134.2"],"4路":["134.3"],"转塘公交站方向":["134.3"],"宋城东":["134.3"],"路线":["134.4"],"站内换乘":["135.1"],"天河机场方向":["135.1"],"米到":["135.2"],"沿江大道兰陵路":["135.2"],"乘坐":["135.2"],"发展大道红旗建材家居方向":["135.2"],"鲁磨路磨山方向":["135.3"],"下步行":["135.3"],"武汉大学":["135.4"],"岳家嘴":["135.5"],"口":["135.5"],"出":["136.1"],"自驾游":["136.1"],"car":["136.1"],"开放时间":["136.2","136.4"],"alarm":["136.2","136.4"],"clock":["136.2","136.4"],"全天":["136.2"],"橘子洲观光车":["136.2"],"晚":["136.2"],"岳麓书院就在校园内":["136.3"],"湖南大学的小吃一条街":["136.3"],"需要身份证":["136.4"],"font":["136.4"],"虾小龙老长沙龙虾馆":["136.5"],"装修风格有种旧时光里的味道":["136.5"],"推荐口味虾":["136.5"],"虾汤汁拌面简直绝了":["136.5"],"烧烤":["136.5"],"客串出品":["136.5"],"都正街店":["136.5"],"城北湘江世纪城夜宵街":["136.6"],"来长沙城北吃夜宵":["136.6"],"湘江世界城夜宵街十分醒目易找":["136.6"],"沿着湘江北路一直走":["136.6"],"在福元路大桥下就能看到明晃晃的一排夜宵店":["136.6"],"人气也十分红火":["136.6"],"来这里主要是吃烧烤":["136.6"],"吃口味虾的好去处":["136.6"],"这里有三毛烧烤":["136.6"],"科技中学":["137.2"],"第一码头方向":["137.2"],"胡里山":["137.2"],"下车步行":["137.2"],"海底世界":["137.3"],"日光岩":["137.3"],"港仔后沙滩":["137.3"],"菽庄花园":["137.3"],"皓月园":["137.3"],"然后走到":["137.4"],"博物馆":["137.4"],"步行150m":["137.4"],"路区间":["137.5"],"双十中学镇海校区方向":["137.5"],"它提供了许多":["138.1"],"访问":["138.3"],"轴和":["138.3"],"2d":["138.4","152.1"],"webgl":["138.4"],"它们都通过特定的方法和属性来控制视觉效果":["138.4"],"可以简单地绘制圆形":["138.5"],"矩形":["138.5"],"线条等图形":["138.5"],"在实现过程中":["138.6","138.7"],"您可以使用":["138.6"],"来监控用户的交互":["138.6"],"从而创建动画效果":["138.7"],"您可以通过原生":["138.7"],"translate":["139.0"],"图像平移":["139.0"],"上面代码会显示一个顺时针倾斜":["139.1"],"如果缩放因子为":["139.2"],"就表示图像没有任何缩放":["139.2"],"如果为":["139.2"],"则表示方向翻转":["139.2"],"下面是一个例子":["139.4"],"只有源图像外的目标图像部分会被显示":["140.1"],"lighter":["140.1"],"显示源图像":["140.1"],"目标图像":["140.1"],"copy":["140.1"],"忽略目标图像":["140.1"],"xor":["140.1"],"getcontext":["141.1"],"当前浏览器不支持canvas":["141.1"],"请下载最新的浏览器":["141.1"],"位置的直线":["141.2"],"linewidth":["141.2"],"设置或返回当前的线条宽度":["141.2"],"linejoin":["141.2"],"getlinedash":["142.1"],"返回一个数组":["142.1"],"表示虚线里面线段和间距的长度":["142.1"],"setlinedash":["142.1"],"用于指定虚线里面线段和间距的长度":["142.1"],"context":["142.1"],"beginpath":["142.1","146.2"],"fillstyle":["142.2"],"fillrect":["142.2"],"定义了渐变样式":["142.2"],"以后":["142.2"],"将这个样式指定给":["142.2"],"就会生成以这个样式填充的矩形区域":["142.2"],"该方法的返回值是一个":["142.3"],"canvaspattern":["142.3"],"src":["142.3"],"stroke":["144.2"],"显示路径":["144.2"],"closepath":["144.2","149.3"],"右眼":["144.3"],"时会填充为三角形":["144.4"],"onload":["144.5"],"第一种绘制图片的方式":["144.5"],"参数1图片对象":["144.5"],"3将图片渲染到画布的水平和垂直位置":["144.5"],"文本对齐选项":["144.6"],"center":["144.6"],"end":["144.6"],"文本基线对齐":["144.6"],"destination":["146.2"],"out":["146.2"],"onmousemove":["146.2","149.3"],"arc":["146.2"],"pagex":["146.2"],"getseconds":["147.3"],"绘制秒针":["147.3"],"onmouseup":["149.3"],"lineto":["149.3","158.5"],"clearbtn":["149.4"],"橡皮擦":["149.4"],"isca":["149.4"],"鼠标进入移出事件":["151.1"],"pointerenter":["151.1"],"stage":["151.2"],"addchild":["151.2"],"用于创建交互式":["152.1"],"它还支持使用":["152.3"],"canvas":["152.3"],"使开发者能够快速上手并高效地创建图形和动画":["152.4"],"纹理":["152.5"],"texture":["152.5"],"并提供了针对移动设备的优化":["152.6"],"创建一个精灵":["152.7","157.2","160.1","160.2"],"sprite":["152.7","160.1","160.2"],"0xff0000":["153.2"],"beginfill":["153.2","154.2"],"0x66ccff":["153.2"],"drawrect":["153.2"],"fontfamily":["154.1"],"楷体":["154.1"],"fontsize":["154.1"],"fill":["154.1"],"graphics":["154.2"],"drawcircle":["154.2"],"360buyimg":["156.1"],"pop":["156.1"],"jfs":["156.1"],"t1":["156.1"],"5c1b0581e1fa6c1c3":["156.1"],"58519cee2a0039e0":["156.1"],"interactive":["156.2"],"distance":["156.3"],"虚化":["156.3"],"innerheight":["157.1"],"backgroundcolor":["157.1"],"0x1099bb":["157.1"],"vite":["157.2"],"svg":["157.2"],"旋转45度":["157.3"],"rotation":["157.3"],"delta":["157.4"],"endfill":["158.1"],"drawroundedrect":["158.3"],"textures":["160.1","160.2"],"创建容器":["160.1","160.2"],"锚点":["160.1"],"anchor":["160.1"],"加载完成后创建精灵":["160.2"],"then":["160.2"],"smil":["161.1"],"等其他网络标准无缝衔接":["161.1"],"y1":["161.3"],"rx":["161.6"],"灯光":["162.0"],"相机等":["162.0"],"相机":["162.0"],"camera":["162.0"],"相机定义了观察者在场景中看到的位置和视角":["162.0"],"提供了不同类型的相机":["162.0"],"包括透视相机":["162.0"],"perspectivecamera":["162.0"],"和正交相机":["162.0"],"orthographiccamera":["162.0"],"可根据需求进行选择":["162.0"],"几何体":["162.0"],"geometry":["162.0"],"几何体是":["162.0"],"scene1":["163.3"],"examples":["163.6"],"orbitcontrols":["163.7"],"renderer":["163.8"],"单独设置某个轴的位移":["164.2"],"从无到有的过程":["165.0"],"file":["165.1"],"新建文件夹":["165.1"],"git":["165.2"],"如果下载了":["165.2"],"可以在当前的文件夹右键":["165.2"],"选择":["165.2"],"public":["165.6"],"文件夹用于静态资源的引用":["165.6"],"目录结构如下":["165.6"],"快速开始":["165.7"],"guide":["165.7"],"features":["165.7"],"icon":["165.7"],"右上角的导航栏":["165.9"],"关于":["165.9"],"导航标签的名字":["165.9"],"这种格式是有下拉菜单的版本":["165.9"],"关于1":["165.9","165.10"],"默认是不是展开":["165.10"],"repo":["165.11"],"push":["165.11"],"git仓库地址":["165.11"],"配置":["165.11"]},{"0":["4.14","14.2","20.21","33.2","34.6","69.8","83.3","90.2","101.5","118.8","144.5","149.3","156.2","156.3","160.2","161.8"],"1":["4.12","5.6","18.14","20.11","49.3","67.13","67.14","78.22","79.3","101.5","104.6","108.0","120.7","120.12","151.1","156.3"],"2":["12.5","21.17","32.9","34.10","56.4","58.6","65.4","90.2","104.6","113.2","153.2","154.2","160.1","160.2"],"3":["4.5","7.1","9.1","12.5","16.3","16.4","21.2","21.17","28.2","29.11","34.2","48.7","57.3","74.3","75.0","89.24","92.6","99.1","125.6"],"4":["16.12","17.7","21.11","43.8","47.1","76.3","87.3","88.1","92.6","98.1","99.14","99.18","122.3","128.2","128.3","130.4","137.5","157.3"],"5":["5.10","17.7","38.0","54.9","65.3","88.2","103.4","135.2","136.4","136.5","142.4","149.3","160.1","160.2","162.0"],"6":["6.25","21.11","45.4","103.4","108.0","128.5","130.1","130.3","132.4","134.1","136.3","137.2"],"7":["6.25","18.4","99.8","110.7","120.10","128.5"],"8":["47.1","110.3","120.16","128.5","135.2"],"9":["13.4","113.1","136.3","136.4"],"10":["12.6","67.9","158.3"],"13":["120.10"],"15":["54.3","131.5"],"16":["111.1","118.8"],"18":["20.5","33.7","35.1","67.8","102.1","104.5","132.3"],"19":["110.7","132.1"],"20":["34.10","137.2","137.4","146.2","147.3"],"21":["67.9"],"22":["137.2","137.4"],"24":["67.8"],"25":["12.2","71.1"],"29":["34.9"],"30":["35.2","70.2","136.3","161.7"],"32":["137.4"],"40":["28.24"],"45":["137.4"],"48":["137.4"],"50":["130.4","139.3","139.4","158.5","161.4","161.7","161.9"],"63":["163.9"],"71":["163.9","163.12"],"73":["163.12"],"80":["29.2"],"87":["164.5"],"99":["28.2","29.2","161.9"],"100":["28.24","139.4","142.1","144.5","154.2"],"111":["30.3"],"123":["98.6","104.4"],"127":["118.8"],"145":["120.10"],"180":["67.13"],"188":["136.2"],"200":["43.6","142.1","158.5"],"201":["110.10"],"213":["106.6"],"223":["113.1"],"250":["145.1","161.7"],"299":["52.5"],"300":["137.2","140.1","143.0"],"308":["113.2"],"350":["145.2"],"372":["113.1"],"401":["110.11"],"404":["86.12"],"500":["98.4","130.3","130.4","144.4"],"501":["98.4"],"502":["98.4"],"600":["42.2","93.1"],"775":["113.1"],"800":["42.2"],"808":["113.1"],"854":["113.1"],"1234":["91.11"],"2000":["20.1"],"2018":["13.4"],"2600":["93.1"],"9000":["98.2"],"46539":["67.7"],"31250000":["34.2"],"margin":["4.1","8.5"],"h1":["4.2","4.6","78.8","78.10","78.11"],"font":["4.4","127.2","136.3"],"weight":["4.4"],"因为没有意义":["4.5"],"交集选择器中":["4.5"],"不可能":["4.5"],"出现":["4.5"],"两个元素选择器":["4.5"],"h2":["4.6","89.7"],"h3":["4.6"],"blue":["4.7","28.7","28.8","83.3","140.1"],"green":["4.8","11.1","143.0","161.5"],"css":["4.9","5.2","5.9","6.1","6.4","6.15","6.26","56.2","77.24","117.2","118.3"],"选中div后紧紧相邻的兄弟p元素":["4.9"],"相邻兄弟选择器":["4.9"],"focus":["4.11"],"用于选择获取焦点的表单元素":["4.11"],"一般针对表单元素而言":["4.11"],"忽略其他非":["4.12"],"的元素":["4.12"],"html":["4.12","31.0","58.12","59.2","76.3","120.16","122.6"],"div":["4.12","57.2","59.1","78.4","78.19","78.22","79.3","82.5","82.6","85.4","89.15"],"p":["4.12","32.8","78.6","80.4","82.5","82.6","85.6"],"span":["4.12"],"结尾的":["4.13"],"clearfix":["4.14"],"必须要有content属性":["4.14"],"display":["4.14","5.2","6.10","6.11","6.12","6.13","6.14"],"block":["4.14"],"块级元素":["4.14"],"height":["4.14","8.2","147.4"],"不要看见该元素":["4.14"],"核心代码清除浮动":["4.14"],"visibility":["4.14"],"将子元素定义为弹性项目":["5.0"],"使它们能够在主轴和交叉轴上灵活布局":["5.0"],"容器":["5.1"],"其中的子元素就会成为":["5.1"],"container":["5.2","5.9","6.12","6.13","6.14"],"项目靠交叉轴末尾位置对齐":["5.3"],"项目在交叉轴上居中对齐":["5.3"],"baseline":["5.3"],"项目的基线对齐":["5.3"],"stretch":["5.3","5.9"],"项目会自动换行到下一行":["5.4"],"reverse":["5.4"],"弹性增长因子为1":["5.6"],"inner":["5.8"],"默认值":["5.9"],"多行项目被拉伸以填满交叉轴空间":["5.9"],"center":["5.10","8.1","127.2","154.1"],"实现水平导航栏布局":["5.10"],"响应式网格":["5.10"],"wrap":["5.10"],"和媒体查询创建响应式网格布局":["5.10"],"布局在":["6.1"],"容器内部的子元素即成为网格项":["6.2"],"1fr":["6.3","6.6"],"2fr":["6.3","6.6"],"定义三列":["6.3"],"第二列是第一列的两倍宽度":["6.3"],"item":["6.4","6.15","6.16","6.30","21.8","28.28","28.29","90.12","110.10"],"以下是一些常用的":["6.5"],"area":["6.7"],"header":["6.8","118.12"],"10px":["6.9"],"template":["6.11","89.15","91.5"],"grid":["6.15"],"了解如何创建网格布局对于掌握":["6.17"],"50px":["6.18"],"定义两行":["6.18","6.19"],"第一行高度为":["6.18"],"第二行占据剩余空间":["6.18"],"100px":["6.19","9.0"],"每行高度为100px":["6.19"],"在上述示例中":["6.19","45.1","47.1","48.2","55.1","55.2","62.3"],"我们使用":["6.19"],"1200px":["6.20"],"可以用于创建各种复杂的网页布局":["6.21"],"nav":["6.22"],"navigation":["6.22"],"sidebar":["6.23","6.24"],"中两种常用的布局模型":["6.26"],"适用于单一方向的布局":["6.27"],"即只控制主轴或交叉轴的布局":["6.27"],"支持网格项在主轴上的换行":["6.28"],"对齐和排序":["6.28"],"适用于弹性布局需求":["6.28"],"我们可能会遇到一些常见问题":["6.29"],"nth":["6.30"],"child":["6.30"],"可以使用":["6.31","81.7","165.1"],"在使用":["6.32"],"实现一维和二维布局的组合效果":["6.33"],"使用媒体查询和响应式设计":["6.33"],"实现在不同设备和屏幕尺寸下的布局适配":["6.33"],"通配选择器":["7.0"],"skyblue":["8.1"],"text":["8.1","77.23","83.5","113.3","120.16","120.17"],"align":["8.1","154.1"],"width":["8.2","129.0","132.0","133.0","135.0"],"400px":["8.2"],"200px":["8.3"],"items":["8.7"],"垂直居中":["8.7"],"place":["8.8"],"content":["8.8","9.3"],"border":["9.0"],"overflow":["9.1","9.2"],"hidden":["9.1","9.2"],"orient":["9.2"],"vertical":["9.2"],"检索伸缩盒子对象的子元素的排列方式":["9.2"],"after":["9.3"],"absolute":["9.3"],"right":["9.3"],"corner":["10.0"],"滚动条上的滚动滑块":["10.0"],"size":["11.2","120.8","127.2"],"sayhello":["12.1","12.2","15.13"],"console":["12.1","14.5","15.8","15.9","15.11","15.16","15.19","15.21","16.3","16.6","16.7","18.20","21.13","21.14","22.6","22.9","28.9","28.12","28.13","28.17","28.31","28.32","29.8","29.9","33.2","33.6","49.1","50.3","54.6","54.7","63.2","64.2","65.4","73.6","73.7","73.8","73.12","73.13","73.16","73.19","76.4","89.4","89.18","89.19","89.20","102.1","102.10","102.11","104.4","120.10","120.13","122.14","146.2"],"log":["12.1","12.5","15.8","15.9","15.11","15.19","16.7","16.8","18.12","18.20","19.2","19.4","21.10","21.13","21.14","22.6","22.9","28.9","28.12","28.13","28.14","28.17","28.23","28.32","29.9","33.2","33.6","43.9","49.1","50.3","54.6","54.7","65.4","67.1","73.6","73.8","73.10","73.14","76.4","84.2","89.4","89.17","89.18","89.19","89.20","102.1","102.10","102.11","120.10","120.13","122.14"],"你好":["12.1","12.2"],"子类的方法":["12.3"],"introduce":["12.3"],"this":["12.4","21.9","26.3","48.3","58.5","77.11","78.20","79.9","80.4","83.6","102.11"],"name":["12.4","15.23","20.1","73.9","73.17","89.13","91.17","116.2"],"定义了脚本语言的语法规范":["13.2"],"类型":["13.2"],"操作符":["13.2"],"对象和一系列的内置函数等内容":["13.2"],"的扩展语言":["13.3"],"在浏览器环境中的组成关系":["13.3"],"web":["13.3","118.0","120.15"],"用于遍历对象的键值对和值":["13.4"],"string":["13.4","80.14","103.2","104.2","104.3","106.1"],"padstart":["13.4","18.5"],"padend":["13.4","18.5"],"用于字符串填充":["13.4"],"async":["13.4"],"await":["13.4"],"语法":["13.4","17.10"],"更方便地处理异步操作":["13.4"],"getownpropertydescriptors":["13.4"],"返回对象属性的描述符":["13.4"],"es9":["13.4"],"es2018":["13.4"],"清空map":["14.2"],"初始化map":["14.2"],"initialmap":["14.2"],"key1":["14.2"],"value1":["14.2","73.5"],"key2":["14.2"],"value2":["14.2","73.5"],"遍历map":["14.2"],"函数将":["14.4"],"对象转回去":["14.4"],"merged":["14.6"],"es6":["15.1","20.3","72.2"],"引入了原生的模块化支持":["15.1"],"模块之间通过导入":["15.2"],"import":["15.2","86.10"],"测试和重构模块都更加方便":["15.4"],"我们可以将模块中的变量":["15.6"],"函数或类导出":["15.6"],"const":["15.7","15.14","15.18","17.10","43.3","48.7","53.8","60.1","69.3","69.10","76.3","78.4","78.20","80.10","80.11","89.6","97.3","102.2","106.4","106.5","110.10"],"hello":["15.9","16.12","85.16"],"输出":["15.13","15.19","19.2","19.4","29.9","53.3","53.4","70.2","71.1","71.2","73.11"],"person":["15.14","20.1"],"new":["15.14","15.18","27.1","69.4","70.2","70.3","71.0","85.13","101.3","102.1","102.7","102.10","112.3"],"from":["15.17","15.22","21.4","21.5","86.8"],"else":["15.23","54.5","78.14","91.15","98.3","149.3"],"module2":["15.23"],"模块化为前端开发带来了巨大的便利性和效率":["15.28"],"是":["15.28","80.15","82.7"],"开发的重要进步之一":["15.28"],"即":["16.1","108.0"],"使用":["16.5","81.5","161.1","165.11"],"删除不存在的成员":["16.5"],"什么都不会发生":["16.5"],"也不会报错":["16.5"],"entry":["16.6"],"of":["16.6"],"next":["16.8","21.12","86.8"],"value":["16.8","20.22","73.11","89.8","90.10"],"set":["16.9","29.11","34.12","49.6","153.2","158.1","160.2"],"h":["16.12","87.3"],"返回":["16.15"],"true":["16.15","21.1","29.3","43.4","89.29","151.2","152.7"],"false":["16.15","73.15","158.4"],"解构成数组":["16.15"],"过滤":["16.15"],"就是":["17.4"],"这种写法不能省略第二个参数":["17.5"],"如果结合函数参数的默认值":["17.5"],"就可以省略第二个参数":["17.5"],"这时":["17.5","17.6","32.11"],"就出现了双重默认值":["17.5"],"上面代码中":["17.6","139.4"],"有默认值的参数都不是尾参数":["17.6"],"无法只省略该参数":["17.6"],"而不省略它后面的参数":["17.6"],"除非显式输入":["17.6"],"如果传入":["17.6"],"将触发该参数等于默认值":["17.6"],"null":["17.6","20.21","48.6","76.10","76.14","78.2","110.8"],"则没有这个效果":["17.6"],"由于":["17.7"],"的实参为":["17.7"],"所以默认值为":["17.7"],"再因为":["17.7"],"是解构赋值":["17.7"],"内为":["17.7"],"所以解构赋值启用默认值":["17.7"],"所以真正的形参为":["17.7"],"剩余语法与展开语法是相反的":["17.9"],"给出了它的完美解决方案":["17.10"],"剩余参数":["17.10"],"那剩余参数是如何在函数传参中使用的呢":["17.10"],"下面我们来看看实例":["17.10"],"add":["17.10"],"x":["17.10","32.13","42.1","101.14","118.14","154.1","156.1","160.1","160.2"],"y":["17.10","117.1","160.1","160.2"],"z":["17.10"],"args":["17.10","48.5"],"伪数组":["17.11"],"剩余参数的名字可以自定义":["17.11"],"在函数传参的时候也可以是和解构一起使用":["17.12"],"而引入的":["17.13"],"如解构赋值":["17.14"],"模板字符串等":["17.14"],"a":["17.15","21.3","31.7","106.4"],"b":["17.15","21.6","91.15","121.22"],"undefined":["17.17","20.12","34.1","35.4"],"的场景":["17.18"],"如事件处理函数":["17.18"],"就势必要在原来最后一个参数后面添加一个逗号":["17.19"],"这对于版本管理系统来说":["17.19"],"就会显示添加逗号的那一行也发生了变动":["17.19"],"这看上去有点冗余":["17.19"],"因此新的语法允许定义和调用时":["17.19"],"尾部直接有一个逗号":["17.19"],"代码块可能用不到这个参数":["17.20"],"但是":["17.20","32.4"],"为了保证语法正确":["17.20"],"还是必须写":["17.20"],"需要知道字符串的特点是一旦创建了":["18.1"],"还可通过":["18.2"],"w":["18.4"],"e":["18.14","43.6"],"replace":["18.17"],"matches":["18.18"],"pos":["18.19"],"ond":["18.20"],"来包裹字符串":["19.1"],"下面是一个实际的例子":["20.1"],"let":["20.1","102.6","102.7","102.11","146.2"],"birth":["20.1"],"01":["20.1","113.4"],"张三":["20.1"],"等同于birth":["20.1"],"增强":["20.3"],"valuea":["20.4"],"valueb":["20.4"],"age":["20.5","34.9","34.10","63.3","64.3","103.2"],"等同于":["20.6"],"getprototypeof":["20.6"],"或":["20.6"],"call":["20.6"],"方法":["20.6","53.2","61.2","106.0","121.2"],"字符串直接展开":["20.13"],"因为":["20.15","90.9"],"不能展开":["20.15"],"不同之处只有两个":["20.20"],"一是":["20.20"],"不等于":["20.20"],"二是":["20.20"],"等于自身":["20.20"],"str":["20.21","101.1"],"s":["20.21"],"t":["20.21"],"r":["20.21"],"同名属性的替换":["20.21"],"后面的直接覆盖前面的":["20.21"],"黄色":["20.21"],"key":["20.22","78.17","83.4","83.5","90.10","90.12","94.4"],"下标":["21.3"],"array":["21.4","28.21","28.31","34.8"],"值":["21.9","55.4"],"参数2":["21.15"],"可选":["21.15"],"搜索的起始索引":["21.15"],"默认为0":["21.15"],"infinity":["21.16"],"tip":["22.0","24.4","29.10","35.4","48.2","82.7","83.6","84.6","89.2"],"解构赋值是一种简洁而强大的语法":["22.0"],"它在处理数据时非常实用":["22.0"],"mp4":["23.0"],"您的浏览器不支持视频播放":["23.0"],"control":["23.0"],"属性供添加播放":["23.0"],"wav":["23.2"],"ogg":["23.3","23.10"],"在":["23.5","52.2","72.2","77.9","78.1","79.1","80.1","83.6","90.4"],"video":["23.5"],"和":["23.6","24.2","31.0","47.2","53.4","62.1","87.6","89.25","121.7"],"循环播放":["23.7"],"warning":["23.7"],"注意":["23.7","29.10","35.4","101.8","139.1"],"load":["23.8","58.11"],"type":["23.10","77.23","78.5","83.5","118.14","120.17"],"js":["23.11","33.2","43.3","89.5","108.0","117.5","120.9","121.21","140.1"],"var":["23.11","28.24","73.4"],"myvideo":["23.11"],"document":["23.11","76.3"],"getelementbyid":["23.11","76.3"],"function":["23.11","43.6","54.8","58.5","101.14","103.4","120.12","142.3"],"if":["23.11","43.6","65.5","78.13","101.12","101.14","110.10","122.11"],"paused":["23.11"],"它通过使用一系列标签和属性来描述网页的结构和内容":["24.0"],"包含了与网页相关的配置和信息":["24.1"],"如字符编码":["24.1"],"标题":["24.1"],"引入外部资源等":["24.1"],"用于创建超链接到其他网页或文档":["24.2"],"img":["24.2","92.7","117.3","117.4"],"图像标签":["24.2","26.2"],"用于插入图片到网页中":["24.2","26.2"],"ul":["24.2","58.12","83.4","90.12"],"li":["24.2","58.12","78.17","83.4","83.5","90.12"],"无序列表和列表项标签":["24.2","26.1"],"canvas":["24.3"],"绘图":["24.3"],"进一步提高网页开发技能":["24.4"],"创造出更加优秀的网页和网页应用程序":["24.4"],"总结":["24.4","74.4","80.15","82.7","83.6"],"我将在每个代码示例中添加特殊字符":["25.0"],"这是h4级别的标题":["25.1"],"h5":["25.1"],"com":["25.3","26.4","79.11","100.1","100.3","142.3"],"alt":["25.4"],"内联容器":["25.8"],"单元格1":["25.9"],"label":["25.11"],"for":["25.11","90.12","117.6"],"id":["25.13","57.2","58.12","76.3","81.14","85.4","85.12","86.9","90.12","100.4","118.2"],"contact":["25.14","81.10"],"联系方式":["25.14"],"标签可以分为两类":["26.0"],"用于创建无序列表":["26.1"],"ol":["26.1"],"br":["26.2"],"换行标签":["26.2"],"click":["26.4","76.3","89.12","90.3","90.8","91.16"],"here":["26.4","165.2"],"自定义标签的功能通常需要通过":["26.5"],"javascript":["26.5","47.2","56.5","63.5","64.5","69.6","74.4","77.23","85.13","105.1"],"来处理和操作":["26.5"],"数组中可以存放任意类型的数据":["28.0"],"例如字符串":["28.0"],"arr1":["28.1"],"zzz":["28.2"],"其他元素都是undefined":["28.2"],"需要留意的是哪些方法会对原数组产生影响":["28.5"],"哪些方法不会":["28.5"],"concat":["28.6","47.5","54.5","54.6"],"推入两项":["28.7"],"red":["28.8","83.3"],"从数组开头推入两项":["28.8"],"slice":["28.11"],"concole":["28.15"],"直接使用sort":["28.24"],"方法排序":["28.24"],"arr":["28.24"],"foreach":["28.27"],"filter":["28.27"],"index":["28.28","28.29","28.31","49.5","54.1","77.24","90.12","94.4","121.23"],"后的条件表达式进行求值判断":["29.1"],"如果结果为true":["29.1"],"则执行if后的语句":["29.1"],"如果为false则不执行":["29.1"],"语句只会控制紧随其后其后的那一行代码":["29.1"],"汽车一辆":["29.2"],"当成绩为":["29.2"],"时":["29.2"],"奖励一台iphone":["29.2"],"如果比较结果为":["29.3"],"则自当前":["29.3"],"处开始执行代码":["29.3"],"执行完毕":["29.5"],"继续判断":["29.5"],"如果为":["29.5"],"则再次执行循环体":["29.5"],"如果为false":["29.6"],"则循环终止":["29.6"],"如果为true":["29.6"],"则继续执行循环体":["29.6"],"以此类推":["29.6"],"它不能直接用于遍历普通的对象":["29.10"],"要遍历对象属性":["29.10"],"需要使用":["29.10"],"object":["29.10","32.12","34.6","53.3","53.6"],"entries":["29.10"],"typedarray":["29.11"],"等":["29.11","58.2","69.11"],"迭代对象的顺序不同":["29.11"],"循环的迭代顺序是不确定的":["29.11"],"因为对象的属性没有固定的顺序":["29.11"],"中的函数":["30.0"],"变量名":["30.2"],"fn1":["30.3"],"fn2":["30.3"],"cook":["30.6"],"aru":["30.6"],"形参是接受实参的":["30.6"],"酸辣土豆丝":["30.6"],"形参类似于一个变量":["30.6"],"是一个变量但是没有接受值":["30.7"],"结果就是undefined":["30.7"],"建议":["30.7"],"getresult":["30.8"],"res":["30.8"],"不仅可以退出循环":["30.9"],"立即执行":["30.12"],"可以与":["31.0"],"write":["31.1","120.4","120.7"],"代码引入到":["31.2"],"body":["31.3","58.12","85.4","110.10"],"内联形式":["31.3"],"属性":["31.4","77.8"],"其中":["32.2"],"键名":["32.2"],"成员的名称":["32.2"],"字符串":["32.2"],"的属性":["32.3","32.13"],"就指向一个函数":["32.3"],"如果属性的值还是一个对象":["32.3"],"就形成了链式引用":["32.3"],"o1":["32.3"],"o2":["32.3"],"产生影响":["32.4"],"还是指向原来的那个对象":["32.4"],"这种引用只局限于对象":["32.4"],"如果两个变量指向同一个原始类型的值":["32.4"],"那么":["32.4"],"变量这时都是值的拷贝":["32.4"],"正确":["32.5"],"报错":["32.5"],"这种差异在":["32.5"],"eval":["32.5"],"语句":["32.5"],"作用是对字符串求值":["32.5"],"对象":["32.7","53.2"],"的数字键":["32.7"],"就定义好属性":["32.8"],"属性是不能删除的":["32.10"],"所以":["32.10"],"命令返回":["32.10"],"关于":["32.10"],"方法的介绍":["32.10"],"请看":["32.10"],"标准库":["32.10","32.12"],"对象一章":["32.10"],"另外":["32.10","76.8"],"需要注意的是":["32.10","90.5"],"运算符会返回":["32.11"],"因为这个属性是继承的":["32.11"],"可以使用对象的":["32.11"],"hasownproperty":["32.11","46.2"],"方法判断一下":["32.11"],"该属性不会被":["32.12"],"循环遍历到":["32.12"],"因为它默认是":["32.12"],"不可遍历":["32.12"],"的":["32.12","82.3","108.0"],"关于对象属性的可遍历性":["32.12"],"参见":["32.12"],"章节中":["32.12"],"一章的介绍":["32.12"],"如果继承的属性是可遍历的":["32.12"],"那么就会被":["32.12"],"然后在":["32.13"],"区块内操作它":["32.13"],"这是因为":["32.13","55.4"],"区块没有改变作用域":["32.13"],"它的内部依然是当前作用域":["32.13"],"这造成了":["32.13"],"语句的一个很大的弊病":["32.13"],"就是绑定对象不明确":["32.13"],"单纯从上面的代码块":["32.13"],"递增和递减运算符":["33.1"],"比较运算符":["33.1"],"位小数":["33.2"],"但在进行计算时其精确度远远不如整数":["33.2"],"除等于":["33.3"],"a2":["33.6"],"不等号":["33.7"],"它会转换为布尔值然后运算":["33.9","33.10"],"但是最终会返回原值":["33.9","33.10"],"则直接返回第一个值":["33.9"],"则返回第一个":["33.10"],"则执行表达式":["33.12"],"来改变优先级即可":["33.13"],"125e7":["34.2"],"等于":["34.2"],"在数值类型中":["34.2"],"存在一个特殊数值":["34.2"],"nan":["34.2","34.6"],"意为":["34.2"],"这个变量被声明了":["34.3"],"只是值为":["34.3"],"它们的值就不能变了":["34.4"],"lang":["34.4"],"值是由":["34.5"],"值派生而来":["34.5"],"非零数值":["34.6"],"包括无穷值":["34.6"],"foo":["34.7"],"otherfoosymbol":["34.7"],"箭头函数":["34.11"],"专门用来将字符串转换为数值的两个方法":["34.15"],"parseint":["34.15"],"将一个字符串转换为一个整数":["34.15"],"解析时":["34.15"],"会自左向右读取一个字符串":["34.15"],"直到读取到字符串中所有的有效的整数":["34.15"],"也可以使用":["34.15"],"来对一个数字进行取整":["34.15"],"parsefloat":["34.15"],"将一个字符串转换为浮点数":["34.15"],"解析器首先要确认的就是这个值是基本类型值还是引用类型值":["34.17"],"的值为一个基本类型":["34.18"],"是存储在栈中":["34.18"],"将":["34.18","76.8","116.2","116.4","116.7","116.8","125.7"],"是一个引用类型":["34.19"],"在赋值操作过程汇总":["34.19"],"实际是将堆内存对象在栈内存的引用地址复制了一份给了":["34.19"],"两个对象对应不同的地址":["34.20"],"关键字声明的变量会自动提升到函数作用域顶部":["35.1"],"相当于":["35.1"],"referenceerror":["35.3"],"catch":["35.5"],"语句或":["35.5"],"在延迟定时器执行时":["35.6"],"他是异步的":["35.6"],"循环已经结束了":["35.6"],"最后的值始终都是":["35.6"],"才是期望的值":["35.6"],"syntaxerror":["35.7"],"声明的作用域也是块":["35.7"],"上面的代码就相当于":["35.8"],"childelement":["36.1"],"将其添加到文档中":["36.1"],"修改元素属性":["36.1"],"这是新创建的段落":["36.2"],"appendchild":["36.2"],"加载历史记录中的不同页面":["37.0","38.0"],"delta":["37.1"],"导航到相对于当前页面的偏移量为":["37.1"],"history":["38.0","81.15"],"它提供了对浏览器历史记录的操作":["38.0"],"可以使用它向前或向后导航":["38.0"],"navigator":["38.0"],"它提供了关于浏览器的信息":["38.0"],"如浏览器的名称":["38.0"],"的各个部分":["39.0"],"如协议":["39.0"],"的查询字符串部分":["39.1"],"assign":["39.1"],"https":["39.2","125.1","142.3"],"www":["39.2","118.14","125.1"],"example":["39.2","142.3"],"用户代理字符串等":["40.0"],"浏览器的版本":["40.1"],"appversion":["40.2"],"获取操作系统平台":["40.2"],"分辨率等":["41.0"],"availheight":["41.1","41.2"],"屏幕的可用高度":["41.1"],"屏幕可用高度":["41.2"],"表示浏览器窗口或标签页":["42.0"],"它提供了操作浏览器窗口的方法和属性":["42.0"],"moveto":["42.1","142.1","144.3"],"resizeto":["42.2"],"xmlhttprequest":["43.1","118.11"],"对象来向服务器发异步请求":["43.1"],"从服务器获得数据":["43.1"],"send":["43.2","118.6"],"方法发送给服务器端":["43.2"],"布尔值":["43.4"],"表示是否异步执行操作":["43.4"],"默认为":["43.4"],"请求发送数据的时候":["43.5"],"需要注意如下":["43.5"],"将请求数据添加到":["43.5"],"open":["43.5"],"整个请求过程完毕":["43.6"],"status":["43.6","110.11"],"接收请求":["43.8"],"onreadystatechange":["43.8"],"readystate":["43.8"],"fail":["43.9","122.11"],"闭包可以捕获外部函数的变量和参数":["45.0"],"并将其保存在内部函数的词法环境中":["45.0"],"内部定义了":["45.1"],"函数返回了":["45.2"],"函数":["45.2","89.0","118.5"],"后者可以访问并修改":["45.2"],"柯里化是一种将多参数函数转化为一系列单参数函数的技术":["45.4"],"闭包可以用于实现函数柯里化":["45.4"],"使函数能够记住之前传递的参数":["45.4"],"并返回一个新的函数等待传递剩余的参数":["45.4"],"延迟执行函数":["45.4"],"可以使得函数更灵活":["45.5"],"更具可复用性":["45.5"],"合理使用闭包可以创建私有变量":["45.5"],"这些方法都会创建一个新对象":["46.1"],"originalobject":["46.2"],"函数接收一个参数":["47.1"],"并返回一个新的匿名函数":["47.1"],"新函数接收参数":["47.1"],"提供了一些工具库":["47.2"],"如":["47.2","77.16","121.16","138.5","138.7"],"lodash":["47.2"],"ramda":["47.2"],"这是一种使用闭包和递归的柯里化函数实现方式":["47.4"],"函数接收一个要柯里化的函数":["47.4","47.6"],"返回一个新的柯里化函数":["47.4"],"shift":["47.5"],"返回一个新的箭头函数":["47.6"],"极大地浪费资源":["48.0"],"降低前端性能":["48.0"],"为了优化体验":["48.0"],"需要对这类事件进行调用次数的限制":["48.0"],"mousemove":["48.1"],"keyup":["48.1","48.4","58.2"],"函数接收一个要节流的函数":["48.2"],"当前时间":["48.3"],"remaining":["48.3"],"从上一次到现在":["48.3"],"还剩下多少多余时间":["48.3"],"context":["48.3","140.1","141.1"],"cleartimeout":["48.5"],"handlescroll":["48.7"],"处理滚动事件的逻辑":["48.7"],"创建函数":["48.7"],"throttlehandlescroll":["48.7"],"同时":["49.2"],"减少循环次数提升性能":["49.2"],"return":["49.2","54.8","78.10","78.11","78.19","78.22","79.3","79.4","79.8","79.10","82.5","82.6","85.16","101.12","122.11"],"includes":["49.4"],"queue":["50.1"],"中":["50.1","62.4","77.9","77.13","80.1"],"当":["50.1","122.14"],"执行栈":["50.1"],"先同步":["50.2"],"再取出第一个宏任务执行":["50.2"],"所有的相关微任务总会在下一个宏任务之前全部执行完毕":["50.2"],"如果遇见":["50.2"],"就":["50.2"],"再打印整个script中第一遍放入微任务队列中的代码":["50.3"],"循环第二遍":["50.3"],"按照任务队列的先进先出":["50.3"],"执行放入任务队列中的宏任务":["50.3"],"如定时器等":["50.3"],"在此等宏任务中":["50.3"],"parse":["51.2"],"isarray":["51.3"],"是一种用于处理异步操作的对象":["52.0"],"它表示一个异步操作的最终完成":["52.0"],"或失败":["52.0"],"及其结果的值":["52.0"],"读取文件等":["52.1"],"当异步操作成功时":["52.1"],"调用":["52.1","52.5"],"方法中传递的函数会在异步操作成功时被调用":["52.2"],"并接收到成功的结果":["52.2"],"这样":["52.3"],"可以在第二个":["52.3"],"方法中继续处理":["52.3"],"方法会被调用":["52.4"],"传递一个包含所有":["52.4"],"实例结果的数组":["52.4"],"如果任意一个":["52.4"],"实例失败":["52.4"],"将调用新":["52.4"],"事件被触发":["52.5"],"函数判断响应的状态码":["52.5"],"如果在":["52.5"],"到":["52.5","135.5"],"的范围内":["52.5"],"则调用":["52.5"],"将响应文本作为成功的结果传递给":["52.5"],"否则":["52.5"],"将状态文本作为错误信息传递给":["52.5"],"它使得对象可以通过原型链":["53.1"],"prototype":["53.1","73.5"],"然后":["53.2"],"我们通过":["53.2","83.2"],"来定义":["53.2"],"当我们创建一个":["53.2"],"在这个例子中":["53.3","53.4","74.2"],"我们定义了两个构造函数":["53.4"],"create":["53.6"],"super":["53.8"],"buddy":["53.9"],"但也需要小心使用":["53.11"],"这种多重继承的能力是传统继承中不常见的":["53.12"],"使用构造函数和原型对象":["53.13"],"可以创建一个自定义的工具函数或对象":["53.15"],"这样可以降低内存使用":["53.16"],"在命名属性和方法时要小心":["53.17"],"方法提供了一种更灵活的方式来创建对象":["53.18"],"和数组本身":["54.1"],"prev":["54.8"],"cur":["54.8"],"方法在处理大量数据时可能不太高效":["54.9"],"因为它是顺序执行的":["54.9"],"每个元素依赖前一个元素的累积结果":["54.9"],"输出的是外部作用域的":["55.4"],"而不是全局作用域的值":["55.4"],"btn1":["56.1"],"我们可以依据节点之间的关系查找节点":["56.3"],"基础":["56.5"],"这使得开发者可以使用":["57.1"],"动态地修改网页的内容":["57.1"],"样式和结构":["57.1"],"以及响应用户的交互事件":["57.1"],"链接名":["57.2"],"class":["57.2","57.3","128.0","130.0","131.0","134.0","136.0","137.0"],"文本节点":["57.3"],"通过":["57.4","77.18","81.3","81.6","91.6","140.0"],"可以实现动态修改网页内容":["57.4"],"实时更新页面":["57.4"],"下面是一些常见的方法和技巧来处理":["58.0"],"是一个函数":["58.2"],"它会在事件触发时执行":["58.2"],"使用匿名函数来定义事件处理程序":["58.2"],"removeeventlistener":["58.3","89.31"],"eventname":["58.3"],"监听鼠标是移入当前":["58.5"],"dom":["58.5","81.8","88.1"],"元素":["58.5","84.3"],"addeventlistener":["58.5","76.3","89.31"],"修改文本内容":["58.5"],"键盘谈起了":["58.6"],"用户输入文本事件":["58.6"],"blur":["58.7"],"事件也可以用于检测键盘输入":["58.8"],"并做出相应的响应":["58.8"],"keypress":["58.8"],"当用户按下键盘上的字符键时触发":["58.8"],"以下是一些常用的事件对象属性":["58.9"],"target":["58.9"],"触发事件的目标元素":["58.9"],"事件将从祖先元素开始":["58.10"],"向下传播到触发事件的元素":["58.10"],"domcontentloaded":["58.11"],"视图事件":["58.11"],"高效的事件处理方式":["58.12"],"mylist":["58.12"],"选项1":["58.12"],"设置元素的属性值":["59.0"],"是你想要创建的元素的标签名":["59.1"],"例如":["59.1","69.10"],"设置元素的":["59.2"],"内容":["59.2","89.30"],"之前":["59.3","86.1"],"作为它的兄弟元素":["59.3"],"从父元素中移除子元素":["59.3"],"removechild":["59.3"],"文档对象模型":["60.0"],"来操作元素的样式和类":["60.0"],"computedstyle":["60.1"],"window":["60.1"],"这将返回一个布尔值":["60.2"],"指示元素是否具有指定的类名":["60.2"],"上述方法可以用于修改元素的样式和类":["60.2"],"以实现动态的样式变化或元素状态的切换":["60.2"],"你可以根据需要进行组合和应用":["60.2"],"innerhtml":["61.0"],"获取或设置元素的":["61.0"],"tagname":["61.1"],"使用选择器获取元素":["61.1"],"setattribute":["61.2"],"自动发送回服务器":["62.0"],"每个":["62.1"],"由一个键值对组成":["62.1"],"gmt":["62.3"],"path":["62.3","81.3","86.3"],"建议谨慎使用并根据实际需求控制数据量":["62.4","63.6","64.6"],"会在每次请求时自动发送到服务器":["62.4"],"不应将敏感信息存储在":["62.4"],"中的数据在浏览器关闭后仍然存在":["63.0"],"因此适用于需要长期保存的数据":["63.0"],"username":["63.1","64.1","118.2"],"因此":["63.6","64.6"],"存储大量数据可能会导致溢出或性能问题":["63.6","64.6"],"是基于域名的":["63.6"],"每个域名都有独立的":["63.6"],"不同域名之间的":["63.6"],"中的数据在用户关闭浏览器标签页或浏览器会话结束后会被清除":["64.0"],"因此适用于临时保存会话数据":["64.0"],"是基于域名和会话的":["64.6"],"每个域名和浏览器会话都有独立的":["64.6"],"不同域名或会话之间的":["64.6"],"setmilliseconds":["65.1"],"millisecond":["65.1"],"设置日期的毫秒数为指定的值":["65.1"],"setminutes":["65.1"],"minute":["65.1"],"设置日期的分钟数为指定的值":["65.1"],"setmonth":["65.1"],"month":["65.1"],"设置日期的月份为指定的值":["65.1"],"范围为":["65.1"],"setseconds":["65.1"],"datestring":["65.2"],"我们将日期对象设置为":["65.3"],"天后的日期":["65.3"],"获取时间戳":["65.4"],"日期处理":["66.0"],"正则表达式匹配等":["66.0"],"都可以依靠内置对象来完成":["66.0"],"数学对象":["66.1"],"regexp":["66.1"],"正则表达式对象":["66.1"],"error":["66.1","101.12","103.5"],"如对象的创建":["66.2"],"排序等":["66.3"],"这些方法可以帮助我们处理文本数据":["66.4"],"可以进行基本的数学计算":["66.5"],"两个值":["66.6"],"它提供了逻辑运算和条件判断的功能":["66.6"],"可以用于处理时间相关的任务":["66.7"],"promise":["66.9","97.4"],"map":["66.9"],"和其他全局对象不同":["67.0"],"它不是一个构造器":["67.0"],"之间的随机数":["67.4"],"包含":["67.4"],"次方":["67.10"],"pi":["67.12","146.2","158.4"],"negative":["68.1"],"表示负无穷大":["68.1"],"当一个负数超过了":["68.1"],"使用正则表达式来查找匹配的模式":["69.1"],"并进行替换操作":["69.1"],"当涉及到字符串模式匹配和替换时":["69.1"],"的正则表达式":["69.1"],"匹配括号内的任意字符":["69.5"],"来匹配字符串的开始和结束":["69.6"],"匹配邮箱":["69.7"],"groups":["69.9"],"只从上次匹配结束的位置开始匹配":["69.10"],"标志可以通过在正则表达式字面量或构造函数中使用单个字符的方式添加":["69.10"],"markdown":["69.11"],"json":["69.11","79.6","79.11","101.8","105.7","121.11","121.21"],"constructor":["70.1","79.13"],"bark":["70.1"],"john":["70.2","73.18","78.7","80.11","102.7"],"构造函数是一个带有":["71.0"],"关键字调用的函数":["71.0"],"它的主要作用是初始化对象的属性和方法":["71.0"],"person2":["71.1","104.5"],"jane":["71.1"],"对象是数据和操作数据的方法的封装单元":["72.1"],"作为一种支持面向对象编程的语言":["72.2"],"提供了创建对象":["72.2"],"定义类":["72.2"],"实现继承和封装等功能":["72.2"],"sex":["73.2"],"男":["73.2"],"调用属性还有一种方法":["73.3"],"年龄":["73.4"],"性别":["73.4"],"bigbai":["73.4"],"属性的值":["73.5"],"is":["73.5","85.10"],"判断两个值是否相同":["73.5"],"keys":["73.5"],"的原型是":["74.1"],"对象通过":["74.2"],"创建":["74.2"],"动态更新":["74.3"],"原型和原型链是实现继承和共享属性和方法的关键机制":["74.4"],"禁止删除变量":["75.0"],"delete":["75.0","98.5"],"和函数":["75.0"],"禁止使用八进制字面量":["75.0"],"012":["75.0"],"就会创建一个新的上下文对象":["76.1"],"他们之间是相互独立且独一无二的":["76.1"],"这个对象我们称为函数执行的":["76.2"],"事件绑定函数":["76.3"],"指向":["76.3"],"绑定事件的对象":["76.3"],"button":["76.3","82.4","85.7","91.16"],"mybutton":["76.3"],"me":["76.3"],"apply":["76.5"],"想要将this指向哪里":["76.7"],"函数实参1":["76.7"],"函数实参2":["76.7"],"备注":["76.7"],"son":["76.8"],"通过这一步":["76.8"],"里面的":["76.8"],"修改为":["76.8"],"加上相应的参数":["76.8"],"让":["76.8"],"第一个参数中":["76.10"],"如果不需要改变":["76.10","76.14"],"则传":["76.10","76.14"],"先将":["76.11"],"不让填null":["76.12"],"maxvalue":["76.12"],"求数组":["76.12"],"函数的":["76.14"],"官方网址":["77.0"],"通过对比前后两个状态的":["77.1"],"差异":["77.1"],"最小化页面重绘":["77.1"],"从而提高性能和效率":["77.1"],"独立的组件":["77.3"],"每个组件负责特定的功能":["77.3"],"从而提高了页面的渲染效率":["77.4"],"这种单向数据流的模式使得数据流动更加可控":["77.5"],"减少了数据的混乱和不一致":["77.5"],"redux":["77.6"],"用于管理应用程序的状态":["77.6"],"props":["77.8","78.20"],"并返回一个描述":["77.8"],"使得代码更易读和理解":["77.9"],"react":["77.9","80.6","84.6","122.6"],"组件更加可预测和易于维护":["77.10"],"在子组件中":["77.10"],"可以通过":["77.11","82.7"],"发送网络请求":["77.12"],"清理资源等":["77.12"],"条件渲染使得我们可以根据不同的情况展示不同的":["77.14"],"实现列表展示的功能":["77.15"],"通过列表渲染":["77.15","83.1"],"input":["77.16","78.5","83.5"],"通过状态提升":["77.17"],"尤其对于跨多层级的组件共享数据非常有用":["77.19"],"然而":["77.19"],"我们可以在函数组件中使用类组件的功能":["77.20"],"如状态管理":["77.20"],"生命周期方法等":["77.20"],"world":["77.21"],"主要封装了和":["77.22"],"操作相关的包":["77.22"],"比如":["77.22"],"把组件渲染到页面上":["77.22"],"这一行的":["77.23"],"是写":["77.23"],"babel":["77.23","110.6"],"而不是":["77.23"],"代码运行后":["77.23"],"页面上的":["77.23"],"可以看到":["78.2"],"element":["78.4","78.5","78.7","78.12"],"learn":["78.6"],"comment":["78.8"],"组件是":["78.9"],"中最基本的概念之一":["78.9"],"render":["78.11","78.20","79.3","79.4","82.5","82.6","87.3"],"welcome":["78.12"],"please":["78.15"],"评论列表等":["78.16"],"onchange":["78.18","83.5"],"bind":["78.18"],"temperatureinput":["78.19"],"scale":["78.19","153.2","157.3"],"themedbutton":["78.21"],"theme":["78.21"],"getsnapshotbeforeupdate":["79.1"],"之后":["79.1"],"更新之前调用":["79.1"],"用于获取更新前的":["79.1"],"component":["79.5","86.3","110.8"],"then":["79.6","79.11"],"response":["79.6","79.11","97.4"],"initialcount":["79.8"],"somestate":["79.9"],"data":["79.11","89.14","97.3","98.3","98.6","110.10","120.4"],"生命周期是组件在不同阶段经历的一系列方法调用":["79.13"],"通过这些方法":["79.13"],"我们可以在特定时间点执行代码":["79.13"],"控制组件的行为":["79.13"],"并进行必要的操作":["79.13"],"在组件创建阶段":["79.13"],"我们可以在":["79.13"],"这有助于确保组件的数据流向更加可预测和可维护":["80.1"],"在上面的例子中":["80.3","81.11","81.14","82.3","82.4","83.2","84.2","84.3","84.4","84.5","87.4","87.6"],"组件会根据传递的":["80.6"],"使用组件并传递props":["80.7","80.8","80.9","80.11","80.14"],"reactdom":["80.7","80.8","80.9","80.14"],"apple":["80.10"],"banana":["80.10"],"orange":["80.10"],"即数据只能从父组件传递到子组件":["80.12"],"而不能从子组件传递到父组件或者兄弟组件之间传递":["80.12"],"这样的设计有助于维护组件的数据流向":["80.13"],"避免对":["80.13"],"对props进行验证":["80.14"],"isrequired":["80.14"],"中用于向组件传递数据的机制":["80.15"],"它允许组件接收外部传入的数据":["80.15"],"并根据数据的变化进行动态渲染和交互":["80.15"],"通过使用":["80.15","82.0","82.7"],"这会增加服务器负担并且造成较长的加载时间":["81.1"],"而在单页应用中":["81.1"],"整个应用只加载一次":["81.1"],"组件来定义路由":["81.3"],"允许我们在一个页面组件中使用嵌套的":["81.4"],"route":["81.4"],"router":["81.5","92.4"],"paramname":["81.5"],"组件来创建路由链接":["81.6"],"push":["81.7","117.4"],"export":["81.11","81.13","81.14","83.2","84.2","84.5","110.9"],"default":["81.11","81.13","81.14","83.2","84.2","84.3","84.4","84.5","89.0","110.9"],"app":["81.12","118.4"],"user":["81.14","118.6","118.7","122.14"],"我们新增了一个名为":["81.14"],"的页面组件":["81.14"],"点击链接后":["81.15"],"会自动更新":["81.15"],"url":["81.15","118.2"],"并渲染对应的页面组件":["81.15"],"如果希望在某个事件触发后实现页面导航":["81.15"],"可以使用编程式导航":["81.15"],"match":["81.15"],"并在数据发生变化时重新渲染组件":["82.0"],"值更新组件的显示内容":["82.1"],"是单向数据流的一部分":["82.1"],"我们在构造函数中初始化了一个名为":["82.3"],"onclick":["82.4","149.3"],"increment":["82.4"],"访问和显示":["82.7"],"的值":["82.7","87.6"],"并通过调用":["82.7"],"回调函数来更新":["82.7"],"组件用于存储和管理可变数据的一种机制":["82.7"],"我们可以创建交互性和动态性的组件":["82.7"],"列表渲染使我们能够根据数据数组来动态生成多个相似的元素":["83.0"],"方法来实现列表渲染":["83.1"],"方法遍历":["83.2"],"数组的每个元素":["83.2"],"style":["83.3","118.3","129.0","132.0","133.0","135.0"],"color":["83.3","136.3","136.4","156.3"],"number":["83.4","90.2","104.4"],"方法中使用箭头函数可以确保正确地绑定":["83.6"],"上下文":["83.6"],"从而避免出现意外的错误":["83.6"],"的列表渲染是一种根据数据数组来动态生成多个相似的元素":["83.6"],"条件渲染使我们能够根据不同的状态或数据来展示不同的内容":["84.0"],"中的条件渲染是一种基本且常用的技术":["84.1"],"它使我们能够根据用户的交互或应用程序的状态来实现动态的用户界面":["84.1"],"in":["84.2","90.12","94.4","97.5"],"to":["84.2","86.6","91.14"],"continue":["84.2"],"我们使用三元表达式来根据":["84.3"],"状态的值来返回不同的":["84.3"],"如果":["84.3","84.4","84.5"],"我们使用逻辑与来根据":["84.4"],"状态的值来决":["84.4"],"定是否渲染欢迎消息":["84.4"],"为":["84.4"],"我们使用条件运算符来根据":["84.5"],"状态的值来决定是否渲染提示信息":["84.5"],"建议为每个元素提供唯一的":["84.6"],"以帮助":["84.6"],"正确地更新":["84.6"],"并以声明式的方式构建数据驱动的":["85.1"],"js脚本":["85.3"],"或者":["85.3"],"bash":["85.3","110.4"],"message":["85.6","85.14","110.10"],"事件":["85.7"],"并在触发时执行相应的方法":["85.7"],"vue":["85.13","90.10","122.6","163.3"],"如清除定时器":["85.18"],"解绑事件等":["85.18"],"destroyed":["85.18"],"销毁后":["85.18"],"在实例销毁之后调用":["85.18"],"组件已经解除绑定的所有数据监听器":["85.18"],"可以执行一些销毁后的清理工作":["85.18"],"activated":["85.18"],"激活":["85.18"],"keep":["85.18"],"install":["86.2","110.7","124.5","126.1"],"routes":["86.3"],"about":["86.5","165.6","165.9","165.10"],"children":["86.7","91.13","91.17"],"components":["86.10"],"在大型应用程序中":["87.0"],"组件之间的数据共享和通信可能变得复杂":["87.0"],"用于提交":["87.1"],"而不是直接变更状态":["87.1"],"可以包含任意异步操作":["87.1"],"然后再通过提交":["87.1"],"mutations":["87.2"],"来进行":["87.2"],"使得状态变更变得可追踪和可预测":["87.2"],"插件支持":["87.2"],"mount":["87.3"],"在组件中使用":["87.3"],"在组件中":["87.3","87.5","87.6"],"可以通过计算属性":["87.3"],"computed":["87.3"],"或者方法":["87.3"],"methods":["87.3","118.12"],"来访问和修改":["87.3"],"我们在":["87.4","87.6"],"中定义了":["87.4"],"我们通过调用":["87.5"],"来触发":["87.5"],"action":["87.5"],"当点击按钮后":["87.5"],"传入id":["87.6"],"中定义了三个":["87.6"],"我们可以通过":["87.6"],"来获取这些":["87.6"],"会被调用":["88.1"],"负责通知相关的":["88.1"],"更新视图":["88.1"],"这种方式实现了数据的响应式更新":["88.1"],"确保视图总是与数据保持同步":["88.1"],"虚拟":["88.1"],"如缓存":["88.2"],"getter":["88.2"],"的结果":["88.2"],"避免不必要的触发和更新":["88.2"],"还使用了静态分析":["88.2"],"以在编译时生成更高效的代码":["88.2"],"composition":["88.2"],"api":["88.2","138.6"],"也不用写export":["89.0"],"数据":["89.1"],"方法等等":["89.1"],"均要配置在":["89.1"],"按钮":["89.2","89.12"],"提示":["89.2"],"模板中使用的数据和方法":["89.2"],"都需要通过":["89.2"],"msg":["89.4","91.13","91.17","110.11"],"这样是可以被监听到的修改value":["89.5"],"zs":["89.6","102.1"],"changemsg":["89.6","91.12","91.13"],"实现":["89.7"],"debounce":["89.7"],"的示例":["89.7"],"控制台警告":["89.8"],"cannot":["89.8"],"返回一个原值的只读代理":["89.9"],"change2":["89.10"],"change":["89.12","90.4"],"参数三":["89.16"],"options配置项":["89.16"],"为一个对象":["89.16"],"immediate":["89.16"],"新的值":["89.17"],"newval":["89.18","89.19","89.20"],"oldval":["89.18","89.19","89.20"],"默认初始时就会执行第一次":["89.21"],"产生的副作用":["89.22"],"就是在触发监听之前会调用一个函数可以处理你的逻辑":["89.22"],"但是我们采用异步的方式创建了一个监听器":["89.23"],"这个时候监听器没有与当前组件绑定":["89.23"],"强制效果始终同步触发":["89.24"],"beforecreate":["89.25"],"改用updated":["89.27"],"beforeunmount":["89.27","89.28"],"在元素被移除前调用":["89.27"],"更新结束":["89.28"],"bar":["89.29"],"修饰符对象为":["89.29"],"innerheight":["89.31"],"resize":["89.31"],"集中式状态管理容器":["90.1"],"实现任意组件通信":["90.1"],"ref":["90.1"],"父组件获取子组件实例":["90.1"],"dbclick":["90.3","90.4"],"vue3":["90.4","90.9"],"框架":["90.4"],"第一个参数为触发事件类型":["90.5"],"第二个":["90.5"],"三个":["90.5"],"n":["90.5"],"个参数即为传递给父组件的数据":["90.5"],"代码如下":["90.5"],"如果想在":["90.6"],"中使用全局事件总线功能":["90.6"],"可以使用插件":["90.6"],"mitt":["90.6"],"传递两个":["90.7"],"分别是":["90.7"],"pageno":["90.7"],"与":["90.7"],"pagesize":["90.7"],"以及绑定两个自定义事件":["90.7"],"handler":["90.8"],"子组件内部可以通过":["90.8"],"中组件内部的数据对外":["90.9"],"关闭的":["90.9"],"外部不能访问":["90.9"],"可以获取某一个组件的父组件实例":["90.9"],"与提供数据":["90.10"],"vuex":["90.11"],"但是核心概念没有":["90.11"],"组件内部遍历数组":["90.12"],"todos":["90.12"],"作用域插槽将数据回传给父组件":["90.12"],"row":["90.12"],"用法":["91.2"],"直接在其他":["91.2"],"子组件接受值":["91.6"],"来接受":["91.6"],"是无须引入的直接使用即可":["91.6"],"v":["91.8","146.1","149.4"],"简写":["91.9"],"这里的两个":["91.10"],"list":["91.12","91.13","123.0"],"默认渲染的页面":["91.13"],"插入至":["91.14"],"onchangemsg":["91.16"],"改变msg":["91.16"],"绑定多个v":["91.17"],"以上":["92.3"],"mode":["92.4"],"additional":["92.4"],"模块热更新":["92.5"],"rollup打包":["92.5"],"选择语言":["92.6"],"次提交":["93.1"],"重写虚拟dom的实现和tree":["93.2"],"文档碎片":["93.3"],"teleport":["93.3"],"瞬移组件的位置":["93.3"],"新增泛型支持":["94.1"],"需要在":["94.1"],"script":["94.1","110.8"],"标签上加上":["94.1"],"派发":["94.2"],"自定义":["94.3"],"现在有了":["94.3"],"node":["97.1","97.5","108.0","121.13"],"使用cdn":["97.2"],"post":["97.3","110.12","118.12"],"reject":["97.4"],"添加响应拦截器":["97.4"],"也是http的实例":["97.5"],"http":["97.5"],"clientrequest":["97.5"],"token":["98.1"],"基础请求地址":["98.2"],"timeout":["98.2"],"qs":["98.3"],"stringify":["98.3"],"序列化":["98.3"],"比如表单数据":["98.3"],"服务器内部错误":["98.4"],"服务未实现":["98.4"],"网关错误":["98.4"],"put":["98.5"],"httpaction":["98.5"],"userid":["98.6"],"userlist":["98.6"],"封装":["98.8"],"指定文件添加暂存区":["99.5"],"提交指定文件":["99.6"],"往前一个版本":["99.7"],"版本号1":["99.7"],"版本号2":["99.7"],"graph":["99.8"],"查看涉及到指定文件的":["99.8"],"commit":["99.8"],"commitid":["99.10"],"基于当前分支创建分支并切换到新分支":["99.10"],"把":["99.14"],"staged":["99.15"],"unstage":["99.15"],"remove":["99.18"],"别名":["99.20"],"打开git":["100.2"],"配置后结果":["100.3"],"会生成":["100.4"],"20230222160826601":["100.5"],"hex":["101.2"],"0xf00d":["101.2"],"十六进制":["101.2"],"createdboolean":["101.3"],"元素类型":["101.4"],"length":["101.5","101.12","120.10"],"如果你配置了":["101.8"],"tsconfig":["101.8"],"开启了严格模式":["101.8"],"strict":["101.8"],"这样是没问题的":["101.9"],"因为存在死循环":["101.10"],"loop":["101.10"],"需求":["101.14"],"定义一个函数得到一个字符串或者数值数据的长度":["101.14"],"getlength":["101.14"],"语法糖":["102.0"],"它的绝大部分功能":["102.0"],"调用实例的方法":["102.1"],"wang":["102.2"],"也可以外部访问":["102.4"],"不能在外部访问":["102.5"],"为私有属性":["102.6"],"只能在类":["102.6"],"中访问":["102.6"],"可以在这里使用":["102.6"],"需注意":["102.8"],"如果两个函数都是static":["102.8"],"静态的是可以通过this互相调用":["102.8"],"extends":["102.9","104.7"],"c":["102.10","120.3","120.6","121.21","121.23"],"我的名字是":["102.11"],"年龄是":["102.11"],"info":["103.4"],"如果参数类型不同":["103.5"],"则参数类型应设置为":["103.5"],"any":["103.5","110.12"],"参数数量不同你可以将不同的参数设置为可选":["103.5"],"fn":["103.5"],"params":["103.5","118.2"],"如果不传类型":["104.3"],"那么typescript会类型推论":["104.3"],"abc":["104.4"],"的一个超集":["105.1"],"所以对于项目而言":["105.2"],"会使代码更加规范":["105.2"],"从而解决了大型项目代码的复杂性":["105.2"],"完全支持":["105.3"],"vue3已全面支持":["105.5"],"增加前期开发的成本":["105.6"],"毕竟你需要写更多的代码":["105.6"],"配置文件":["105.7"],"init":["105.7","125.2"],"ts":["105.10"],"obj":["106.3"],"a是必须要有的":["106.5"],"其他就不会校验了":["106.5"],"ok":["107.1"],"字面量模式":["107.1"],"空对象类型和大":["107.1"],"switch":["108.0","110.11"],"语句的":["108.0"],"fallthrough":["108.0"],"错误":["108.0"],"不允许":["108.0"],"case":["108.0","110.11"],"语句贯穿":["108.0"],"模块解析选项":["108.0"],"moduleresolution":["108.0"],"选择模块解析策略":["108.0"],"classic":["108.0"],"typescript":["108.0","110.2"],"pre":["108.0"],"分配给类型":["109.1"],"定义变量时没有赋值":["109.1"],"推断为any类型":["109.1"],"s2":["109.2"],"来统一包管理工具":["110.2"],"涉及到技术栈包含":["110.2"],"安装指令":["110.4","110.7"],"i":["110.4"],"g":["110.4"],"项目初始化命令":["110.4"],"overrides":["110.6"],"指定解析器":["110.6"],"解析器":["110.6"],"esprima":["110.6"],"默认解析器":["110.6"],"babel解析器":["110.6"],"parser":["110.6","110.7"],"ts解析器":["110.6"],"pnpm":["110.7","121.16"],"d":["110.7"],"non":["110.8"],"assertion":["110.8"],"namespace":["110.8"],"禁止使用自定义":["110.8"],"模块和命名空间":["110.8"],"semi":["110.8"],"vuejs":["110.8"],"org":["110.8","121.17"],"multi":["110.8"],"word":["110.8"],"names":["110.8"],"要求组件名称始终为":["110.8"],"链接的单词":["110.8"],"vite":["110.9"],"config":["110.9"],"文件配置如下":["110.9"],"defineconfig":["110.9"],"获取请求体携带过来的用户名与密码":["110.10"],"调用获取用户信息函数":["110.10"],"用于判断是否有此用户":["110.10"],"checkuser":["110.10"],"find":["110.10"],"没有用户返回失败信息":["110.10"],"code":["110.10"],"账号或者密码不正确":["110.10"],"如果有返回成功信息":["110.10"],"token过期":["110.11"],"break":["110.11"],"获取用户信息":["110.12","122.14"],"如果不存在":["111.0"],"则转给哪个文件执行":["111.0"],"nginx项目部署500的问题":["111.0"],"vue项目路由不是真实存在的":["111.0"],"conf":["111.1"],"从表中删除一个列":["112.1"],"以下是":["113.0"],"大整数类型":["113.1"],"036":["113.1"],"2250738585072014e":["113.2"],"用于存储较长文本数据的字符串类型":["113.3"],"00":["113.4"],"binary":["113.5"],"varbinary":["113.5"],"blob":["113.5"],"数据组织和存储":["114.0"],"数据库提供了结构化的数据存储方式":["114.0"],"使数据的组织和管理更加方便和高效":["114.0"],"数据共享和访问控制":["114.0"],"视图":["114.1"],"复制和高可用性选项等":["114.1"],"强大的社区支持":["114.1"],"mysql拥有庞大的用户社区和活跃的开发者社区":["114.1"],"提供了广泛的文档":["114.1"],"更新数据和删除数据等操作":["116.0"],"下面是":["116.0"],"是您的":["116.1"],"用户名":["116.1"],"然后输入密码进行连接":["116.1"],"替换为要插入数据的表的名称":["116.5"],"等替换为要检索的列名":["116.6"],"替换为要更新数据的表的名称":["116.7"],"应用":["117.2","119.1"],"加载外部资源或执行":["117.2"],"根据浏览器检查元素区":["117.3"],"rating":["117.4"],"num":["117.4"],"pic":["117.4"],"attr":["117.4"],"src":["117.4"],"p1461851991":["117.6"],"无间道":["117.6"],"無間道":["117.6"],"p2564556863":["117.6"],"疯狂动物城":["117.6"],"zootopia":["117.6"],"p2614500649":["117.6"],"控方证人":["117.6"],"witness":["117.6"],"prosecution":["117.6"],"开发框架":["118.0"],"是一个动态的参数":["118.2"],"ids":["118.2"],"是动态匹配到的":["118.2"],"别忘记调用":["118.5"],"get":["118.6","118.12","122.14"],"内置中间件":["118.8"],"自":["118.8"],"版本开始":["118.8"],"内置了":["118.8"],"个常用的中间件":["118.8"],"极大的提高了":["118.8"],"项目的开发效率和体验":["118.8"],"static":["118.8"],"配置中间件":["118.10"],"的接口":["118.11"],"在浏览器中有兼容性":["118.11"],"只有支持":["118.11"],"level2":["118.11"],"custom":["118.12"],"仅支持客户端发起":["118.12"],"head":["118.12"],"请求":["118.12"],"如果客户端希望通过":["118.12"],"只有三个值":["118.14"],"application":["118.14"],"请求进行预检":["118.15"],"以获知服务器是否允许该实际请求":["118.15"],"所以这一次的":["118.15"],"electron":["119.1"],"可以构建跨平台的桌面应用":["119.1"],"指的是":["119.2"],"的主线程只有一个":["119.2"],"为了确保主线程不被阻塞":["119.2"],"主线程是用于接收客户端请求":["119.2"],"程序运行效率较低":["119.3"],"不存在创建":["120.1"],"存在截断":["120.1"],"读写":["120.1"],"存在打开失败":["120.1"],"复制文件内容":["120.3"],"users":["120.3","120.6"],"笔记":["120.3"],"mp3":["120.3"],"将读取到的数据写入到可写流中":["120.4"],"简便方式":["120.4"],"success":["120.6"],"通过可写流写入文件的内容":["120.7"],"将一个字符串转换为":["120.8"],"alloc":["120.8"],"创建指定大小的":["120.8"],"获取文件所处的绝对路径":["120.9"],"readfile":["120.9"],"占用内存的大小":["120.10"],"一个汉字3字节":["120.10"],"字符串的长度":["120.10"],"8进制输出第一个元素":["120.10"],"用来处理路径的模块":["120.11"],"它提供了一系列的方法和属性":["120.11"],"dirname":["120.12"],"files":["120.12"],"txt":["120.12"],"utf8":["120.12"],"fext":["120.14"],"用来创建":["120.15"],"解决中文乱码的问题":["120.16"],"setheader":["120.16","120.17"],"charset":["120.16"],"utf":["120.16"],"只是向外部暴露一些接口":["121.2"],"这种模块级别的访问限制":["121.6"],"叫做模块作用域":["121.6"],"加载某个模块即加载该模块的":["121.8"],"扩展名加载":["121.11"],"入口不存在或无法解析":["121.13"],"则":["121.13"],"导致在基于内置模块进行项目开发时":["121.15"],"效率很低":["121.15"],"包是基于内置模块封装出来的":["121.15"],"yarn":["121.16","165.3"],"taobao":["121.17"],"切换源头":["121.17"],"description":["121.18"],"介绍包做的什么功能":["121.18"],"描述":["121.18","124.4"],"keywords":["121.18"],"关键字":["121.18"],"xxx":["121.18"],"xx":["121.18"],"还是第三方模块":["121.19"],"他们都会优先从缓存中加载":["121.19"],"扩展名进行加载":["121.21"],"如果以上两步都失败了":["121.23"],"测试是否正常工作":["122.2"],"query":["122.2"],"select":["122.2"],"优点":["122.5"],"前端耗时短":["122.5"],"浏览器只需直接渲染页面":["122.5"],"无需额外请求数据":["122.5"],"有利于":["122.5"],"页面在浏览器拼接完成":["122.6"],"因此爬虫无法爬取页面的有效信息":["122.6"],"可使用前后端分离":["122.7"],"eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9":["122.13"],"eyjpzci6mtcsinvzzxjuyw1lijoiqnj1y2uilcjwyxnzd29yzci6iiisim5py2tuyw1lijoiagvsbg8ilcjlbwfpbci6innjdxracxeuy29tiiwidxnlcl9wawmioiiilcjpyxqioje2nde4nju3mzesimv4cci6mty0mtkwmtczmx0":["122.13"],"bmqzaknszgd8izxrggyvlvwgl7egmtwitvjgd":["122.13"],"a5u5c":["122.13"],"使用方式":["122.13"],"客户端会把":["122.13"],"中间件配置成功后":["122.14"],"即可在那些有权限的接口中":["122.14"],"来访问从":["122.14"],"字符串中解析出来的用户信息":["122.14"],"admin":["122.14"],"getinfo":["122.14"],"global":["123.0"],"移除全局依赖项":["123.0"],"列出安装的依赖项":["123.0"],"ls":["123.0"],"卸载和共享":["124.1"],"并查看版本":["124.2"],"shell":["124.2","126.1"],"文件的":["124.3"],"scripts":["124.3","165.11"],"部分定义的脚本":["124.3"],"publish":["124.3"],"将自己的包发布到":["124.3"],"仓库":["124.3","125.5"],"入口文件等":["124.4"],"在项目中":["124.4"],"你可以手动编辑":["124.4"],"命令安装所有的依赖项":["124.5"],"仓库中":["124.6"],"使其可供其他开发者使用":["124.6"],"在发布包之前":["124.6"],"按照以下步骤进行操作":["125.0"],"npm":["125.2"],"文件":["125.3"],"readme":["125.4"],"md":["125.4"],"并使其对其他人可用":["125.5"],"文件中的版本号":["125.6"],"是你要移除的包的名称":["126.2"],"更新依赖项":["126.2"],"要更新依赖项到最新版本":["126.2"],"upgrade":["126.2"],"26px":["127.2"],"步行251米到":["128.1"],"解放碑":["128.1"],"实是一处观江景的好去处":["128.2"],"这里还是":["128.2"],"从你的全世界路过":["128.2"],"的取景地之一":["128.2"],"重走电影路也是不错的一项体验":["128.2"],"磁器口重庆古城的缩影和象征":["128.3"],"走在布满青苔的小路上":["128.3"],"历史气息扑面而来":["128.3"],"重庆湖广会馆":["128.4"],"购票":["128.4"],"手工怪味胡豆":["128.5"],"巴渝正月山城小汤圆":["128.5"],"酥肉":["128.5"],"林场方向":["130.1"],"站到":["130.1","130.4","135.2","137.5"],"乘坐地铁":["130.2"],"秣周东路":["130.2"],"乘坐环城游":["130.3"],"夫子庙瞻园":["130.3"],"米到达":["130.3"],"中山门":["130.4"],"下车步行":["130.4"],"米到":["130.4"],"红山动物园":["130.5"],"上饶出行公众号":["131.1"],"顺时针游览南清园景区":["131.2"],"返回宾馆":["131.3"],"南部索道下山":["131.3"],"现代城南方向":["131.4"],"槠溪老街上车":["131.4"],"站到东岳大桥北下车":["131.4"],"新火车站上车":["131.5"],"卷满肉泥的花卷":["132.1"],"晚上可以去":["132.1"],"看喷泉":["132.1"],"第一场":["132.1"],"韭菜大饼":["132.2"],"滕王阁":["132.2"],"夜间游轮":["132.2"],"江西省南昌市东湖区仿古街58号":["132.2"],"取票地点":["132.2"],"东湖区榕门路仿古街76号":["132.2"],"滕王阁游轮售票处":["132.2"],"南昌动物园":["132.3"],"江西省美术馆":["132.4"],"位于湖滨三公园附近":["134.2"],"感应桥南":["134.3"],"flags":["134.4"],"一号线到打铁关站内换乘五号线到大运河下车步行到终点":["134.4"],"江汉路":["135.1"],"工农兵路古德寺":["135.2"],"步行到":["135.2"],"1km":["135.3"],"到达":["135.3"],"东湖南路凌波门":["135.4"],"114m":["135.5"],"中北路地铁岳家嘴站":["135.5"],"乘坐":["135.5"],"附近居住":["136.1"],"居住":["136.1","137.1"],"停运":["136.2"],"地址":["136.2"],"芙蓉区解放西路":["136.2"],"号":["136.2"],"3eaf7c":["136.3","136.4"],"周一闭馆":["136.3"],"需提前预约":["136.3"],"早":["136.4"],"晚":["136.4"],"长沙排名第一的烧烤":["136.5"],"感受长沙夜宵文化必打卡店":["136.5"],"臭豆腐":["136.5"],"火宫殿":["136.5"],"游客专用":["136.5"],"黑色经典":["136.5"],"罗记臭豆腐":["136.5"],"文和友":["136.5"],"客串出品":["136.6"],"大钧哥排骨侠":["136.6"],"丹丹热卤等高分夜宵":["136.6"],"有几家还是明星常去的店哦":["136.6"],"其他注意事项":["136.6"],"details":["136.6","165.7"],"点击查看":["136.6"],"路边的水果捞千万别买":["136.6"],"死贵死贵的":["136.6"],"解放西附近的龙虾大排档别随便进":["136.6"],"火车站":["137.1"],"convenience":["137.1"],"梅阳花园方向":["137.2"],"华侨博物馆站":["137.4"],"石湖山公交场站方向":["137.4"],"允许控制绘图区域":["138.1"],"颜色":["138.1"],"线条":["138.1"],"轴上的位置以及宽度和高度等信息":["138.3"],"通过为图形或其他元素设置":["138.3"],"常见的":["138.4"],"绘图上下文时":["138.4"],"也可以绘制更高级的元素":["138.5"],"3d":["138.5"],"图形和曲线":["138.5"],"并使用":["138.6"],"来更新和显示数据":["138.6"],"语言或":["138.7"],"库":["138.7"],"jquery":["138.7"],"时存在差异":["138.8"],"因此需要在开发过程中进行跨浏览器的测试":["138.8"],"此外":["138.8"],"transform":["139.0"],"通过一个变换矩阵完成图像变换":["139.0"],"度的矩形":["139.1"],"方法必须在":["139.1"],"为水平翻转":["139.2"],"表示垂直翻转":["139.2"],"fillstyle":["139.3","140.1"],"fillrect":["139.4","140.1"],"原始图形是":["139.4"],"方法绘制的矩形":["139.5"],"左上角从":["139.5"],"平移到":["139.5"],"把图像源和目标图像":["140.0"],"使用异或操作对源图像与目标图像进行组合":["140.1"],"获取画笔":["141.1"],"2d":["141.1"],"设置或返回两条线相交时":["141.2"],"所创建的拐角类型":["141.2"],"linecap":["141.2"],"设置或返回线条的结束端点样式":["141.2"],"beginpath":["141.2"],"lineto":["142.1"],"方法定义一个辐射渐变":["142.2"],"需要指定两个圆":["142.2"],"r0":["142.2"],"r1":["142.2"],"方法接受六个参数":["142.2"],"是辐射起始的圆的圆心坐标":["142.2"],"是起始圆的半径":["142.2"],"pattern":["142.3"],"png":["142.3"],"onload":["142.3"],"rgba":["142.4"],"arcto":["144.3"],"方法主要用来绘制圆弧":["144.3"],"需要给出两个点的坐标":["144.3"],"当前点与第一个点形成一条直线":["144.3"],"第一个点与第二个点形成另一条直线":["144.3"],"然后画出与这两根直线相切的弧线":["144.3"],"第二种绘制图片的方式":["144.5"],"把图片缩放到600400":["144.5"],"top":["144.6"],"hanging":["144.6"],"middle":["144.6"],"ideographic":["144.6"],"bottom":["144.6"],"文本方向":["144.6"],"ltr":["144.6"],"scratchcard":["146.1"],"pagey":["146.2"],"math":["146.2"],"fill":["146.2","161.4","161.5","161.7","161.8"],"closepath":["146.2"],"random":["146.2"],"绘制分针":["147.3"],"stroke":["149.3","161.5"],"globalcompositeoperation":["149.3"],"source":["149.3"],"over":["149.3"],"linewidth":["149.3"],"nullbtn":["149.4"],"清空画布":["149.4"],"线宽":["149.4"],"alpha":["151.1"],"interactive":["151.2","152.7"],"给矩形添加点击事件":["151.2"],"图形和动画":["152.1"],"它提供了简单易用的":["152.1"],"进行降级渲染":["152.3"],"以确保在不支持":["152.3"],"它具有一致的接口设计和详细的文档":["152.4"],"滤镜":["152.5"],"filters":["152.5"],"它支持响应式设计":["152.6"],"resources":["152.7"],"texture":["152.7"],"允许交互":["152.7"],"endfill":["153.2","158.2","158.3","158.4","158.5"],"矩形缩放":["153.2"],"position":["153.2","158.1","158.2"],"位移":["153.2"],"pink":["154.1"],"设置文字位置":["154.1"],"screen":["154.1","160.1","160.2"],"jpg":["156.1"],"创建一个精灵":["156.1"],"sprite":["156.1","157.2","157.4"],"pointerover":["156.2"],"outerstrength":["156.3"],"强度":["156.3"],"innerstrength":["156.3"],"resolution":["157.1"],"devicepixelratio":["157.1"],"像素比":["157.1"],"设置缩放":["157.3"],"rotation":["157.4","160.1"],"创建容器":["160.0"],"设置位置":["160.1","160.2"],"旋转45度":["160.1"],"锚点":["160.2"],"anchor":["160.2"],"xml":["161.1"],"格式定义图形":["161.1"],"在不给":["161.1"],"y2":["161.3"],"ry":["161.6"],"opacity":["161.8"],"中表示":["162.0"],"物体形状的基本构建块":["162.0"],"提供了各种预定义的几何体":["162.0"],"如立方体":["162.0"],"球体":["162.0"],"圆柱体等":["162.0"],"也支持自定义几何体":["162.0"],"材质":["162.0"],"material":["162.0"],"材质定义了":["162.0"],"物体的外观和纹理":["162.0"],"提供了多种材质类型":["162.0"],"如基本材质":["162.0"],"meshbasicmaterial":["162.0"],"jsm":["163.6"],"controls":["163.6"],"camera":["163.7","163.8"],"renderer":["163.7"],"scene":["163.8"],"渲染下一帧的时候就会调用render函数":["163.8"],"单独设置某个轴的缩放":["164.1"],"官方网站":["165.0"],"blog":["165.1"],"也可以在":["165.2"],"vscode":["165.2"],"上使用":["165.2"],"按":["165.2"],"ctrl":["165.2"],"j":["165.2"],"about1":["165.6","165.9","165.10"],"功能":["165.7"],"特点":["165.7"],"具体描述信息":["165.7"],"关于2":["165.9"],"about2":["165.9"],"text代表每一项的名字":["165.9"],"link":["165.10"],"运行":["165.11"]},{"0":["5.6","8.6","11.2","18.8","21.13","48.3","54.8","67.13","104.4","109.2","120.10","142.3","153.2","157.4","164.3"],"1":["28.1","32.8","33.13","45.3","67.12","120.9","120.10"],"2":["4.12","6.4","17.13","18.7","18.11","28.1","37.2","120.7","130.5","154.1","156.1","165.7"],"3":["4.12","6.30","16.10","17.15","17.16","34.14","49.2","56.4","67.5","67.10","73.3","99.15","104.6","110.3","120.7","125.5","141.1","142.1"],"4":["4.5","4.12","4.14","6.4","6.16","16.3","16.5","17.16","29.11","30.8","48.7","49.2","57.3","67.5","67.6","67.7","67.11","75.0","99.1","99.21","147.3","160.1","160.2"],"5":["12.5","33.5","34.9","49.2","75.0","76.3","87.1","122.11","128.3","130.3","135.3","135.5","137.4","144.3","153.2"],"6":["5.10","17.6","28.32","38.0","67.8","75.0","122.14","136.5","157.3","162.0"],"7":["4.14","33.5","45.4","67.9","132.4","134.2","136.5","137.2"],"8":["28.32","54.3","99.8","120.10","120.17","134.2","160.1","160.2"],"9":["6.25"],"10":["13.4","28.32","67.3","103.3","120.10","135.4","136.2"],"11":["54.3"],"16":["67.11","136.4"],"18":["101.13","106.3"],"19":["67.8","113.4","132.2"],"20":["102.6","132.1","132.2","139.2"],"21":["73.4"],"24":["67.9"],"25":["28.24","144.3"],"26":["63.3","64.3"],"28":["28.21"],"30":["80.8","80.11","132.1","132.4"],"35":["68.2"],"40":["131.4"],"45":["34.15","132.1","132.2"],"50":["142.2","153.2","161.6"],"54":["33.13"],"60":["29.2","161.9"],"68":["67.6"],"70":["161.9"],"79":["29.2"],"80":["118.2","118.6","118.7","120.17"],"88":["120.10"],"94":["28.2"],"100":["73.4","140.1","145.2","158.3"],"120":["132.4"],"121":["134.3"],"123":["32.3","32.7","104.7","106.6","107.1"],"150":["145.2","153.2"],"160":["131.4"],"180":["67.12"],"200":["43.8","110.10","139.4","140.1","158.1","158.2"],"213":["106.5","109.2"],"248":["135.2"],"300":["43.6","43.8","158.1","158.3","158.4"],"350":["145.1"],"400":["43.6","130.2","143.0","144.4","144.5","158.4","158.5"],"402":["135.4"],"403":["110.11"],"404":["110.11"],"456":["34.15"],"500":["48.7","110.11","137.2","137.4","158.5"],"503":["98.4"],"504":["98.4"],"505":["98.4"],"560":["23.11"],"561":["135.3"],"566":["135.5"],"600":["4.4","158.2"],"730":["131.5"],"782":["135.5"],"807":["113.1"],"2019":["13.4"],"2038":["113.4"],"8080":["120.16"],"8601":["65.1"],"color":["4.2","127.2"],"ccc":["4.2","147.3"],"因为一个元素":["4.5"],"不可能即使":["4.5"],"又是":["4.5"],"span":["4.5","59.1"],"元素":["4.5","77.8","83.2"],"text":["4.6","4.9","9.1","78.5","85.14","154.2"],"align":["4.6"],"decoration":["4.9"],"underline":["4.9"],"选中div后所有的兄弟p元素":["4.9"],"通用兄弟选择器":["4.9"],"input":["4.11","26.2","89.7"],"textarea":["4.11","77.16"],"css":["4.12","5.3","5.4","6.31","6.33","31.0","56.1","61.1","110.9","118.8"],"啥都选不到":["4.12"],"ie6":["4.14"],"专有":["4.14"],"zoom":["4.14"],"父级元素添加双伪元素":["4.14"],"布局提供了一种直观而强大的方法":["5.0"],"项目":["5.1","165.11"],"可以通过":["5.1","52.5"],"主轴为水平方向":["5.2"],"或":["5.2","29.10","122.13"],"项目被拉伸以填满交叉轴空间":["5.3"],"container":["5.3","5.4"],"display":["5.3","5.9"],"项目逆向换行到上一行":["5.4"],"row":["5.5"],"水平排列":["5.5"],"200px":["5.7","6.11","8.2"],"项目的基准宽度为200像素":["5.7"],"wrap":["5.9"],"垂直居中":["5.10"],"设置":["5.10"],"实现垂直居中对齐":["5.10"],"规范中被称为":["6.1"],"layout":["6.1"],"items":["6.2"],"网格项可以跨越多个网格单元格":["6.2"],"100px":["6.3","6.6","6.8","6.11"],"auto":["6.3","6.8"],"网格项跨越第二列到第四列":["6.4","6.16"],"属性":["6.5","13.4","17.17","60.2","62.1","80.3","80.4","83.2","121.8"],"三列":["6.6"],"第二列是第一列的两倍宽度":["6.6"],"sidebar":["6.8"],"content":["6.8"],"20px":["6.9","6.10"],"行间距为":["6.9"],"列间距为":["6.10"],"定义两列":["6.11"],"center":["6.13","6.14","8.8"],"项目在列轴上居中对齐":["6.13","6.14"],"end":["6.15","120.16","120.17"],"项目在列轴上右对齐":["6.15"],"布局至关重要":["6.17"],"在上述示例中":["6.18","6.20","6.22","6.23","6.24","6.25","45.3","55.3","69.9"],"我们使用":["6.18","80.14","82.4"],"关键字和":["6.18"],"单位来设置网格轨道的大小":["6.18"],"函数来定义网格模板":["6.19"],"它可以简化重复的设置":["6.19"],"通过":["6.19","52.5","90.10","120.6","122.14"],"大于1200px时":["6.20"],"使用三列布局":["6.20"],"我们使用媒体查询来根据不同屏幕尺寸应用不同的网格布局":["6.20"],"当屏幕宽度大于":["6.20"],"我们创建了一个简单的网页布局":["6.22"],"footer":["6.23","6.24"],"我们创建了一个复杂的网页布局":["6.23"],"其中使用了":["6.23"],"我们创建了一个嵌套的网格布局":["6.24"],"它们分别适用于不同的布局需求":["6.26"],"并可以结合使用以实现复杂的布局":["6.26"],"布局适用于简单的水平或垂直布局":["6.27"],"如导航菜单":["6.27"],"共同点":["6.28"],"都支持灵活的响应式设计":["6.28"],"可以根据屏幕尺寸和设备动态调整布局":["6.28"],"以下是一些最佳实践和优化建议":["6.29"],"前缀或回退方案":["6.31"],"布局时":["6.32"],"建议合理控制网格项的数量和布局复杂度":["6.32"],"使用":["6.33","87.6","89.31","122.3"],"前缀和回退方案":["6.33"],"确保在不支持":["6.33"],"相同级别的选择器":["7.0"],"显示最后面的样式":["7.0"],"特殊规则":["7.1"],"行内样式":["7.1"],"权重大于":["7.1"],"所有选择器":["7.1"],"important":["7.1"],"的权重":["7.1"],"大于":["7.1"],"水平居中":["8.1"],"background":["8.2","8.3","9.3","78.21"],"skyblue":["8.3"],"right":["8.6"],"height":["8.7","129.0","132.0","133.0","135.0"],"100vh":["8.7"],"1px":["9.0"],"solid":["9.0"],"超出的内容溢出隐藏":["9.1"],"设置溢出隐藏":["9.2"],"ellipsis":["9.2"],"隐藏的文本以省略号显示":["9.2"],"word":["9.2"],"break":["9.2"],"0px":["9.3"],"bottom":["9.3"],"fff":["9.3"],"thumb":["10.0"],"border":["10.0"],"radius":["10.0"],"10px":["10.0","11.1"],"朝左的三角形":["11.1"],"polygon":["11.2"],"的概念":["12.0"],"允许我们以一种更面向对象的方式来创建和管理对象":["12.0"],"我的名字是":["12.1","20.1"],"并且我":["12.1"],"我的名字是john并且我30岁了":["12.2"],"console":["12.3","14.6","15.22","16.4","16.5","16.10","17.6","17.15","18.18","18.19","20.1","20.6","28.7","28.8","28.28","28.29","30.6","33.9","33.10","34.2","43.6","54.5","54.8","76.12","79.6","79.11","98.3","120.14","120.17","122.2","144.6","151.2"],"log":["12.3","14.5","14.6","15.16","15.21","15.22","16.3","16.4","16.5","16.6","16.10","17.6","17.15","18.18","18.19","20.1","20.6","28.7","28.8","28.31","29.8","30.6","34.2","43.6","54.5","63.2","64.2","73.7","73.12","73.13","73.16","73.19","76.12","79.6","79.11","98.3","104.4","120.14","122.2","144.6","146.2","151.2"],"我是一名":["12.3"],"我":["12.4"],"age":["12.4","20.21","63.4","64.4","73.20","89.13"],"tip":["12.6","19.5","26.5","30.7","47.2","50.3","52.4","55.4","71.2","76.11","91.10","91.16","144.3"],"总结":["12.6","26.5","29.10","47.2","71.2","84.6"],"es6":["12.6"],"中的类提供了更接近传统面向对象编程的语法":["12.6"],"使得创建和管理对象更加简洁和直观":["12.6"],"类的继承":["12.6"],"方法重写":["12.6"],"作为":["13.2"],"的一种实现":["13.2"],"是最广泛使用的一种":["13.2"],"其他脚本语言可以基于":["13.2"],"apis":["13.3","56.2","56.5"],"等":["13.3","34.12","66.9","162.0"],"环境中的组成关系":["13.3"],"finally":["13.4"],"用于在":["13.4"],"结束时执行回调":["13.4"],"rest":["13.4"],"spread":["13.4"],"提供了更便捷的对象和数组操作":["13.4"],"es10":["13.4"],"es2019":["13.4","17.20"],"flat":["13.4"],"使用迭代器遍历map的键":["14.2"],"keysiterator":["14.2"],"for":["14.2"],"of":["14.2"],"使用迭代器遍历map的值":["14.2"],"valuesiterator":["14.2"],"outarray":["14.4"],"解构传参":["14.6"],"使得":["15.1","57.4"],"可以更好地组织和管理代码":["15.1"],"和导出":["15.2"],"export":["15.2","83.3","83.4","83.5","89.31","110.8"],"机制进行交互":["15.2"],"以便其他模块可以使用它们":["15.6"],"name":["15.7","15.8","15.13","36.1","78.10","78.12","78.17","85.12","110.8"],"john":["15.7","63.1","64.1","73.9","73.10","73.17","78.12","80.7","80.14"],"hello":["15.8","15.12","15.13","77.23","78.7","78.10","78.11","78.20","79.5","120.3","139.2","144.6"],"my":["15.9","15.13"],"is":["15.9","26.3"],"输出":["15.11","15.12","15.16","15.17","15.18","15.21","16.6","49.1","53.7","53.9","63.2","64.2","70.1","70.3","74.1"],"alice":["15.14"],"bob":["15.18"],"object":["15.19"],"在日常开发中":["15.28"],"应该积极运用":["15.28"],"中的元素是唯一的":["16.1"],"array":["16.6","28.28","28.29","28.30"],"true":["16.7","34.5","34.9","35.7","49.6","73.11","74.1","80.9","84.3","84.4","84.5","89.4","89.16","101.8","104.3","110.9"],"对象中的按插入顺序排列的所有元素的值":["16.9"],"e":["16.12","151.2"],"l":["16.12"],"o":["16.12","18.12"],"注":["16.12"],"中":["16.12","89.1","97.1","122.13"],"解构传入":["16.14"],"传入":["16.15","61.1"],"中是否存在":["16.15"],"filter":["16.16"],"x":["16.16","20.6","32.4","103.4","139.4","164.1","164.2"],"has":["16.16"],"不会使用默认值":["17.4"],"没有第二个参数时":["17.5"],"函数参数的默认值就会生效":["17.5"],"然后才是解构赋值的默认值生效":["17.5"],"才会取到默认值":["17.5"],"注意":["17.5","32.7","50.3","76.11"],"函数参数的默认值生效以后":["17.5"],"参数解构赋值依然会进行":["17.5"],"f":["17.5"],"a":["17.5","26.3","28.24","33.13","85.16","120.1","149.3"],"b":["17.5","21.3","28.24","34.15","99.19"],"world":["17.5","139.2"],"foo":["17.6","17.7","67.14"],"注明":["17.7"],"这样做的好处是增加函数的健壮性":["17.7"],"某一个参数不得省略":["17.7"],"如果省略就抛出一个错误":["17.7"],"js":["17.7","17.12","33.9","33.10","89.2","97.1","97.2","121.13"],"function":["17.7","17.12","32.10","34.8","66.1","73.2","106.7","118.7"],"throwifmissing":["17.7"],"throw":["17.7","101.11"],"new":["17.7","43.3","50.3","53.6","53.8","70.1","76.8","101.11","102.2","102.6","102.11","149.3","157.2"],"error":["17.7","101.11","102.11","121.23"],"missing":["17.7"],"parameter":["17.7"],"mustbeprovided":["17.7"],"return":["17.7","79.5","79.6","79.9","87.3","89.2","89.31","101.14","106.7","120.12","122.2"],"上面代码的":["17.7"],"函数":["17.7","52.5","76.11","76.14","89.2"],"如果调用的时候没有参数":["17.7"],"就会调用默认值":["17.7"],"展开语法将数组展开为其中的各个元素":["17.9"],"而剩余语法则是将多个元素收集起来成为一个整体":["17.9"],"使用方式很简单在函数定义时使用":["17.10"],"紧接着跟一个收集的参数":["17.10"],"这个收集的参数就是我们所传入不定参数的集合":["17.10"],"也就是数组":["17.10"],"这样就很简单地摆脱了":["17.10"],"的束缚":["17.10"],"另外":["17.10"],"还可以指定一个默认的参数":["17.10"],"如下示例":["17.10"],"基础参数":["17.10"],"剩下的参数组成的数组":["17.10"],"剩余参数的位置":["17.11"],"剩余参数只能是最后一个参数":["17.11"],"之后不能再有其他参数":["17.11"],"fun":["17.12"],"c":["17.12","18.11","21.6","78.19","106.6"],"nan":["17.12","67.14","68.1","73.15"],"和":["17.12","20.4","29.6","48.0","55.3","58.8","80.3","81.11","91.15","138.3"],"都是":["17.12"],"undefined":["17.12","21.2","34.6"],"和展开语法相反":["17.13"],"结合使用":["17.14"],"使得代码更加现代化和易读":["17.14"],"在上面的例子中":["17.17","70.3","80.4","80.14","81.13","82.5","83.3","83.4","83.5"],"传统函数的":["17.17"],"方法使用了对象的":["17.17"],"因此":["17.17","32.13"],"指向了":["17.17"],"对象":["17.17","74.2"],"应使用传统函数而非箭头函数":["17.18"],"箭头函数在":["17.18"],"javascript":["17.18","56.1","81.1","138.5"],"代码中广泛使用":["17.18"],"做出了改变":["17.20"],"允许":["17.20"],"语句省略参数":["17.20"],"就不可变":["18.1"],"concat":["18.2"],"tolowercase":["18.5"],"touppercase":["18.5"],"foo000":["18.8"],"at":["18.19"],"cond":["18.20"],"并允许在字符串中插入变量":["19.1"],"表达式和多行文本":["19.1"],"模板字符串的引入简化了字符串拼接和多行文本的创建":["19.5"],"使得代码更加清晰易读":["19.5","22.0"],"在现代":["19.5"],"等同于hello":["20.1"],"this":["20.1","71.0","75.0","78.11"],"这种写法用于函数的返回值":["20.1"],"将会非常方便":["20.1"],"getpoint":["20.1"],"上面代码中":["20.4","144.3"],"得到的都是":["20.4"],"所以":["20.4"],"会把":["20.4"],"等价于":["20.5","32.8"],"null":["20.12","34.1","34.6","43.4","79.8","79.10","101.7"],"银色":["20.21"],"应用":["20.21"],"合并默认参数和用户参数":["20.21"],"loguser":["20.21"],"useroptions":["20.21"],"defaults":["20.21"],"username":["20.21"],"zhangsan":["20.21"],"不能转换为":["21.3"],"item":["21.9","28.30"],"自动跳过空位":["21.16"],"n":["21.17","33.5","34.6"],"无论是数组解构还是对象解构":["22.0"],"暂停和音量控件":["23.0"],"在":["23.0","80.3","81.14","89.2","110.8"],"与":["23.0","23.5"],"之间你需要插入浏览器不支持的":["23.0"],"元素的提示文本":["23.0"],"audio":["23.6"],"track":["23.6"],"ie":["23.7"],"下可以正常使用":["23.7"],"chrome":["23.7"],"重新加载":["23.8"],"您的浏览器不支持":["23.10"],"play":["23.11"],"else":["23.11","43.6","48.6","51.4","65.5","101.12","101.14","146.2"],"pause":["23.11"],"使得网页可以在浏览器中正确显示和呈现":["24.0"],"定义文档使用的字符编码":["24.1"],"通常使用":["24.1"],"以支持多语言字符集":["24.1"],"定义网页的标题":["24.1"],"显示在浏览器的标题栏或标签页上":["24.1"],"用于创建无序列表":["24.2"],"ol":["24.2"],"有序列表和列表项标签":["24.2","26.1"],"用于创建有序列表":["24.2","26.1"],"div":["24.2","78.20","89.1","91.13","91.17"],"容器标签":["24.2"],"地理定位":["24.3"],"本地存储等":["24.3"],"这些新特性使得开发者可以更轻松地构建功能丰富":["24.3"],"是网页开发的基础":["24.4"],"它通过一系列标签和元素来描述网页的结构和内容":["24.4"],"html5":["24.4"],"引入了许多新特性":["24.4"],"使得网页开发更加强大和灵活":["24.4"],"以确保它们不会被渲染":["25.0"],"请在复制代码时将特殊字符删除":["25.0"],"这是h5级别的标题":["25.1"],"点击这里跳转到示例网站":["25.3"],"示例图片":["25.4"],"列表项3":["25.5","25.6"],"标签":["25.8"],"单元格2":["25.9"],"复选框":["25.11"],"value":["25.13","89.6","109.2"],"版权所有":["25.14"],"mp3":["25.15"],"您的浏览器不支持音频播放":["25.15"],"块级标签和内联标签":["26.0"],"table":["26.1"],"tr":["26.1"],"th":["26.1"],"用于插入一个换行符":["26.2"],"输入标签":["26.2"],"用于创建各种输入字段":["26.2"],"paragraph":["26.3"],"不同的标签可以接受不同的属性":["26.4"],"它们有不同的用途和功能":["26.4"],"例如设置样式":["26.4"],"标签用于定义网页的结构和内容":["26.5"],"通过块级标签和内联标签可以构建丰富多样的网页布局和内容展示":["26.5"],"数字":["28.0"],"布尔值等":["28.0"],"arr2":["28.1"],"空属性":["28.2"],"下面对数组常用的操作方法做一个归纳":["28.5"],"map":["28.27"],"index":["28.30","110.8","121.13","128.0","130.0","131.0","134.0","136.0","137.0"],"如果希望可以控制多行代码":["29.1"],"可以使用":["29.1","87.1","87.3","138.5"],"将语句扩起来":["29.1"],"最佳实践":["29.1"],"即使if后只有1行代码":["29.1"],"我们也应该编写代码块":["29.1"],"手机一台":["29.2"],"奖励一本参考书":["29.2"],"参考书一本":["29.2"],"其他时":["29.2"],"false":["29.3","33.12","98.2","104.3"],"则继续比较其他":["29.3"],"后的表达式":["29.3"],"直到找到":["29.3"],"为止":["29.3"],"语法":["29.4","77.22"],"如此重复":["29.5"],"知道条件表达式结果为":["29.5"],"的区别":["29.6"],"while语句是先判断再执行":["29.6"],"keys":["29.10"],"将对象转换为可迭代对象后再使用":["29.10"],"in":["29.10"],"循环的迭代顺序是确定的":["29.11"],"因为可迭代对象的值是按照一定顺序排列的":["29.11"],"迭代对象的原理不同":["29.11"],"就是封装了一段可被重复调用执行的代码块":["30.0"],"调用的方式":["30.2"],"函数调用必须写到函数体下面":["30.2"],"叫花鸡":["30.6"],"尽量让实参的个数和形参相匹配":["30.7"],"小结":["30.7"],"函数可以带参数也可以不带参数":["30.7"],"声明函数的时候":["30.7"],"函数名括号里面的是形参":["30.7"],"形参的默认值为":["30.7"],"返回的是一个数组":["30.8"],"我们的函数如果有return":["30.8"],"则返回的是":["30.8"],"如果函数么有":["30.8"],"则返回undefined":["30.8"],"fun1":["30.8"],"还能够返回":["30.9"],"语句中的值":["30.9"],"调用":["30.11"],"其实本质已经调用了":["30.12"],"多个立即执行函数之间用分号隔开":["30.12"],"一起使用":["31.0","91.15"],"用于创建动态网页和":["31.0"],"alert":["31.1","65.5","85.13"],"那么内部的":["31.4"],"代码没有作用":["31.4"],"html":["31.7","61.0","90.9","118.8"],"键值":["32.2"],"成员的值":["32.2"],"键名与键值之间用冒号分隔":["32.2"],"第二个键值对是":["32.2"],"指向对象":["32.3"],"就可以链式引用":["32.3"],"对象的属性之间用逗号分隔":["32.3"],"最后一个属性后面可以加逗号":["32.3"],"trailing":["32.3"],"comma":["32.3"],"也可以不加":["32.3"],"m":["32.3"],"上面的代码中":["32.3","32.4"],"属性后面的那个逗号":["32.3"],"y":["32.4","42.1","125.2","154.1","156.1"],"当":["32.4"],"中反映得最明显":["32.5"],"加不加引号都可以":["32.7"],"因为会被自动转为字符串":["32.7"],"数值键名不能使用点运算符":["32.7"],"因为会被当成小数点":["32.7"],"只能使用方括号运算符":["32.7"],"命令只能删除对象本身的属性":["32.10"],"无法删除继承的属性":["32.10"],"关于继承参见":["32.10"],"面向对象编程":["32.10"],"章节":["32.10"],"tostring":["32.10","120.10"],"native":["32.10"],"code":["32.10"],"是否为对象自身的属性":["32.11"],"if":["32.11","35.7","79.10","120.12","122.2","146.1"],"一般情况下":["32.12"],"都是只想遍历对象自身的属性":["32.12"],"所以使用":["32.12"],"的时候":["32.12"],"应该结合使用":["32.12"],"hasownproperty":["32.12"],"方法":["32.12","53.4","76.5","82.7","118.12"],"在循环内部判断一下":["32.12"],"某个属性是否为对象自身的属性":["32.12"],"person":["32.12"],"根本无法判断":["32.13"],"到底是全局变量":["32.13"],"还是对象":["32.13"],"的一个属性":["32.13"],"这非常不利于代码的除错和模块化":["32.13"],"编译器也无法对这段代码进行优化":["32.13"],"只能留到运行时判断":["32.13"],"这就拖慢了运行速度":["32.13"],"建议不要使用":["32.13"],"可以考虑用一个临时变量代替":["32.13"],"obj1":["32.13"],"逻辑运算符":["33.1"],"赋值运算符":["33.1"],"30000000000000004":["33.2"],"模等于":["33.3"],"result":["33.5","97.4"],"aaa":["33.7"],"abc":["33.7","69.3","69.4","69.6","69.10"],"全等":["33.7"],"要求值和数据类型都一致":["33.7"],"则返回第二个值":["33.9"],"则返回第二个":["33.10"],"symbol":["34.1","47.5"],"不是数值":["34.2"],"用于表示本来要返回数值的操作失败了":["34.2"],"而不是抛出错误":["34.2"],"java":["34.4"],"只要变量要保存对象":["34.5"],"任意对象":["34.6"],"push":["34.10","49.3","49.4","49.6","51.4","81.15"],"函数声明和函数表达式两种方式":["34.11"],"利用":["34.14"],"拼接字符串的方法实现转换效果":["34.14"],"隐式转换":["34.14"],"直到读取到字符串中所有的有效的小数":["34.15"],"123px":["34.15"],"a123":["34.15"],"下面来举个例子":["34.17"],"的值赋给":["34.18"],"实际上他们共同指向了同一个堆内存对象":["34.19"],"所以更改":["34.19"],"会对":["34.19"],"复杂类型赋值":["34.20"],"是将保存对象的内存地址赋值给另一个变量":["34.20"],"反复多次使用":["35.1"],"声明同一个变量也没有问题":["35.1"],"两个关键字不能重复声明":["35.2"],"没有定义":["35.3"],"let":["35.3","43.8","144.6"],"不过":["35.4"],"声明还是在全局作用域中发生的":["35.4"],"变量会在整个页面生命周期内续存":["35.4"],"typeof":["35.5"],"操作符也不能解决":["35.5"],"会输出0":["35.6"],"setattribute":["36.1","36.2","149.3"],"修改元素的属性":["36.2"],"的页面":["37.1"],"go":["37.2","81.15"],"版本":["38.0"],"用户代理字符串等":["38.0"],"它还可以用于检测浏览器的功能和特性":["38.0","40.0"],"screen":["38.0","156.1"],"它提供了关于用户屏幕的信息":["38.0"],"如屏幕的尺寸":["38.0"],"分辨率等":["38.0"],"可以使用它来调整页面在不同屏幕上的显示":["38.0","41.0"],"主机名":["39.0"],"路径和查询参数等":["39.0"],"加载一个新的":["39.1"],"com":["39.2","125.1"],"重新加载当前页面":["39.2"],"platform":["40.1"],"运行浏览器的操作系统平台":["40.1"],"pixeldepth":["41.1"],"获取屏幕的颜色深度":["41.2"],"屏幕颜色深度":["41.2"],"以及与窗口内容交互的功能":["42.0"],"将窗口移动到指定的位置":["42.1"],"将窗口移动到屏幕左上角":["42.2"],"moveto":["42.2"],"然后用":["43.1"],"来操作":["43.1"],"对象提供的":["43.2"],"onreadystatechange":["43.2"],"事件监听服务器端你的通信状态":["43.2"],"接受并处理服务端向客户端响应的数据结果":["43.2"],"xhr":["43.3"],"可选的用户名用于认证用途":["43.4"],"方法中的":["43.5"],"url":["43.5","81.7","81.11","118.8"],"地址中":["43.5"],"发送请求数据中的":["43.5"],"服务端返回的结果":["43.6"],"status":["43.8","43.9"],"success":["43.8","101.5","122.11"],"请求失败后的回调函数":["43.9"],"使得这些变量在内部函数执行时仍然可用":["45.0"],"以下是闭包的一些关键概念和用法":["45.0"],"可以访问外部函数":["45.1"],"中的":["45.1","87.3","87.5","140.0"],"函数作用域内的":["45.2"],"变量":["45.2"],"每次调用":["45.2"],"函数返回了一个包含":["45.3"],"可以延迟执行函数":["45.4"],"在某些场景中":["45.4"],"可以将函数包裹在闭包中":["45.4"],"并在需要时再调用执行":["45.4"],"以实现延迟执行的效果":["45.4"],"封装代码和状态":["45.5"],"并提供模块化的解决方案":["45.5"],"在编写复杂的":["45.5"],"并将原始对象":["46.1"],"的属性复制到新对象中":["46.1"],"但是":["46.1"],"此方法使用递归函数":["46.2"],"来复制对象的所有属性":["46.2"],"递归函数首先检查属性是否是基本类型或":["46.2"],"如果是":["46.2"],"则直接返回该属性":["46.2"],"如果是引用类型":["46.2"],"则创建一个新的对象或数组":["46.2"],"并递归复制嵌套的属性":["46.2"],"并返回":["47.1"],"的结果":["47.1"],"通过调用":["47.1"],"我们获得一个新函数":["47.1"],"它将传递的参数与":["47.1"],"可以简化函数柯里化的实现":["47.2"],"这些库提供了一些函数来帮助创建和组合柯里化函数":["47.2"],"简化开发过程":["47.2"],"函数首先检查传入的参数个数是否达到了原始函数的要求":["47.4"],"如果达到了":["47.4","47.6"],"则直接调用原始函数":["47.4","47.6"],"这种方法与前面的闭包递归方式类似":["47.5"],"但引入了一个占位符的概念":["47.5"],"函数检查传入的参数个数是否达到了原始函数的要求":["47.6"],"否则返回一个新的箭头函数":["47.6"],"对此我们就可以采用":["48.0"],"throttle":["48.0"],"防抖":["48.0"],"keydown":["48.1","48.4"],"和延迟时间":["48.2"],"返回一个新的函数":["48.2"],"该函数在延迟时间内只能执行一次":["48.2"],"当函数被调用时":["48.2"],"arguments":["48.3"],"cleartimeout":["48.3"],"表单事件":["48.4"],"settimeout":["48.5"],"apply":["48.5","48.6"],"debouncehandlescroll":["48.7"],"将函数绑定到事件上":["48.7"],"indexof":["49.5"],"中的所有任务执行完毕":["50.1"],"就会去任务队列中将对应的任务事件放入执行栈中执行":["50.1"],"主线程就是这样重复执行上面的步骤形成一个循环叫":["50.1"],"event":["50.1","58.2"],"先微后宏":["50.2"],"一个宏任务执行完后会立即执行该宏任务中的微任务队列":["50.2"],"直至微任务队列清空继续执行任务队列中的下一个宏任务":["50.2"],"宏任务执行完会去清空微任务队列":["50.2"],"清空微任务后如果有":["50.2"],"再按照循环第一遍中的顺序":["50.3"],"去执行":["50.3"],"完成打印":["50.3"],"promise是同步的":["50.3"],"promise":["50.3"],"res4":["51.3"],"通过链式调用的方式":["52.0"],"使得异步操作的处理更加优雅和可读":["52.0"],"callback":["52.0"],"hell":["52.0"],"并将成功的结果":["52.1"],"传递给它":["52.1"],"当异步操作失败时":["52.1"],"方法中传递的函数会在异步操作失败时被调用":["52.2"],"成功的结果":["52.3"],"并返回另一个":["52.3"],"还有许多其他方法和特性":["52.4"],"例如":["52.4","118.8","118.11","124.4"],"race":["52.4"],"resolve":["52.4"],"当请求发生错误时":["52.5"],"函数调用":["52.5"],"将网络错误信息传递给":["52.5"],"使用封装的":["52.5"],"的":["52.5","87.6","101.5"],"方法处理请求成功的响应":["52.5"],"chain":["53.1"],"访问其他对象的属性和方法":["53.1"],"原型链是一个对象关联到其他对象的链条":["53.1"],"并调用":["53.2"],"方法时":["53.2"],"会首先查找":["53.2"],"对象本身是否有":["53.2"],"对象的原型对象是":["53.3"],"它是所有":["53.3"],"构造函数有一个":["53.4"],"而":["53.4"],"构造函数继承了":["53.4"],"构造函数":["53.4"],"并在其原型上创建了一个新对象":["53.4"],"该对象的原型是":["53.4"],"const":["53.6","69.6","70.1","89.5","106.1"],"buddy":["53.6","53.7","53.8","70.1"],"golden":["53.6","53.8"],"retriever":["53.6","53.8"],"以避免不必要的复杂性":["53.11"],"这种不同的方式可以导致不同的编程风格和理念":["53.13"],"而不是修改原型":["53.15"],"特别是当有大量对象实例时":["53.16"],"以避免不必要的覆盖":["53.17"],"并指定其原型":["53.18"],"它可以帮助你更清晰地定义对象之间的继承关系":["53.18"],"我们可以对数组中的每个元素进行自定义的累积运算":["54.0"],"最终得到一个累积结果":["54.0"],"是初始值":["54.1"],"在上面的示例中":["54.3"],"务必确保回调函数的正确性和无副作用":["54.9"],"以免产生意外的结果":["54.9"],"是一个全局变量":["55.1"],"在任何地方都可以访问":["55.1"],"是":["55.2"],"函数的局部变量":["55.2"],"在该函数内部和其嵌套函数中可访问":["55.2"],"内部可以访问它的父级作用域中的变量":["55.3"],"的词法作用域规则决定了函数在定义时就创建了自己的作用域":["55.4"],"作用域是":["55.4"],"中重要的概念之一":["55.4"],"了解作用域的工作原理和规则对于正确编写和组织":["55.4"],"在任意节点前插入":["56.1"],"ul":["56.1"],"li":["56.1"],"web":["56.2","56.5","78.9"],"树的结构是层次化的":["57.1"],"由多个节点组成":["57.1"],"每个节点都有其特定的属性和方法":["57.1"],"可以用于获取或修改节点的信息":["57.1"],"添加":["57.1"],"如下图所示":["57.2"],"将":["57.2","77.22","83.4","122.13"],"文档以树状结构直观的表现出来":["57.2"],"标签的文字内容":["57.3"],"如":["57.3","77.1","77.20","116.1"],"title":["57.3"],"标签中的文字":["57.3"],"处理用户输入和交互等操作":["57.4"],"成为了":["57.4"],"事件":["58.0","90.5"],"鼠标拖拽":["58.1"],"网页中的一张图片":["58.1"],"事件处理程序的逻辑代码":["58.2"],"也可以使用箭头函数来定义事件处理程序":["58.2"],"eventhandler":["58.3"],"innertext":["58.5"],"鼠标移入了":["58.5"],"修改光标的风格":["58.5"],"style":["58.5","61.2","76.3","78.21","161.7"],"cursor":["58.5"],"move":["58.5"],"监听鼠标是移出当前":["58.5"],"事件只在按下字符键时才触发":["58.8"],"不会在按下非字符键":["58.8"],"type":["58.9","85.14","110.8"],"事件类型":["58.9"],"preventdefault":["58.9"],"阻止事件的默认行为":["58.9"],"resize":["58.11"],"scroll":["58.11"],"触摸事件":["58.11"],"touchstart":["58.11"],"选项2":["58.12"],"选项3":["58.12"],"getattribute":["59.0"],"获取元素的属性值":["59.0"],"p":["59.1","78.7","78.22","79.3","79.4","79.5","79.8","91.17"],"innerhtml":["59.2"],"childelement":["59.3"],"以下是一些常用的方法和技巧":["60.0"],"propertyvalue":["60.1"],"getpropertyvalue":["60.1"],"propertyname":["60.1"],"以满足具体的交互需求":["60.2"],"需要注意的是":["60.2"],"类名的操作只会修改元素的类列表":["60.2"],"而不会直接修改元素的":["60.2"],"class":["60.2","72.2"],"如果需要直接修改":["60.2"],"内容":["61.0"],"textcontent":["61.0","76.3","146.2"],"queryselector":["61.1"],"选择器":["61.1"],"attributename":["61.2"],"attributevalue":["61.2"],"修改元素的样式":["61.2"],"以下是":["62.0","63.0","64.0"],"使用等号分隔":["62.1"],"通过设置":["62.1"],"可以指定":["62.1"],"的过期时间":["62.1"],"返回一个字符串":["62.2"],"包含当前域名下的所有":["62.2"],"我们将":["62.3"],"的过期时间设置为过去的时间":["62.3"],"以免遭受安全风险":["62.4"],"是一种在客户端浏览器上存储数据的常用机制":["62.4"],"适用于在用户计算机中存储有关网站的信息":["62.4"],"它提供了简单的设置":["62.4"],"获取和删除操作":["62.4"],"可用于实现用户身份验证":["62.4"],"数据是相互隔离的":["63.6","64.6"],"在使用":["63.6","64.6","85.18"],"时":["63.6","64.6","74.2"],"需要注意浏览器对于隐私和安全方面的限制":["63.6","64.6"],"例如隐私模式下的":["63.6","64.6"],"访问可能被限制":["63.6","64.6"],"second":["65.1"],"设置日期的秒数为指定的值":["65.1"],"settime":["65.1"],"time":["65.1"],"设置日期为指定的时间戳":["65.1"],"todatestring":["65.1"],"将日期对象转换为可读的字符串":["65.1"],"只返回日期部分":["65.1"],"toisostring":["65.1"],"将日期对象转换为":["65.1"],"iso":["65.1"],"格式的字符串":["65.1"],"tojson":["65.1"],"返回日期对象的":["65.1"],"year":["65.2"],"monthindex":["65.2"],"day":["65.2"],"hours":["65.2"],"还有一种获取时间戳的方法":["65.4"],"今天是2100年1月14日之前":["65.5"],"开发者可以利用这些内置对象来编写更高效":["66.0"],"功能更强大的":["66.0"],"异常对象":["66.1"],"函数构造器":["66.1"],"属性的设置和获取等":["66.2"],"它是构建其他对象的基石":["66.2"],"的灵活性使得它在处理列表和集合数据时非常便利":["66.3"],"进行字符串操作和处理":["66.4"],"还可以用于日期和时间处理":["66.5"],"用于控制流程和决策":["66.6"],"如计算时间差":["66.7"],"添加或减去日期等":["66.7"],"可以用于复杂的数值计算和处理":["66.8"],"set":["66.9","158.2","158.3","158.4","158.5"],"它们提供了更特定的功能和方法":["66.9"],"的所有方法和属性都是静态的":["67.0"],"不包含":["67.4"],"表示非数值":["68.1"],"regular":["69.1"],"expression":["69.1"],"提供了强大的工具":["69.1"],"正则表达式是一种描述字符串模式的表达式":["69.1"],"它可以用来检查":["69.1"],"pattern":["69.3","69.6","69.10"],"标记子表达式的开始和结束位置":["69.5"],"并捕获匹配的子字符串":["69.5"],"hi":["69.8"],"正则表达式":["69.9"],"gi":["69.10"],"pattern2":["69.10"],"正则表达式是":["69.11"],"中强大的工具之一":["69.11"],"它提供了灵活和高效的字符串处理能力":["69.11"],"woof":["70.1"],"mydog":["70.1"],"labrador":["70.1"],"在构造函数内部":["71.0"],"通过使用":["71.0","80.1"],"使用类的好处是它更加直观":["71.2"],"能够更清晰地表达对象的结构和行为":["71.2"],"此外":["71.2","138.6"],"方法在原型上定义":["71.2"],"因此它们在实例之间共享":["71.2"],"不会造成内存浪费":["71.2"],"它们通过相互之间的交互来完成特定的任务":["72.1"],"之后":["72.2"],"引入了":["72.2"],"关键字":["72.2"],"使得定义类和创建对象更加简洁和直观":["72.2"],"sayhi":["73.2"],"调用对象的方法":["73.3"],"大白":["73.4"],"男":["73.4"],"smallbai":["73.4"],"小白":["73.4"],"返回一个给定对象自身可枚举属性的名称数组":["73.5"],"seal":["73.5"],"封闭一个对象":["73.5"],"防止添加新属性和删除现有属性":["73.5"],"values":["73.5"],"writable":["73.11"],"enumerable":["73.11"],"其原型指向":["74.2"],"当我们调用":["74.2"],"由于":["74.2"],"原型上的属性和方法是动态的":["74.3"],"可以在运行时进行修改和添加":["74.3"],"它们使得":["74.4"],"具有强大的面向对象特性":["74.4"],"在严格模式下被视为无效的":["75.0"],"禁止对只读属性赋值":["75.0"],"禁止使用":["75.0"],"with":["75.0"],"语句":["75.0"],"当函数执行完毕":["76.1"],"它所产生的执行期上下文会被销毁":["76.1"],"上下文对象":["76.2"],"在这里":["76.3"],"this指向绑定事件的按钮元素":["76.3"],"也就是button对象":["76.3"],"clicked":["76.3"],"修改按钮文本内容为":["76.3"],"backgroundcolor":["76.3"],"green":["76.3","142.4"],"将按钮背景颜色设置为绿色":["76.3"],"输出调用foo":["76.4"],"bind":["76.5"],"第一个参数中":["76.7"],"如果不需要改变":["76.7"],"自动拥有":["76.8"],"里的属性":["76.8"],"最终实现继承":["76.8"],"son1":["76.8"],"张三":["76.8"],"json":["76.8","98.3","113.5","117.4","118.8"],"stringify":["76.8"],"到这里可以看出":["76.10"],"方法的作用是相同的":["76.10"],"唯一的区别在于":["76.10"],"然后执行":["76.11"],"中元素的最大值":["76.12"],"minvalue":["76.12"],"min":["76.12","77.22"],"其他参数":["76.14"],"函数的实参":["76.14"],"解释":["76.14"],"它不会调用":["76.14"],"但会返回":["76.14"],"不是一个全能型框架":["77.1"],"而是一个仅关注于视图层的库":["77.1"],"它可以与其他库或框架":["77.1"],"redux":["77.1"],"从而降低了代码的耦合度":["77.3"],"提高了代码的可读性和可维护性":["77.3"],"技术使得":["77.4"],"可以实现高效的页面更新":["77.4"],"减少了不必要的":["77.4"],"从而提高了应用程序的可维护性和稳定性":["77.5"],"axios":["77.6"],"用于发送网络请求等":["77.6"],"这些工具的存在使得我们可以更加专注于业务逻辑的实现":["77.6"],"ui":["77.8","77.14","85.1"],"外观的":["77.8"],"会被转换成对应的":["77.9"],"我们可以通过":["77.10","81.14","82.3"],"来访问传递过来的数据":["77.10"],"来访问和更新":["77.11"],"通过状态管理":["77.11"],"生命周期方法允许我们在组件不同阶段执行相应的逻辑":["77.12"],"从而更好地控制组件的行为和状态":["77.12"],"事件处理和原生":["77.13"],"dom":["77.13","77.23","90.5"],"事件处理非常相似":["77.13"],"实现动态和灵活的界面展示":["77.14"],"我们可以轻松地展示数据列表":["77.15"],"如商品列表":["77.15"],"select":["77.16"],"我们可以在多个组件之间共享数据和状态":["77.17"],"并保持数据的一致性和同步性":["77.17"],"我们可以将通用的逻辑封装成函数":["77.18"],"然后将该函数应用到多个组件中":["77.18"],"上下文的使用需要谨慎":["77.19"],"避免滥用":["77.19"],"从而使函数组件在功能上更接近类组件":["77.20"],"同时避免了类组件的一些问题":["77.20"],"babel":["77.22"],"jsx":["77.22"],"结构如下":["77.23"],"react":["77.23"],"代码解释":["77.23"],"render":["77.23","77.24","79.6","79.8","79.9","79.11","81.12","122.6"],"createroot":["77.24"],"document":["77.24","80.7","80.8","80.9","80.14","81.12","157.1"],"getelementbyid":["77.24","80.14"],"root":["77.24","80.14"],"中扮演着非常重要的角色":["78.1"],"它是":["78.1"],"代码被转换为了一个函数调用":["78.2"],"第一个参数是标签名":["78.2"],"第二个参数是属性对象":["78.2"],"在这个例子中为空":["78.2"],"第三个参数是标签内容":["78.2"],"这个过程使得":["78.2"],"syntax":["78.4","78.8"],"placeholder":["78.5","89.7"],"enter":["78.5"],"about":["78.6"],"也是构建现代":["78.9"],"props":["78.11","90.8"],"和三元表达式":["78.13"],"来控制组件的渲染逻辑":["78.13"],"please":["78.14"],"sign":["78.14","78.15"],"up":["78.14","78.15"],"提供了方便的方式来实现列表渲染":["78.16"],"id":["78.17"],"onchange":["78.19"],"mycomponent":["78.20"],"usecontext":["78.21"],"button":["78.21","78.22","79.3","81.15","82.5","82.6","83.5"],"onclick":["78.22","81.15","82.5","82.6","83.5","152.7"],"生命周期对于优化性能":["79.0"],"处理副作用以及在开发过程中更好地掌握组件的行为至关重要":["79.0"],"快照":["79.1"],"componentdidupdate":["79.1"],"在组件更新之后调用":["79.1"],"使用组件并传递props":["79.4"],"reactdom":["79.4","80.10","80.11"],"处理数据":["79.6","79.11"],"使用getsnapshotbeforeupdate返回的快照进行处理":["79.10"],"进行一些操作":["79.10"],"中初始化状态和绑定方法":["79.13"],"中进行副作用操作":["79.13"],"在组件更新阶段":["79.13"],"shouldcomponentupdate":["79.13"],"中判断是否需要重新渲染":["79.13"],"允许我们向组件传递信息":["80.0"],"使组件能够根据外部数据的变化进行渲染和展示不同的内容":["80.0"],"是从父组件向子组件传递数据的主要方式":["80.1"],"上设置了":["80.3"],"并通过父组件传递了对应的值":["80.3"],"如果没有传递":["80.4"],"使用解构赋值":["80.5"],"可以直接将":["80.5"],"的值类型进行相应的渲染":["80.6"],"这样的设计有助于保持组件之间的独立性和可预测性":["80.12"],"进行意外的修改":["80.13"],"对":["80.14"],"我们可以将数据从父组件传递到子组件":["80.15"],"实现组件之间的数据传递和通信":["80.15"],"是只读的":["80.15"],"组件无法修改接收到的":["80.15"],"这有助于确保组件的数据流向更加可预测和可维护":["80.15"],"同时":["80.15","138.5","138.7"],"我们可以使用":["80.15","84.6"],"之后的页面切换是在客户端通过":["81.1"],"控制的":["81.1"],"只更新页面的部分内容":["81.1"],"属性指定":["81.3"],"路径":["81.3"],"组件":["81.4","85.18"],"从而实现页面之间的嵌套导航":["81.4"],"的语法来定义路由参数":["81.5"],"参数值可以通过":["81.5"],"match":["81.5","81.14"],"to":["81.6"],"属性指定链接的目标":["81.6"],"方法将新的":["81.7"],"添加到历史记录中":["81.7"],"add":["81.8","83.5","86.2"],"实现导航的基本步骤":["81.9"],"我们使用了":["81.11"],"组件来创建导航链接":["81.11"],"分别链接到":["81.11"],"页面":["81.11","91.2"],"然后使用":["81.11"],"指定":["81.11"],"路径和对应的页面组件":["81.11"],"我们新增了一个名为":["81.13"],"的页面组件":["81.13"],"并在":["81.13","81.14"],"组件中定义了一个嵌套路由":["81.13"],"当用户访问":["81.13"],"路径时":["81.13"],"组件会嵌套在":["81.13"],"组件中显示":["81.13"],"组件中定义了一个带有参数的路由":["81.14"],"表示这是一个路由参数":["81.14"],"params":["81.14","81.15"],"组件中获取传递的参数":["81.14"],"handlenavigate":["81.15"],"h2":["81.15"],"profile":["81.15","86.6"],"我们可以创建交互性和动态性的组件":["82.0"],"意味着数据流向是自上而下的":["82.1"],"通常":["82.1"],"是在组件的父组件中定义":["82.1"],"并通过":["82.1","83.4"],"并将其初始值设置为":["82.3"],"在组件的":["82.3"],"方法中":["82.3"],"我们定义了一个":["82.4"],"用于处理点击按钮时的事件":["82.4"],"在该方法中":["82.4"],"方法来更新":["82.4"],"increment":["82.5","82.6"],"我们在":["82.5"],"使用户界面能够随着用户操作或其他事件的发生而更新":["82.7"],"组件的一部分":["82.7"],"受到组件的生命周期和渲染过程的影响":["82.7"],"是单向数据流的一部分":["82.7"],"通常由父组件传递给子组件":["82.7"],"传递":["82.7"],"要正确地更新":["82.7"],"应始终使用":["82.7"],"并返回一个新的":["82.7"],"并将它们渲染到用户界面上":["83.0"],"我们可以轻松地生成多个元素":["83.1"],"并将它们动态地展示给用户":["83.1"],"并使用箭头函数生成一个新的":["83.2"],"我们为每个":["83.2"],"元素添加了":["83.2"],"用于帮助":["83.2"],"default":["83.3","83.4","83.5","89.31","110.11"],"我们使用条件语句判断数字的奇偶性":["83.3"],"并根据奇偶性为列表项设置不同的样式":["83.3"],"我们定义了一个名为":["83.4"],"的子组件":["83.4"],"数组传递给子组件":["83.4"],"并将它们渲染到用户界面上的技术":["83.6"],"我们可以使用数组的":["83.6"],"方法来实现列表渲染":["83.6"],"并根据条件来渲染不同样式的列表项":["83.6"],"通过将数据传递给子组件":["83.6"],"我们可以实现数据和渲染逻辑的分离":["83.6"],"使代码更加清晰和易于维护":["83.6"],"在使用列表渲染时":["83.6"],"我们应该遵循最佳实践":["83.6"],"从而实现动态和交互性的用户界面":["84.0"],"通过条件渲染":["84.1"],"我们可以根据不同的条件显示不同的组件":["84.1"],"或者在特定条件下渲染特定的内容":["84.1"],"我们通过":["84.2"],"状态来控制是否渲染欢迎消息":["84.2"],"如果用户已登录":["84.2"],"则渲染欢迎消息":["84.2"],"否则":["84.2","84.3","84.5"],"渲染提示信息":["84.2"],"为":["84.3","84.5","87.6"],"则返回":["84.3","84.4","84.5"],"返回":["84.3","84.4","84.5"],"的值":["84.5"],"的条件渲染是一种根据特定条件来决定是否渲染组件或组件的一部分的技术":["84.6"],"条件运算符等不同的方式来实现条件渲染":["84.6"],"使用npm安装vue":["85.3"],"message":["85.4"],"click":["85.7","151.2","152.7"],"handleclick":["85.7"],"hidden":["85.9"],"visible":["85.10"],"methods":["85.13"],"i":["85.16","99.16"],"am":["85.16"],"alive":["85.18"],"包裹的组件激活时调用":["85.18"],"deactivated":["85.18"],"停用":["85.18"],"确保您对":["86.1"],"使用yarn":["86.2"],"history":["86.3"],"userid":["86.6"],"child":["86.7"],"检查用户是否登录":["86.8"],"进行相关逻辑处理":["86.8"],"component":["86.9"],"lazyloadedcomponent":["86.10"],"vue":["86.10","89.1","89.9","89.21","89.22","110.2"],"页面等":["86.12"],"提供了一种可预测的方式来管理状态":["87.0"],"来改变状态":["87.1"],"modules":["87.1","90.11"],"模块":["87.1"],"当应用的状态较为复杂时":["87.1"],"将状态分割成多个子模块":["87.1"],"每个子模块有自己的":["87.1"],"支持插件":["87.2"],"可以方便地扩展和定制":["87.2"],"的状态":["87.3"],"通过计算属性获取状态":["87.3"],"count":["87.3"],"通过getters获取状态":["87.3"],"状态和两个":["87.4"],"在组件中":["87.4"],"我们通过调用":["87.4"],"会延迟":["87.5"],"秒钟":["87.5"],"然后通过":["87.5"],"mutation":["87.5","90.11"],"方法来修改":["87.5"],"状态":["87.5"],"返回所有的":["87.6"],"数组":["87.6"],"返回未完成的":["87.6"],"方法过滤出":["87.6"],"项":["87.6"],"这是一个带参数的":["87.6"],"在组件中调用时需要传入一个":["87.6"],"virtual":["88.1"],"使用虚拟":["88.1"],"来管理视图的渲染和更新":["88.1"],"当数据变化时":["88.1"],"会比较前后两个虚拟":["88.1"],"允许开发者更灵活地组织组件逻辑":["88.2"],"以及更好地重用和组合代码":["88.2"],"的设计也与":["88.2"],"的响应式系统紧密相关":["88.2"],"使得组件的代码更易于理解和维护":["88.2"],"总之":["88.2"],"的响应式原理通过":["88.2"],"对象来实现数据的监听和依赖追踪":["88.2"],"甚至是自定义指令也可以在我们的":["89.0"],"中自动获得":["89.0"],"本篇内容基于":["89.0"],"template":["89.1","89.31","91.2"],"setup":["89.2","110.8"],"出去才可以被使用":["89.2"],"函数创建的响应式数据":["89.2"],"在模板中可以直接被使用":["89.2"],"lisi":["89.6","102.6"],"app":["89.7","91.14","110.8","118.10","158.1","158.2","158.3","158.4"],"v":["89.7"],"model":["89.7","149.4"],"keyword":["89.7","124.3"],"be":["89.8"],"made":["89.8"],"test2":["89.10"],"state":["89.12"],"info":["89.15","110.10","123.0","124.3"],"deep":["89.16"],"是否立即调用一次":["89.16"],"旧的值":["89.17"],"immediate":["89.17"],"新的值":["89.18","89.19","89.20"],"从而可以收集需要监视的数据":["89.21"],"例如防抖":["89.22"],"所以即使组件销毁了":["89.23"],"监听器依然存在":["89.23"],"post":["89.24"],"组件更新后执行":["89.24"],"created":["89.25"],"这两个生命周期的":["89.25"],"unmounted":["89.27","89.28"],"指令被移除后调用":["89.27"],"卸载之前":["89.28"],"dir":["89.29"],"一个对象":["89.29"],"在注册指令时作为参数传递":["89.29"],"在以下指令中":["89.29"],"第三个":["89.29"],"当前元素的虚拟dom":["89.29"],"也就是vnode":["89.29"],"h3":["89.31"],"屏幕尺寸":["89.31"],"vc":["90.1"],"获取子组件的响应式数据以及方法":["90.1"],"slot":["90.1"],"插槽":["90.1"],"默认插槽":["90.1"],"子组件获取到":["90.2"],"change":["90.3"],"mouseenter":["90.3"],"mouseleave":["90.3"],"这类原生":["90.4"],"不管是在标签":["90.4"],"自定义标签上":["90.4"],"组件标签":["90.4"],"正常说组件标签书写":["90.5"],"应该为原生":["90.5"],"但是如果子组件内部通过":["90.5"],"实现":["90.6"],"官网地址":["90.6"],"https":["90.6"],"www":["90.6"],"实现父子数据同步":["90.7"],"方法获取组件属性与事件":["90.8"],"因此你也发现了":["90.8"],"它类似于":["90.8"],"可以接受父组件传递过来的属性与属性值":["90.8"],"需要注意如果":["90.8"],"因此可以使用父组件内部的数据与方法":["90.9"],"必须子组件内部拥有一个按钮点击时候获取父组件实例":["90.9"],"当然父组件的数据与方法需要通过":["90.9"],"方法对外暴露":["90.9"],"后代组件可以通过":["90.10"],"方法获取数据":["90.10"],"父组件内部代码如下":["90.12"],"立即使用即可":["91.2"],"无需引入":["91.2"],"componenta":["91.5"],"菜单区域":["91.6"],"abcde":["91.8"],"插值表达式渲染的内容都是一样的":["91.10"],"父组件模板中的表达式只能访问父组件的作用域":["91.10"],"页面还没加载出来展示的页面":["91.13"],"children":["91.14"],"默认":["91.14","110.6"],"transition":["91.15"],"如果传递普通的值":["91.16"],"是不具有响应式的":["91.16"],"子组件":["91.17"],"version":["92.3","124.2"],"lint":["92.4"],"where":["92.4"],"do":["92.4"],"prefer":["92.4"],"placing":["92.4"],"eslint":["92.4"],"它使用":["92.5"],"rollup":["92.5"],"打包你的代码":["92.5"],"切换目录":["92.6"],"安装包":["92.6"],"运行项目":["92.6"],"次pr":["93.1"],"vue3支持vue2的大多数特性":["93.1"],"shaking":["93.2"],"suspense":["93.3"],"异步加载组件的loading界面":["93.3"],"其它api更新":["93.3"],"generic":["94.1"],"t":["94.1"],"ts":["94.2"],"写法":["94.2"],"vue3":["94.2"],"就可以随意定义":["94.3"],"res":["97.3","102.11"],"对响应数据做点什么":["97.4"],"在设置请求时发生了一些事情":["97.5"],"触发了一个错误":["97.5"],"可以简化服务器返回的数据":["98.1"],"处理":["98.1"],"http":["98.1"],"请求超时设置":["98.2"],"withcredentials":["98.2"],"默认类型":["98.3"],"服务不可用":["98.4"],"服务暂时无法访问":["98.4"],"请稍后再试":["98.4"],"一次封装终身受益":["98.8"],"美团后端连连点赞":["98.8"],"查看全局配置":["99.1"],"list":["99.1","100.3"],"file1":["99.5"],"记录":["99.8"],"filename":["99.8"],"查看指定文件每一行修改对应的":["99.8"],"checkout":["99.10"],"到":["99.14","113.4","130.3","135.3"],"工作区和暂存区所有文件恢复成和":["99.15"],"hard":["99.15"],"rebase":["99.16"],"修改别名":["99.18"],"远程仓库分支名":["99.19"],"分支名":["99.20"],"delete":["99.21","112.2","118.12","122.3"],"强制推送":["99.21"],"downloads":["100.1"],"bash命令窗口":["100.2"],"文件":["100.4","110.8","118.8"],"这个文件一般在c盘的":["100.4"],"20230222161109182":["100.5"],"ddd":["101.1"],"binary":["101.2"],"0b1010":["101.2"],"二进制":["101.2"],"这样会报错":["101.3"],"应为事实上":["101.3"],"数字是没有length":["101.5"],"元组类型还可以支持自定义名称和变为可选的":["101.5"],"异构枚举":["101.6"],"可以同时包含数字和字符串":["101.6"],"那么":["101.8"],"会报错":["101.8"],"或者这样的":["101.9"],"es5都可以做到":["102.0"],"新的class写法只是让对象原型的写法更加清晰":["102.0"],"如果不写默认就是public":["102.4"],"ls":["102.6"],"super":["102.9"],"d":["102.10","121.21","121.22"],"zs":["102.11","106.2"],"无法创建抽象类的实例":["102.11"],"res1":["102.11"],"string":["103.4","110.8"],"args":["103.4"],"void":["103.5"],"params2":["103.5"],"默认t为boolean类型":["104.3"],"length":["104.4"],"而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程":["105.1"],"其次":["105.2"],"浏览器是不识别ts的":["105.2"],"所以在编译的时候":["105.2"],"可以直接转换":["105.3"],"有类型支持":["105.3"],"typescript":["105.5"],"但是便于后期的维护":["105.6"],"严格模式":["105.7"],"在tsconfig":["105.7"],"json中":["105.7"],"strict":["105.7"],"直接进行ts":["105.10"],"的抽象":["106.0"],"描述":["106.0"],"一样":["107.1"],"也是表示原始类型和非原始类型的集合":["107.1"],"a1":["107.1"],"a2":["107.1"],"a3":["107.1"],"baseurl":["108.0"],"用于解析非相对模块名称的基目录":["108.0"],"paths":["108.0"],"模块名到基于":["108.0"],"的路径映射的列表":["108.0"],"rootdirs":["108.0"],"根文件夹列表":["108.0"],"其组合内容表示项目运行时的结构内容":["108.0"],"typeroots":["108.0"],"包含类型声明的文件列表":["108.0"],"types":["108.0"],"需要包含的类型声明文件名列表":["108.0"],"allowsyntheticdefaultimports":["108.0"],"允许从没有设置默认导出的模块中默认导入":["108.0"],"source":["108.0"],"options":["108.0"],"sourceroot":["108.0"],"指定调试器应该找到":["108.0"],"文件而不是源文件的位置":["108.0"],"maproot":["108.0"],"指定调试器应该找到映射文件而不是生成文件的位置":["108.0"],"inlinesourcemap":["108.0"],"n2":["109.1"],"any类型":["109.1"],"定义值的别名":["109.2"],"boolean":["109.2"],"router":["110.2","111.0"],"pinia":["110.2"],"element":["110.2"],"plus":["110.2"],"create":["110.4"],"进入到项目根目录":["110.4"],"install":["110.4"],"指定解析器选项":["110.6"],"parseroptions":["110.6"],"ecmaversion":["110.6"],"latest":["110.6"],"校验ecma最新版本":["110.6"],"sourcetype":["110.6"],"设置为":["110.6"],"script":["110.6"],"或者":["110.6"],"uses":["110.8"],"防止":["110.8"],"src":["110.8","149.3"],"文件夹目录下创建一个":["110.8"],"用于注册":["110.8"],"components":["110.8"],"文件夹内部全部全局组件":["110.8"],"import":["110.8"],"svgicon":["110.8"],"from":["110.8"],"preprocessoroptions":["110.9"],"javascriptenabled":["110.9"],"additionaldata":["110.9"],"获取用户信息":["110.10"],"get":["110.10","110.12"],"request":["110.10"],"获取请求头携带token":["110.10"],"headers":["110.10"],"查看用户信息是否包含有次token用户":["110.10"],"无权访问":["110.11"],"请求地址错误":["110.11"],"服务器出现问题":["110.11"],"requserinfo":["110.12"],"退出登录":["110.12"],"要加上这段代码":["111.0"],"rewrite":["111.0"],"start":["111.1"],"命令":["112.0"],"删除一个表":["112.1"],"tables":["112.1"],"列出数据库中的所有表":["112.1"],"describe":["112.1"],"更新表中的数据":["112.2"],"更改用户的密码":["112.3"],"drop":["112.3"],"删除一个用户":["112.3"],"show":["112.3","146.1"],"中常用的数据类型":["113.0"],"utc":["113.4"],"类型等":["113.5"],"在设计表时":["113.5"],"数据库允许多个用户同时访问和共享数据":["114.0"],"同时提供了对数据的安全访问控制":["114.0"],"数据一致性和完整性":["114.0"],"数据库通过实施数据完整性约束和事务支持来保证数据的一致性和完整性":["114.0"],"教程和支持资源":["114.1"],"mysql提供了多种访问方式":["114.1"],"包括命令行客户端":["114.1"],"图形化客户端工具":["114.1","116.1"],"如mysql":["114.1"],"的基本使用步骤":["116.0"],"打开图形化客户端工具":["116.1"],"替换为您要使用的数据库的名称":["116.3"],"替换为您希望创建的表的名称":["116.4"],"等替换为表的列名":["116.5"],"替换为要检索数据的表的名称":["116.6"],"等替换为要更新的列名和相应的值":["116.7"],"替换为要删除数据的表的名称":["116.8"],"spa":["117.2"],"单页应用程序":["117.2"],"常见的":["117.2"],"要爬取的内容":["117.3"],"将数据写入文件中":["117.4"],"writefile":["117.4","120.3"],"files":["117.4","120.9"],"p1505392928":["117.6"],"大话西游之大圣娶亲":["117.6"],"西遊記大結局之仙履奇緣":["117.6"],"p2455050536":["117.6"],"熔炉":["117.6"],"도가니":["117.6"],"p1363250216":["117.6"],"教父":["117.6"],"godfather":["117.6"],"是用于快速创建服务器的第三方模块":["118.0"],"参数":["118.2"],"默认是一个空对象":["118.2"],"listen":["118.2","118.4","118.6","118.7","120.16","120.17"],"login":["118.3"],"通过带有":["118.3"],"前缀的地址访问":["118.3"],"目录下的文件":["118.3"],"添加访问前缀":["118.4"],"use":["118.4","118.10"],"api":["118.4","119.1","152.1"],"函数后别写代码":["118.5"],"多个中间件共享":["118.5"],"page":["118.6"],"快速托管静态资源的内置中间件":["118.8"],"图片":["118.8"],"样式等":["118.8"],"无兼容性":["118.8"],"解析":["118.8","122.14"],"格式的请求体数据":["118.8"],"有兼容性":["118.8"],"仅在":["118.8"],"版本中可用":["118.8"],"urlencoded":["118.8","118.14"],"的浏览器":["118.11"],"才能正常访问开启了":["118.11"],"的服务端接口":["118.11"],"put":["118.12"],"等方式请求服务器的资源":["118.12"],"alow":["118.12"],"来指明实际请求所允许使用的":["118.12"],"form":["118.14"],"multipart":["118.14"],"请求称为":["118.15"],"restify":["119.1"],"但不会处理具体的任务":["119.2"],"的背后还有一个线程池":["119.2"],"线程池会处理长时间运行的任务":["119.2"],"比如":["119.2"],"每秒的请求数维持在一个较低的水平":["119.3"],"追加":["120.1"],"ax":["120.1"],"存在失败":["120.1"],"将data写入到文件中":["120.3"],"lilichao":["120.4"],"desktop":["120.4"],"写入的内容":["120.6"],"w":["120.6"],"allounsafe":["120.8"],"可能包含敏感数据":["120.8"],"分配内存时不会清除内存残留的数据":["120.8"],"txt":["120.9"],"utf8":["120.9"],"创建一个10个字节的buffer":["120.10"],"buf2":["120.10"],"alloc":["120.10"],"通过索引":["120.10"],"来操作buf中的元素":["120.10"],"用来满足用户对路径的处理需求":["120.11"],"err":["120.12","122.2"],"datastr":["120.12"],"namewithoutext":["120.13"],"服务器的模块":["120.15"],"向客户端响应内容":["120.16"],"charset":["120.17"],"utf":["120.17"],"与外部其它模块通信":["121.2"],"模块化规范是对代码进行模块化拆分和组合时需要遵守的规则":["121.2"],"防止全局变量污染":["121.6"],"指向同一个对象":["121.7"],"最终共享的结果":["121.7"],"以":["121.7"],"将会试图加载目录下的":["121.13"],"提供了更高级":["121.15"],"更方便的":["121.15"],"极大提高了开发效率":["121.15"],"下载安装速度是比":["121.16"],"xxxx":["121.18"],"license":["121.18"],"isc":["121.18"],"开源协议":["121.18"],"发布":["121.18"],"publish":["121.18"],"从而提高模块的加载效率":["121.19"],"会在终端打印错误消息":["121.23"],"报告模块的缺失":["121.23"],"results":["122.2"],"删除数据":["122.3"],"语句会真正删除数据":["122.3"],"保险起见":["122.3"],"seo":["122.5"],"服务器响应的是完整的":["122.5"],"页面内容":["122.5"],"有利于爬虫爬取信息":["122.5"],"缺点":["122.5"],"占用服务器资源":["122.5"],"等框架的":["122.6"],"ssr":["122.6"],"server":["122.6"],"side":["122.6"],"为同时兼顾首页渲染速度和前后端分离开发效率":["122.7"],"可采用首屏服务器端渲染":["122.7"],"清空":["122.11"],"是目前最流行的跨域认证解决方案":["122.12"],"存储在":["122.13"],"localstorage":["122.13"],"sessionstorage":["122.13"],"此后客户端与服务端通信需要携带":["122.13"],"进行身份认证":["122.13"],"存在":["122.13"],"获取信息成功":["122.14"],"data":["122.14"],"捕获解析":["122.14"],"失败后产生的错误":["122.14"],"当使用":["122.14"],"如果客户端发送过来的":["122.14"],"字符串过期或不合法":["122.14"],"会产生一个解析失败的错误":["122.14"],"影响项目的正常运行":["122.14"],"的错误中间件":["122.14"],"捕获这个错误并进行相关的处理":["122.14"],"显示依赖项树":["123.0"],"tree":["123.0"],"查看包信息":["123.0"],"搜索包":["123.0","124.3"],"包":["124.1"],"它提供了一个庞大的软件生态系统":["124.1"],"使开发者能够快速构建复杂的应用程序":["124.1"],"如果输出显示了":["124.2"],"使其可供他人使用":["124.3"],"search":["124.3"],"并添加或修改相关配置":["124.4"],"将会根据":["124.5"],"请确保遵循":["124.6"],"的发布准则和最佳实践":["124.6"],"npmjs":["125.1"],"实现你的功能逻辑":["125.3"],"这是你的包的说明文档":["125.4"],"提供关于包的介绍":["125.4"],"确保发布成功后":["125.5"],"你可以在":["125.5"],"执行以下命令发布新版本的包":["125.6"],"shell":["125.6"],"npm":["125.6","165.1"],"替换为你的包的名称":["125.7"],"g":["126.1"],"以上任一方法都将安装":["126.1"],"这将检查所有依赖项":["126.2"],"并将它们更新到最新可用版本":["126.2"],"运行脚本命令":["126.2"],"如果在":["126.2"],"文件的":["126.2"],"scripts":["126.2"],"部分定义了一些自定义脚本命令":["126.2"],"你可以使用以下命令运行它们":["126.2"],"margin":["127.2"],"top":["127.2"],"40px":["127.2"],"1b9cfc":["127.2"],"居住":["128.1","130.1","134.1","135.1"],"convenience":["128.1","130.1","134.1","135.1","136.1"],"store":["128.1","130.1","134.1","135.1","136.1","137.1"],"通远门上有一段鼓楼巷也值得一逛":["128.2"],"踏过石板路":["128.2"],"触摸沿路砖墙":["128.2"],"感受老城的历史变迁与市井烟火":["128.2"],"听着路两旁此起彼伏的吆喝声":["128.3"],"恰如那一句话":["128.3"],"一条石板路":["128.3"],"千年磁器口":["128.3"],"解放碑较场口夜市":["128.5"],"八一广场对面":["128.5"],"潘多多":["128.5"],"1道肥肠":["128.5"],"60px":["129.0","132.0","133.0","135.0"],"夫子庙":["130.1"],"大行宫":["130.2","130.4"],"之后步行":["130.2","131.4","137.5"],"从":["130.2"],"以及附近的江南贡院":["130.3"],"2km":["130.3"],"明故宫":["130.4"],"号口进去":["130.4"],"油坊桥方向":["130.4"],"号口":["130.5"],"步行":["130.5","131.1"],"可以定制快车":["131.1"],"到达三清山脚下之后":["131.1"],"买门票和索道票":["131.1"],"可以通过南部外双溪索道":["131.1"],"在大三清处走栈道游览万寿园":["131.2"],"坐车到上饶车站":["131.3"],"居住在附近":["131.3"],"预计":["131.4"],"分钟":["131.4"],"米到达广场":["131.4"],"站到光大银行之后步行":["131.5"],"第二场":["132.1"],"具体时间得再查":["132.1"],"景点位置":["132.1"],"时间":["132.2"],"晚间第一场":["132.2"],"购票":["132.2"],"南昌本地宝":["132.2"],"进行买票":["132.3"],"适合拍照":["132.3"],"江西省南昌市西湖区八一大道266号":["132.4"],"八一广场西侧":["132.4"],"南昌海洋公园":["132.4"],"目前貌似无法购票":["132.4"],"08":["132.4"],"3d电影格外收费":["132.4"],"晚上":["134.2"],"点和":["134.2"],"宋城车站乘坐":["134.3"],"路":["134.3"],"蒋村公交中心站方向":["134.3"],"去大运河也可以步行过去":["134.4"],"黄埔大街工农兵路":["135.2"],"民族路集家嘴方向":["135.2"],"武昌路阅马场":["135.3"],"汉口火车站方向":["135.3"],"乘坐":["135.4"],"鲁磨路磨山方向":["135.4"],"欢乐大道欢乐谷方向":["135.5"],"早":["136.2"],"免费":["136.3"],"预约方式":["136.3"],"停止入场时间":["136.4"],"下午":["136.4"],"点后":["136.4"],"周一闭馆":["136.4"],"糖油粑粑":["136.5"],"李公庙糖油粑粑":["136.5"],"金记糖油坨坨店":["136.5"],"油炸货":["136.5"],"排骨是必点":["136.5"],"一定要趁热吃很酥脆":["136.5"],"不用死守一家茶颜悦色":["136.6"],"尤其五一广场附近隔一两百米几乎就有一家茶颜":["136.6"],"可以用小程序提前点好再去拿":["136.6"],"步行街上遇到给你递东西的":["136.6"],"送福利的":["136.6"],"喊你做头发的":["136.6"],"尼姑递东西的等等":["136.6"],"一概都不要搭理":["136.6"],"不要在解放西拦的士":["136.6"],"摩托车":["136.6"],"步行街":["137.2"],"镇海路":["137.2","137.4"],"500m":["137.3"],"东渡狐尾山":["137.3"],"中山路":["137.4"],"米到":["137.4"],"号线":["137.4"],"公园东门站":["137.5"],"文本":["138.1"],"图像等多种元素":["138.1"],"坐标值":["138.3"],"可以在":["138.3"],"渲染上下文":["138.4"],"它提供了许多":["138.4"],"来绘制图形":["138.4"],"还可以与其他":["138.6"],"greensock":["138.7"],"等库或框架":["138.7"],"来进行高级别的动画控制":["138.7"],"在处理大量的图像和其他复杂的数据时":["138.8"],"settransform":["139.0"],"方法之前调用":["139.1"],"否则是不起作用的":["139.1"],"旋转中心点始终是画布左上角的原点":["139.1"],"如果要更改中心点":["139.1"],"font":["139.2"],"16px":["139.2"],"serif":["139.2"],"filltext":["139.2"],"red":["139.3"],"的矩形":["139.4"],"结果缩放成":["139.4"],"并且左上角从":["139.4"],"方法取消了这个变换":["139.5"],"已绘制的图形不受影响":["139.5"],"将画布恢复到默认状态":["139.5"],"变换矩形":["139.5"],"globalcompositeoperation":["140.0","140.1"],"操作":["140.0"],"绘制图形":["141.1"],"新建一条路径":["141.2"],"生成之后":["141.2"],"图形绘制命令被指向到路径上生成路径":["141.2"],"生成路径的第一步":["141.2"],"叫做":["141.2"],"是辐射终止的圆的圆心坐标":["142.2"],"是终止圆的半径":["142.2"],"该方法的返回值也是一个":["142.2"],"fillstyle":["142.3","142.4"],"fillrect":["142.3"],"fill":["144.2"],"填充颜色":["144.2"],"清除模式":["144.2"],"lineto":["144.3"],"提示":["144.3"],"有":["144.3"],"个参数":["144.3"],"前两个参数是第一个点的坐标":["144.3"],"第三个参数和第四个参数是第二个点的坐标":["144.3"],"第三种绘制图片的方式":["144.5"],"裁剪图片":["144.5"],"img参数后面四个参数分别为原图片上面要裁剪的起点位置和终点位置":["144.5"],"最后四个参数分别为画布的位置和要渲染的矩形宽高":["144.5"],"rtl":["144.6"],"预测量文本宽度":["144.6"],"一等奖":["146.2"],"绘制时针":["147.3"],"urldata":["149.3"],"todataurl":["149.3"],"img":["149.3","165.4"],"image":["149.3"],"body":["149.3","157.1"],"appendchild":["149.3","157.1"],"downloada":["149.3"],"createelement":["149.3"],"download":["149.3"],"签名":["149.3"],"linewidth":["149.4"],"canvas":["149.4"],"pointerleave":["151.1"],"on":["151.2","152.7"],"和强大的渲染能力":["152.1"],"的设备上也能正常运行":["152.3"],"方便开发者查阅和学习":["152.4"],"事件处理等":["152.5"],"开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏":["152.5"],"使开发者能够创建适应不同屏幕大小和分辨率的应用":["152.6"],"点击事件处理函数":["152.7"],"将精灵添加到场景":["152.7"],"stage":["152.7","158.1"],"addchild":["152.7","160.1","160.2"],"相对于左上角":["153.2"],"rotation":["153.2","160.2"],"旋转":["153.2"],"pivot":["153.2"],"设置文字锚点":["154.1"],"anchor":["154.1"],"endfill":["154.2"],"mask":["154.2"],"使用图形作为精灵的遮罩":["154.2"],"设置精灵的锚点":["156.1"],"pointerout":["156.2"],"0xff0000":["156.3"],"quality":["156.3"],"将轮廓滤镜添加到精灵上":["156.3"],"将应用画布添加到dom中":["157.1"],"设置透明度":["157.3","160.1","160.2"],"alpha":["157.3","160.1","160.2"],"01":["157.4"],"position":["158.3","158.4","158.5"],"对多个资源分组":["160.0"],"设置容器属性即可应用到容器内的精灵":["160.0"],"math":["160.1","160.2"],"pi":["160.1","160.2"],"设置缩放":["160.1","160.2"],"scale":["160.1","160.2"],"将精灵添加到舞台":["160.1","160.2"],"创建精灵2":["160.1"],"旋转45度":["160.2"],"设置宽高时":["161.1"],"它的默认宽度是":["161.1"],"300px":["161.1"],"默认高度是":["161.1"],"stroke":["161.3","161.7","161.8"],"000000":["161.3"],"pink":["161.4"],"none":["161.5","161.7"],"cyan":["161.8"],"光滑材质":["162.0"],"meshphongmaterial":["162.0"],"和标准材质":["162.0"],"meshstandardmaterial":["162.0"],"光源":["162.0"],"light":["162.0"],"光源用于照亮场景中的":["162.0"],"物体":["162.0"],"支持不同类型的光源":["162.0"],"如环境光":["162.0"],"ambientlight":["162.0"],"点光源":["162.0"],"pointlight":["162.0"],"平行光":["162.0"],"directionallight":["162.0"],"完整代码":["163.3"],"domelement":["163.7"],"requestanimationframe":["163.8"],"line":["163.9","163.12","164.5"],"numbers":["163.9","163.12","164.5"],"中文网":["165.0"],"yarn":["165.1"],"打开终端":["165.2"],"点击":["165.2"],"符号右边的下三角":["165.2"],"输入以下命令":["165.2"],"mkdir":["165.2"],"run":["165.3"],"dev":["165.3"],"build":["165.4"],"md":["165.6"],"about2":["165.6"],"️":["165.7"],"link是连接的位置":["165.9"],"其他":["165.9"],"这种是没有下拉菜单的版本":["165.9"],"vitepress":["165.9"],"的根目录是从":["165.9"],"开始算的":["165.9"],"关于2":["165.10"],"or":["165.11"],"打开":["165.11"],"点击分支":["165.11"],"可以看到会多个一个名":["165.11"],"gh":["165.11"]},{"0":["18.18","21.9","42.2","118.2","118.4","118.6","118.7","120.16","120.17","144.2","144.6","151.1","154.1","156.1"],"1":["6.16","21.13","28.12","28.13","104.4","106.7","118.2","118.4","118.6","118.7","120.16","120.17"],"2":["28.7","28.8","33.13","69.7","106.7","120.10","134.1","144.6"],"3":["6.16","33.13","79.1","94.2","120.10","156.1","165.7"],"4":["16.7","16.10","18.12","21.17","30.6","99.15","120.7","135.3","136.4"],"5":["17.15","92.6","118.8","118.11","128.2","131.1","142.1","144.6","146.2","151.1","154.1"],"6":["12.5","21.17","99.7","130.2","132.3","136.6","137.4"],"7":["5.10","33.2","102.11","136.4","136.6","162.0"],"8":["17.15","132.4","136.5","136.6","162.0"],"10":["20.1","35.1","79.4"],"11":["137.3"],"12":["17.16"],"13":["67.9"],"14":["113.4"],"15":["142.1","147.3"],"18":["35.3","106.2","113.1"],"20":["104.5","107.1"],"21":["67.8"],"22":["136.2"],"25":["63.1","64.1"],"30":["35.1","103.3","137.2"],"50":["28.2"],"60":["54.8"],"80":["118.4"],"100":["11.2","28.2","33.2","102.2","141.1","142.4","147.3"],"123":["103.5","106.5","109.1"],"127":["118.2","118.4","118.6","118.7","120.16","120.17"],"150":["140.1"],"180":["101.13"],"200":["137.5","141.1"],"222":["30.3"],"250":["140.1"],"255":["120.10"],"274":["135.5"],"300":["141.1","144.5","144.6"],"320":["23.11"],"400":["142.3","144.2"],"401":["122.14"],"446":["113.1"],"456":["103.5"],"500":["122.14","143.0"],"551":["113.1"],"600":["130.5","137.2","137.4","144.2","144.5","149.4"],"615":["113.1"],"666":["30.8"],"709":["113.1"],"744":["113.1"],"750":["149.4"],"849":["67.7"],"960":["134.3"],"1234":["101.14"],"2023":["25.14"],"8080":["118.3"],"101010":["68.2"],"9141426":["136.1"],"93510608":["136.1"],"用的最多的交集选择器":["4.5"],"元素选择器配合类名选择器":["4.5"],"例如":["4.5"],"center":["4.6","6.15"],"color":["4.9","4.12","90.12"],"red":["4.9","4.12","90.12","140.1"],"选到2号p标签":["4.12"],"blue":["4.12","11.1"],"属性且属性值含有":["4.13"],"table":["4.14"],"转换为块级元素并一行显示":["4.14"],"能够轻松地实现复杂的网页布局和响应式设计":["5.0"],"属性控制它们的布局行为":["5.1"],"主轴为垂直方向":["5.2"],"主轴居中对齐":["5.3"],"交叉轴顶部对齐":["5.3"],"允许项目换行":["5.4"],"允许换行":["5.5"],"不缩小":["5.6"],"嵌套的flex容器":["5.8"],"多行之间平均分布":["5.9"],"平均分布多行元素":["5.10"],"属性在多行中平均分布元素":["5.10"],"或":["6.1","70.3","108.0","112.1"],"也可以占据一个单元格":["6.2"],"我们可以通过指定网格项的位置来控制它们在网格中的布局":["6.2"],"定义两行":["6.3"],"第一行高度为":["6.3","6.6"],"第二行高度自适应":["6.3","6.6"],"网格项跨越第一行到第三行":["6.4","6.16"],"auto":["6.6","6.25","8.3","8.6"],"两行":["6.6"],"footer":["6.8"],"50px":["6.8","6.11"],"列间距为":["6.9"],"10px":["6.10"],"行间距为":["6.10"],"自动创建的额外列宽度为":["6.11"],"自动创建的额外项目按照列进行放置":["6.12"],"end":["6.13","120.7"],"项目在行轴上底部对齐":["6.13"],"space":["6.14"],"between":["6.14"],"项目在行轴上均匀分布":["6.14"],"项目在行轴上居中对齐":["6.15"],"关键字表示网格轨道的大小将根据其内容自动调整":["6.18"],"而":["6.18","20.4","29.10","46.2"],"表示网格轨道的大小将占据剩余可用空间":["6.18"],"我们定义了三列":["6.19"],"每列宽度为":["6.19"],"时":["6.20","29.5","45.2","82.7","84.4"],"其中使用了":["6.22"],"布局将标题":["6.22"],"导航栏和内容区域分为三个网格项":["6.22"],"通过设置网格容器的列模板为":["6.22"],"1fr":["6.22","6.25"],"使得三个网格项平均占据网格容器的宽度":["6.22"],"布局将网页划分为多个网格项":["6.23"],"通过设置网格项的网格位置和跨度":["6.23"],"我们可以实现复杂的布局结构":["6.23"],"如标题横跨三列":["6.23"],"导航栏":["6.23"],"内容区域和侧边栏位于第二行":["6.23"],"页脚位于第三行":["6.23"],"img":["6.23","6.25","89.25","100.3","165.7","165.10"],"其中":["6.24"],"我们首先创建了一个主要的网格容器":["6.24"],"将页面划分为两列":["6.24"],"标题横跨两列":["6.24"],"然后":["6.24","144.3"],"我们在网格项中嵌套另一个网格容器":["6.24"],"用于进一步划分内容区域":["6.24"],"这样":["6.24","53.4","83.5"],"我们可以在同一个网格项中实现更复杂的布局":["6.24"],"我们使用":["6.25","81.11","83.4"],"repeat":["6.25"],"fill":["6.25","144.4","144.6"],"minmax":["6.25"],"200px":["6.25"],"来定义网格容器的列模板":["6.25"],"这将使网格容器动态调整列数":["6.25"],"以填充可用空间":["6.25"],"并保持每列最小宽度为":["6.25"],"最大宽度为可用空间的一份之一":["6.25"],"列表等":["6.27"],"都可以结合媒体查询实现不同屏幕尺寸下的适配":["6.28"],"都支持对齐和排序网格项":["6.28"],"将第三个网格项置于第一个位置":["6.30"],"以优化网页性能":["6.32"],"布局的旧版浏览器中正常显示":["6.33"],"权重最高":["7.1"],"在vscode中":["7.1"],"鼠标悬浮在样式上":["7.1"],"会弹出来显示选择器":["7.1"],"垂直居中":["8.1"],"设置行高和高度一样":["8.1"],"skyblue":["8.2"],"100px":["8.5"],"bottom":["8.6"],"为了让容器撑满视口高度":["8.7"],"000":["9.0","147.3"],"ellipsis":["9.1"],"以省略号显示隐藏的内容":["9.1"],"all":["9.2"],"强制打断单词换行":["9.2"],"tip":["9.2","29.9","87.5","87.6","107.1"],"多行溢出隐藏只能内核是":["9.2"],"的浏览器":["9.2"],"padding":["9.3"],"left":["9.3"],"4px":["9.3"],"d6d6d6":["10.0"],"右下角拖动块":["10.0"],"resizer":["10.0"],"岁了":["12.1","12.4"],"我的名字是alice并且我25岁了":["12.2"],"专业的学生":["12.3"],"静态方法以及":["12.6"],"等特性让":["12.6"],"javascript":["12.6","13.4","117.2"],"开发者能够更好地组织和复用代码":["12.6"],"标准进行实现":["13.2"],"以保持互操作性和一致性":["13.2"],"fs":["13.3"],"net":["13.3"],"flatmap":["13.4"],"用于数组的扁平化和映射":["13.4"],"trimstart":["13.4"],"trimend":["13.4"],"用于去除字符串两端的空白字符":["13.4"],"fromentries":["13.4"],"用于将键值对列表转换为对象":["13.4"],"从":["13.4"],"开始":["13.4"],"标准每年都会发布一个新版本":["13.4"],"每个版本都会引入一些新的特性和改进":["13.4"],"以使":["13.4"],"语言变得更加强大":["13.4"],"现代和易用":["13.4"],"使用迭代器遍历map的键值对":["14.2"],"entriesiterator":["14.2"],"false":["14.5","16.7","20.8","20.17","21.15","28.29","29.5","73.20","89.4","105.7","118.8"],"新地址":["14.5"],"以及实现代码的重用和分割":["15.1"],"模块化的好处如下":["15.2"],"john":["15.11","15.12","63.2","64.2"],"is":["15.13","15.14"],"my":["15.14"],"输出":["15.22","17.15","49.2","53.6","53.8"],"age":["15.23","34.3","63.1","64.1","107.1"],"模块化特性":["15.28"],"以提升代码质量和开发效率":["15.28"],"tostring":["16.12","65.1","101.12","101.14","120.8"],"方法是不能将":["16.12"],"转换成":["16.12"],"唯一值":["16.14"],"相当于去重":["16.14"],"存在返回":["16.15"],"不存在返回":["16.15"],"被过滤掉":["16.15"],"hello":["17.5","79.6","79.9","79.10","79.11","106.4","165.2"],"上面示例中":["17.5"],"调用时没有参数":["17.5"],"所以参数默认值":["17.5"],"生效":["17.5"],"然后再对这个默认值进行解构赋值":["17.5"],"从而触发参数变量":["17.5"],"的默认值生效":["17.5"],"参数对应":["17.6"],"结果触发了默认值":["17.6"],"参数等于":["17.6"],"就没有触发默认值":["17.6"],"从而抛出一个错误":["17.7"],"从上面代码还可以看到":["17.7"],"参数":["17.7"],"的默认值等于":["17.7"],"函数的运行结果":["17.7"],"注意函数名":["17.7"],"之后有一对圆括号":["17.7"],"这表明参数的默认值不是在定义时执行":["17.7"],"而是在运行时执行":["17.7"],"如果参数已经赋值":["17.7"],"默认值中的函数就不会运行":["17.7"],"另外":["17.7"],"可以将参数默认值设为":["17.7"],"表明这个参数是可以省略的":["17.7"],"optional":["17.7"],"上面的代码中给函数第一个参数":["17.10"],"声明一个变量":["17.10"],"剩余的参数会被":["17.10"],"收集成一个数组":["17.10"],"这就是剩余参数":["17.10"],"引入剩余参数就是为了能替代函数内部的":["17.10"],"由于":["17.10"],"对象不具备数组的方法":["17.10"],"所以很多时候在使用之前要先转换成一个数组":["17.10"],"而剩余参数本来就是一个数组":["17.10"],"避免了这多余的一步":["17.10"],"使用起来既优雅又自然":["17.10"],"否则会报错":["17.11"],"多余的参数不会被获取到":["17.12"],"上面的代码中":["17.12"],"会去解构传入参数":["17.12"],"加上有剩余语法的作用":["17.12"],"对应的值从数组中的项解构出来":["17.12"],"在函数内部直接使用解构出来的参数即可":["17.12"],"剩余语法看起来和展开语法完全相同":["17.12"],"不同点在于":["17.12"],"剩余参数用于解构数组和对象":["17.12"],"剩余参数是将多个单个元素聚集起来形成一个单独的个体的过程":["17.13"],"输出了正确的结果":["17.17"],"而箭头函数中的":["17.17"],"方法继承了外层代码块的":["17.17"],"在浏览器环境中":["17.17"],"这里指向":["17.17"],"window":["17.17","48.7"],"因此输出了":["17.17"],"特别是在简单的回调函数和数组方法中":["17.18"],"能够减少代码量并提高代码的可读性":["17.18"],"这样的规定也使得":["17.19"],"函数参数与数组和对象的尾逗号规则":["17.19"],"保持一致了":["17.19"],"worl":["18.4"],"qux":["18.13"],"o":["18.14"],"开发中":["19.5"],"模板字符串广泛用于生成":["19.5"],"html":["19.5","31.4","43.2"],"标记":["19.5"],"日志信息":["19.5"],"网络请求等多种场景":["19.5"],"覆盖掉":["20.4"],"最后只有一个":["20.4"],"属性":["20.4","80.14","108.0"],"指向原型对象":["20.6"],"但是绑定的":["20.6"],"却还是当前对象":["20.6"],"因此输出的就是":["20.6"],"true":["20.12","28.1","73.14","89.17","101.10","109.2"],"sex":["20.21"],"male":["20.21","101.13"],"options":["20.21"],"alex":["20.21"],"entires":["20.22"],"并不能保证顺序一定是你看到的样子":["20.22"],"这一点和":["20.22"],"in":["20.22","35.6"],"是一样的":["20.22","161.1"],"如果对遍历顺序有要求那么不能用":["20.22"],"以及这种方法":["20.22"],"而要用其他方法":["20.22"],"都可以显著提高代码的可读性和可维护性":["22.0"],"使用默认值":["22.4","22.10"],"元素允许使用多个":["23.0"],"元素":["23.0","23.10","77.9"],"元素可以链接不同的音频文件":["23.0"],"浏览器将使用第一个支持的音频文件":["23.0"],"标签中使用":["23.5"],"定义在媒体播放器文本轨迹":["23.6"],"edge":["23.7"],"只有在静音下可以使用":["23.7"],"网页的主体部分":["24.1"],"包含网页的实际内容":["24.1"],"如文本":["24.1"],"图像":["24.1"],"链接等":["24.1"],"用于组合多个元素为一个整体":["24.2"],"方便样式和布局控制":["24.2"],"span":["24.2","90.12"],"内联容器标签":["24.2"],"类似于":["24.2"],"但是它用于内联元素的包裹":["24.2"],"交互性强的现代网页应用程序":["24.3"],"通过学习":["24.4"],"你可以创建各种各样的网页":["24.4"],"并为用户提供丰富的在线体验":["24.4"],"这是h6级别的标题":["25.1"],"提交":["25.13"],"copy":["25.14"],"公司名":["25.14"],"td":["26.1"],"表格标签":["26.1"],"用于创建表格":["26.1"],"如文本框":["26.2"],"单选按钮":["26.2"],"复选框等":["26.2"],"链接目标":["26.4"],"控制元素行为等":["26.4"],"在实际开发中":["26.5"],"合理使用标签和属性可以提高网页的可读性":["26.5"],"可访问性和用户体验":["26.5"],"abc":["28.1","103.4"],"undefined":["28.2","73.18","75.0","101.7"],"只有一个元素的数组":["28.14","28.17"],"log":["28.28","28.29","32.11","33.9","33.10","35.7","54.8","73.4","101.14","102.8","118.4","120.17"],"执行某些操作":["28.30"],"这样结构会更加的清晰":["29.1"],"如果":["29.1"],"后的添加表达式不是布尔值":["29.1"],"会转换为布尔值然后再运算":["29.1"],"什么奖励也没有":["29.2"],"啥也没有":["29.2"],"注意":["29.2","29.9","52.5","139.2","139.4"],"语句中只会有一个代码块被执行":["29.2"],"一旦有执行的代码块":["29.2"],"下边的条件都不会在继续判断了":["29.2"],"所以一定要注意":["29.2"],"条件的编写顺序":["29.2"],"如果所有的比较都是":["29.3"],"则执行":["29.3"],"后的语句":["29.3"],"循环结束":["29.5"],"while语句是先执行再判断":["29.6"],"实质的区别":["29.6"],"while语句可以确保循环至少执行一次":["29.6"],"不应该用它来遍历数组":["29.9"],"因为它还会遍历从对象原型继承的可枚举属性":["29.9"],"用于遍历对象属性":["29.10"],"用于遍历可迭代集合":["29.10"],"如数组":["29.10"],"循环遍历对象时":["29.11"],"会遍历对象的原型链":["29.11"],"并且会包含从原型链继承的属性":["29.11"],"循环遍历的对象是可迭代对象":["29.11"],"它们的值是可枚举的":["29.11"],"通过此代码块可以实现大量代码的重复使用":["30.0"],"大肘子":["30.6"],"函数的参数可以有":["30.6"],"也可以没有个数不限":["30.6"],"调用函数的时候":["30.7"],"函数名括号里面的是实参":["30.7"],"多个参数中间用逗号分隔":["30.7"],"形参的个数可以和实参个数不匹配":["30.7"],"但是结果不可预计":["30.7"],"我们尽量要匹配":["30.7"],"返回":["30.8","32.10"],"fun2":["30.8"],"函数返回的结果是":["30.8"],"同时还可以结束当前的函数体内的代码":["30.9"],"应用程序":["31.0"],"有两种方式":["31.2"],"是键名":["32.2"],"是键值":["32.2"],"两个键值对之间用逗号分隔":["32.2"],"有没有都可以":["32.3"],"属性可以动态创建":["32.3"],"不必在对象声明时就指定":["32.3"],"直接对":["32.3"],"对象的":["32.3"],"属性赋值":["32.3"],"结果就在运行时创建了":["32.3"],"的值发生变化后":["32.4"],"的值并不变":["32.4"],"这就表示":["32.4"],"并不是指向同一个内存地址":["32.4"],"上面代码中":["32.5","142.1","142.3"],"如果没有圆括号":["32.5"],"将其理解为一个代码块":["32.5"],"加上圆括号以后":["32.5"],"就理解成一个对象":["32.5"],"报错":["32.7","34.3","104.3","106.6","121.11","121.22"],"上面代码的第一个表达式":["32.7"],"对数值键名":["32.7"],"使用点运算符":["32.7"],"结果报错":["32.7"],"第二个表达式使用方括号运算符":["32.7"],"结果就是正确的":["32.7"],"是对象":["32.10"],"继承的属性":["32.10"],"虽然":["32.10"],"但该属性并没有被删除":["32.10"],"依然存在":["32.10"],"这个例子还说明":["32.10"],"即使":["32.10","45.1"],"该属性依然可能读取到值":["32.10"],"console":["32.11","35.7","73.4","101.14","102.8","118.4"],"name":["32.12","78.5","78.11","89.5","107.1","122.14"],"老张":["32.12"],"key":["32.12","110.8"],"if":["32.12","117.4","122.14"],"obj2":["32.13"],"obj3":["32.13"],"可以写成":["32.13"],"temp":["32.13"],"07":["33.2","113.4"],"000000000000001":["33.2"],"没有声明过这个变量":["34.3"],"script":["34.4","126.2"],"先销毁再创建":["34.4"],"而当时又没有那个对象可保存":["34.5"],"就可用":["34.5"],"来填充该变量":["34.5"],"a":["34.6","68.1","101.5"],"不存在":["34.6"],"虽然两个变量的值相等":["34.18"],"但是两个变量保存了两个不同的内存地址":["34.18"],"产生影响":["34.19"],"也就是两个变量指向堆内存中同一个对象":["34.20"],"所以不要重复声明同一个变量":["35.4"],"避免":["35.4"],"syntaxerror":["35.4"],"每次迭代循环声明一个新的迭代变量":["35.6"],"每个":["35.6"],"引用的都是不同的变量实例":["35.6"],"这种风格也适用于":["35.6"],"of":["35.6","117.6"],"value":["36.1","58.6","61.2","149.3"],"设置元素的属性":["36.1"],"class":["36.2"],"highlight":["36.2"],"这只是":["38.0"],"中的一些常见对象":["38.0"],"还有其他对象和方法可用于处理浏览器窗口和与浏览器交互的其他方面":["38.0"],"请注意":["38.0"],"在不同的浏览器中可能会有一些差异":["38.0"],"因此在编写跨浏览器的代码时需要注意兼容性":["38.0"],"reload":["39.1","39.2"],"重新加载当前页面":["39.1"],"platform":["40.2"],"屏幕的颜色深度":["41.1"],"pixeldepth":["41.2"],"位":["41.2"],"document":["42.1","79.4","80.10","80.11"],"当前窗口加载的文档对象":["42.1"],"dom":["43.1","83.2"],"而更新页面":["43.1"],"将处理结果更新到":["43.2"],"页面中":["43.2"],"可选的密码用于认证用途":["43.4"],"方法中参数设置为":["43.5"],"错误信息":["43.6"],"post":["43.6"],"http":["43.6","98.4","118.2","118.4","118.6","118.7","122.13"],"xxxx":["43.6"],"responsetext":["43.8"],"responsexml":["43.8"],"fail":["43.8"],"已经执行完毕":["45.1"],"都会增加":["45.2"],"的值并打印":["45.2"],"和":["45.3","69.9","76.3","87.1"],"的对象":["45.3","76.4"],"变量被隐藏在闭包内部":["45.3"],"只能通过返回对象的方法来访问和修改":["45.3"],"事件处理":["45.4"],"闭包可以用于处理事件回调函数":["45.4"],"通过闭包":["45.4"],"可以在事件处理函数内部访问外部函数的数据和状态":["45.4"],"从而更方便地处理事件相关的逻辑":["45.4"],"应用程序时":["45.5"],"了解闭包的概念和使用方法是非常有益的":["45.5"],"如果原始对象的属性是引用类型":["46.1"],"如对象或数组":["46.1"],"新对象和原始对象的该属性仍然引用同一个对象":["46.1"],"深拷贝可能会涉及到循环引用的问题":["46.2"],"即对象内部存在相互引用的属性":["46.2"],"在实现深拷贝时":["46.2"],"需要处理循环引用的情况":["46.2"],"以避免无限递归和栈溢出":["46.2"],"综上所述":["46.2"],"浅拷贝和深拷贝是":["46.2"],"中常用的对象复制技术":["46.2"],"浅拷贝只复制对象的引用":["46.2"],"深拷贝创建一个独立的副本":["46.2"],"相加":["47.1","54.3"],"同样":["47.1"],"相乘":["47.1"],"函数柯里化是一种将多参数的函数转化为一系列接受单个参数的函数的技术":["47.2"],"它提供了灵活和可复用的函数调用方式":["47.2"],"有助于参数复用":["47.2"],"函数组合和高阶函数的创建":["47.2"],"否则":["47.4"],"返回一个新的函数":["47.4"],"该函数将之前的参数与新的参数连接起来":["47.4","47.6"],"并再次调用":["47.4","47.6"],"在柯里化函数中":["47.5"],"我们可以使用":["47.5"],"来表示一个占位符":["47.5"],"用于在函数调用过程中填充参数位置":["47.5"],"debounce":["48.0"],"的方式来减少调用频率":["48.0"],"else":["48.3","120.6"],"settimeout":["48.3"],"this":["48.5","77.20","92.4"],"addeventlistener":["48.7"],"scroll":["48.7"],"return":["49.3","49.4","49.6","79.11","98.3","102.8","102.9","122.14"],"loop":["50.1"],"事件循环":["50.1"],"渲染逻辑会线执行":["50.2"],"然后执行下一下宏任务":["50.2"],"then是异步":["50.3"],"归属微任务":["50.3"],"async":["50.3","87.3"],"await返回的是promise视为微任务":["50.3"],"整个async":["50.3"],"的函数加入微任务队列":["50.3"],"infinity":["51.1"],"的问题":["52.0"],"使异步代码更易于理解和维护":["52.0"],"以下是":["52.0"],"的基本概念和用法":["52.0"],"并将错误信息":["52.1"],"并接收到错误信息":["52.2"],"如果任意一个操作失败":["52.3"],"将调用最后的":["52.3"],"方法":["52.3","74.2","76.8"],"reject":["52.4","98.3","98.4","110.11"],"等":["52.4","58.8","59.1","77.1","77.16"],"它们提供了更多的灵活性和功能":["52.4"],"通过使用":["52.4","87.5","87.6"],"可以更好地处理异步操作":["52.4"],"避免回调地狱":["52.4"],"并使代码更清晰和可维护":["52.4","55.4"],"方法处理请求失败的错误":["52.5"],"上述示例中假设请求的数据为":["52.5"],"格式":["52.5"],"并设置请求头的":["52.5"],"为":["52.5"],"根据具体的需求":["52.5"],"可以调整请求的数据和请求头":["52.5"],"通过封装":["52.5"],"请求为":["52.5"],"可以更优雅地处理异步请求":["52.5"],"并使用":["52.5"],"的链式调用":["52.5"],"错误处理和其他特性来组织和处理请求的结果":["52.5"],"使得属性和方法可以被共享和继承":["53.1"],"它会沿着原型链找到":["53.2"],"上的":["53.2"],"对象的基本原型":["53.3"],"对象就可以访问":["53.4"],"的":["53.4"],"可选参数":["54.1"],"方法从数组的第一个元素开始累加":["54.3"],"初始值为":["54.3"],"提供了":["54.3"],"initialvalue":["54.3"],"然后依次将每个元素与":["54.3"],"得到最终的累积结果":["54.3"],"方法是一个非常强大和灵活的数组方法":["54.9"],"通过合理使用它":["54.9"],"可以简化对数组的复杂计算和操作":["54.9"],"是一个全局函数":["55.1"],"也可以在任何地方调用":["55.1"],"在该函数内部可访问":["55.2"],"如果在":["55.3"],"中找不到变量":["55.3"],"引擎会向上查找并找到全局作用域中的":["55.3"],"代码至关重要":["55.4"],"作用域确定了变量和函数的可见性和访问范围":["55.4"],"可以帮助避免命名冲突和错误":["55.4"],"中级":["56.4"],"删除或移动节点等操作":["57.1"],"以下是一些常用的":["57.1"],"操作":["57.1","77.4","119.2"],"我们称之为文档树或":["57.2"],"文档树直观的体现了标签与标签之间的关系":["57.2"],"根节点":["57.3"],"特指":["57.3"],"web":["57.4"],"开发中不可或缺的一部分":["57.4"],"鼠标移出了":["58.5"],"失去焦点触发":["58.7"],"如":["58.8"],"shift":["58.8"],"ctrl":["58.8"],"时触发":["58.8"],"例如阻止表单提交或超链接跳转":["58.9"],"stoppropagation":["58.9"],"停止事件的传播":["58.9"],"touchend":["58.11"],"touchmove":["58.11"],"选项4":["58.12"],"选项5":["58.12"],"p":["59.2","79.6","79.9","79.10","79.11","89.7"],"这将从":["59.3"],"中移除":["59.3"],"这将返回元素的计算样式对象":["60.1"],"你可以使用":["60.1"],"方法来获取指定属性的值":["60.1"],"可以使用":["60.2"],"setattribute":["60.2"],"获取或设置元素的文本内容":["61.0"],"property":["61.2"],"的基本用法和一些常见操作":["62.0","63.0","64.0"],"属性用于指定":["62.1"],"的可访问路径":["62.1"],"默认为当前页面的路径":["62.1"],"浏览器会将其视为已过期并删除该":["62.3"],"网站首选项等功能":["62.4"],"在实际应用中":["62.4","63.6","64.6"],"需要根据具体需求合理使用":["62.4"],"来增强用户体验和数据交互":["62.4"],"提供了一种简单而强大的在浏览器中进行本地持久化存储的方式":["63.6"],"它可用于保存用户的首选项":["63.6"],"配置信息":["63.6"],"用户身份验证信息等":["63.6"],"可以根据具体需求合理使用":["63.6","64.6"],"来增强用户体验和数据持久性":["63.6"],"提供了一种简单而强大的在浏览器中进行会话级别的本地存储的方式":["64.6"],"它适用于临时保存会话相关的数据":["64.6"],"如用户登录信息":["64.6"],"临时配置等":["64.6"],"来增强用户体验和会话管理":["64.6"],"json":["65.1","165.6"],"tolocaledatestring":["65.1"],"将日期对象转换为本地日期格式的字符串":["65.1"],"tolocalestring":["65.1"],"将日期对象转换为本地日期和时间格式的字符串":["65.1"],"tolocaletimestring":["65.1"],"将日期对象转换为本地时间格式的字符串":["65.1"],"将日期对象转换为字符串":["65.1"],"totimestring":["65.1"],"将日期对象的时间部分转换为字符串":["65.1"],"toutcstring":["65.1"],"时间格式的字符串":["65.1"],"minutes":["65.2"],"seconds":["65.2"],"milliseconds":["65.2"],"setdate":["65.3"],"getdate":["65.3"],"今天是2100年1月14日之后":["65.5"],"程序":["66.0"],"内置对象最大的优点就是帮助我们快速开发":["66.0"],"arguments":["66.1"],"函数参数集合":["66.1"],"用于处理不同的任务和需求":["66.9"],"直接使用并传入对应的参数":["67.0"],"not":["68.1"],"当进行非法的数学运算时":["68.1"],"0101111011011001":["68.2"],"这些是":["68.2"],"对象的一些常用属性和方法":["68.2"],"通过使用这些属性和方法":["68.2"],"可以在":["68.2"],"中更方便地处理数字和数值相关的操作":["68.2"],"搜索和替换字符串":["69.1"],"下面是关于":["69.1"],"正则表达式的详细介绍":["69.1"],"gi":["69.6"],"z":["69.7","161.9"],"并将":["69.9"],"捕获到两个分组中":["69.9"],"使用编号或名称可以访问捕获的子串":["69.9"],"捕获分组可用于从字符串中提取特定部分的信息":["69.9"],"进行更精确的匹配和处理":["69.9"],"new":["69.10"],"regexp":["69.10"],"通过学习和掌握正则表达式的语法和方法":["69.11"],"可以提高字符串处理的效率和精确度":["69.11"],"从而更好地应对各种字符串操作的需求":["69.11"],"函数根据传入的参数不同":["70.3"],"对象":["70.3","101.3","118.5"],"展现了不同的行为":["70.3"],"这就是多态的体现":["70.3"],"可以引用将要创建的对象":["71.0"],"构造函数的优点是它可以直接在构造函数中定义对象的属性和方法":["71.1"],"但每次创建对象实例时":["71.1"],"都会重新创建一次方法":["71.1"],"这可能会导致内存浪费":["71.1"],"尤其是当实例数量较多时":["71.1"],"无论是构造函数还是类":["71.2"],"它们都可以用于创建对象":["71.2"],"在现代的":["71.2"],"中":["71.2","80.3"],"类更为普遍":["71.2"],"因为它提供了更清晰":["71.2"],"直观和易于维护的代码结构":["71.2"],"通过面向对象编程":["72.2"],"开发者可以更好地组织和管理代码":["72.2"],"提高代码的可维护性和可重用性":["72.2"],"并使得复杂的程序更易于理解和扩展":["72.2"],"alert":["73.2","152.7"],"大家好啊":["73.2"],"方法名":["73.3"],"千万别忘记添加小括号":["73.3"],"返回一个给定对象自身可枚举属性值的数组":["73.5"],"hasownproperty":["73.5"],"判断一个属性是否是对象自身的属性":["73.5"],"非继承的属性":["73.5"],"configurable":["73.11"],"对象本身没有":["74.2"],"会在原型链上查找并在":["74.2"],"对象上找到该方法":["74.2"],"并允许我们创建灵活和高效的代码结构":["74.4"],"在全局上下文中为":["75.0"],"而不是默认指向全局对象":["75.0"],"启用严格模式的代码在遵循更严格的语法规则后":["75.0"],"更容易发现潜在的错误":["75.0"],"并且在某些情况下可能会有更好的性能":["75.0"],"建议在新的项目中使用严格模式":["75.0"],"并逐步更新现有的代码以适应严格模式":["75.0"],"使用":["76.3","81.11","142.3"],"call":["76.3"],"apply":["76.3"],"指向指定的那个对象":["76.3"],"foo":["76.3"],"obj":["76.3"],"此处是obj":["76.4"],"则传":["76.7"],"null":["76.7"],"上方代码中":["76.8"],"继承了":["76.8"],"里面传入的":["76.10"],"实参":["76.10"],"必须是数组":["76.10"],"或者伪数组":["76.10"],"里面传实参时":["76.11"],"需要以数组的形式":["76.11"],"即便是传一个实参":["76.11"],"也需要传数组":["76.11"],"中元素的最小值":["76.12"],"由指定":["76.14"],"和指定实参的":["76.14"],"原函数拷贝":["76.14"],"可以看出":["76.14"],"方法是有返回值的":["76.14"],"router":["77.1"],"结合使用":["77.1"],"来构建更复杂的应用":["77.1"],"提高了页面的性能和响应速度":["77.4"],"而无需重复造轮子":["77.6"],"通过组合多个组件":["77.8"],"我们可以构建复杂的用户界面":["77.8"],"从而渲染到页面上":["77.9"],"并根据数据进行相应的渲染和逻辑处理":["77.10"],"我们可以实现用户界面的交互和动态变化":["77.11"],"但语法上更加简洁和易读":["77.13"],"评论列表等":["77.15"],"从而实现组件的复用":["77.18"],"以免影响代码的可维护性和可读性":["77.19"],"指向和生命周期混乱等":["77.20"],"解析为":["77.22"],"纯":["77.22"],"语法代码":["77.22"],"的中文含义是":["77.23"],"渲染":["77.23"],"方法的语法如下":["77.23"],"reactdom":["77.23"],"要渲染的虚拟dom对象":["77.23"],"容器":["77.23"],"container":["77.23"],"要渲染到页面上的哪个位置":["77.23"],"strictmode":["77.24"],"元素的创建和组合的基础":["78.1"],"是构建复杂用户界面的核心":["78.1"],"可以根据":["78.2"],"的描述来创建相应的":["78.2"],"customelement":["78.4"],"mycomponent":["78.4"],"your":["78.5"],"应用程序的核心":["78.9"],"f":["78.19","102.10"],"mycomponentwithlogger":["78.20"],"click":["78.21","90.9","91.17","149.3"],"me":["78.21","85.7"],"increment":["78.22","79.3","87.3"],"组件销毁阶段":["79.1"],"componentwillunmount":["79.1"],"在组件即将销毁时调用":["79.1"],"用于清理副作用操作":["79.1"],"如取消订阅":["79.1"],"清除定时器等":["79.1"],"onclick":["79.3"],"getelementbyid":["79.4","80.7","80.8","80.9","80.10","80.11","81.12"],"root":["79.4","80.7","80.8","80.9","80.10","80.11","81.12"],"componentdidupdate":["79.13"],"在组件销毁阶段":["79.13"],"中进行清理操作":["79.13"],"可以将数据传递给子组件":["80.1"],"并根据数据的变化更新子组件的显示内容":["80.1"],"实现动态渲染和交互":["80.1"],"可以通过":["80.3"],"来访问传递的":["80.3"],"将使用默认值":["80.4"],"中的属性解构出来":["80.5"],"使代码更加简洁易读":["80.5"],"从而使组件行为更加可预测和稳定":["80.13"],"属性进行了验证":["80.14"],"要求它必须是字符串类型":["80.14"],"并且是必需的":["80.14"],"如果传递的":["80.14"],"属性不是字符串或者没有传递":["80.14"],"将会在控制台输出警告信息":["80.14"],"对":["80.15"],"进行验证":["80.15"],"增加代码的健壮性和可维护性":["80.15"],"组件开发中非常重要和常用的一部分":["80.15"],"从而实现快速":["81.1"],"流畅的导航体验":["81.1"],"component":["81.3"],"属性指定对应的页面组件":["81.3"],"params":["81.5"],"属性在页面组件中获取":["81.5"],"url":["81.6"],"从而实现页面切换":["81.7"],"在":["81.11","81.15","136.2"],"组件中":["81.11"],"属性来指定":["81.11"],"路径":["81.11"],"属性来指定对应的页面组件":["81.11"],"属性用于确保只有在路径完":["81.11"],"全匹配时才渲染对应的组件":["81.11"],"h2":["81.13","81.14"],"sub":["81.13"],"page":["81.13"],"profile":["81.14"],"组件中定义了一个按钮":["81.15"],"当用户点击按钮时":["81.15","83.5"],"会触发":["81.15"],"函数":["81.15"],"通过":["81.15","110.8"],"方法实现页面导航":["81.15"],"编程式导航允许在事件触发后进行页面切换":["81.15"],"从而实现更灵活的导航控制":["81.15"],"使用户界面能够随着用户操作或其他事件的发生而更新":["82.0"],"props":["82.1"],"传递给子组件":["82.1"],"这样的设计有助于保持组件之间的独立性和可预测性":["82.1"],"来访问":["82.3"],"的值":["82.3"],"每次点击按钮时":["82.4"],"的值都会增加":["82.4"],"并触发组件的重新渲染":["82.4"],"中使用了一个回调函数":["82.5"],"该回调函数在":["82.5"],"更新后被调用":["82.5"],"用于打印最新的":["82.5"],"在上面的例子中":["82.6"],"我们展示了错误的方式直接修改":["82.6"],"这样做会导致":["82.6"],"无法正确地追踪":["82.6"],"并可能导致组件的显示内容不正确":["82.6"],"值":["82.7"],"在多个组件中共享":["82.7"],"正确地使用":["82.7"],"将有助于保持组件之间的独立性和可预测性":["82.7"],"并增加":["82.7"],"应用程序的交互性和可维护性":["82.7"],"而无需手动编写大量的重复代码":["83.1"],"正确地更新":["83.2"],"最后":["83.2"],"我们将生成的":["83.2"],"元素放置在":["83.2"],"元素中":["83.2"],"从而实现了一个包含数字的列表":["83.2"],"如果数字是偶数":["83.3"],"我们将列表项的颜色设为红色":["83.3"],"如果数字是奇数":["83.3"],"我们将列表项的颜色设为蓝色":["83.3"],"通过这种方式":["83.3","83.4"],"我们可以根据条件来渲染不同样式的列表项":["83.3"],"从而提供更丰富的用户界面":["83.3"],"在子组件中":["83.4"],"方法遍历":["83.4"],"数组":["83.4"],"并渲染对应的列表项":["83.4"],"我们可以将数据和渲染逻辑分离":["83.4"],"使代码更加清晰和易于维护":["83.4"],"我们添加了一个输入框和一个按钮":["83.5"],"用于输入新的列表项和添加新的列表项":["83.5"],"通过监听输入框的变化事件":["83.5"],"我们可以获取用户输入的新数字":["83.5"],"并保存在组件的状态中":["83.5"],"我们将新数字添加到":["83.5"],"数组中":["83.5"],"并通过更新组件状态来触发重新渲染":["83.5"],"新的列表项就会动态地显示在用户界面上":["83.5"],"如为列表项添加唯一的":["83.6"],"包裹多个元素等":["83.6"],"以确保代码的可读性和性能":["83.6"],"列表渲染使我们能够更高效地展示大量数据":["83.6"],"并为用户提供更好的用户体验":["83.6"],"从而提供更加个性化和灵活的用户体验":["84.1"],"根据":["84.2"],"状态的不同":["84.2"],"组件会根据条件渲染不同的内容":["84.2"],"通过使用三元表达式":["84.3"],"我们可以在一行代码中实现条件渲染":["84.3"],"使代码更加简洁和易读":["84.3","84.5"],"由于逻辑与是短路逻辑":["84.4"],"当":["84.4","87.6"],"不会继续执行后面的代码":["84.4"],"因此不会渲染任何内容":["84.4"],"条件运算符简化了条件渲染的写法":["84.5"],"在实现条件渲染时":["84.6"],"我们应该遵循最佳实践":["84.6"],"保持代码简洁":["84.6"],"可读性高":["84.6"],"并提高代码的复用性和可维护性":["84.6"],"条件渲染使我们能够根据用户的交互或应用程序的状态来实现动态和交互性的用户界面":["84.6"],"从而提供更好的用户体验":["84.6"],"install":["85.3","110.8"],"clicked":["85.13","152.7"],"包裹的组件停用时调用":["85.18"],"errorcaptured":["85.18"],"错误捕获":["85.18"],"在子孙组件抛出错误时被调用":["85.18"],"用于处理错误":["85.18"],"有一定的了解":["86.1"],"export":["86.3","110.11"],"default":["86.3","98.4","110.8"],"并且使得状态的变化变得可追踪":["87.0"],"这样可以更好地组织和管理状态":["87.1"],"使代码结构更清晰":["87.1"],"的功能":["87.2"],"doublecount":["87.3"],"通过方法修改状态":["87.3"],"commit":["87.3"],"通过actions进行异步操作":["87.3"],"fetchdata":["87.3"],"await":["87.3"],"dispatch":["87.3"],"来分别触发":["87.4"],"从而修改":["87.4"],"状态":["87.4"],"我们可以在异步操作中进行数据请求":["87.5"],"api":["87.5"],"调用等":["87.5"],"并在操作完成后通过调用":["87.5"],"来修改状态":["87.5"],"保持了状态的变更流程的一致性和可追踪性":["87.5"],"返回对应":["87.6"],"我们可以在组件中直接获取和使用派生状态":["87.6"],"而无需重复编写数据处理逻辑":["87.6"],"这样使得组件的代码更加简洁":["87.6"],"可维护性更高":["87.6"],"并且":["87.6"],"能够保持响应式":["87.6"],"发生变化时":["87.6"],"也会相应地更新":["87.6"],"树":["88.1"],"找到需要更新的部分":["88.1"],"并将更新应用到实际的":["88.1"],"上":["88.1"],"从而避免直接操作":["88.1"],"提高了性能和效率":["88.1"],"这使得系统更加灵活和高效":["88.2"],"还引入了一系列性能优化策略":["88.2"],"以及":["88.2"],"来改进开发体验":["88.2"],"使得开发者能够更方便地构建响应式的用户界面":["88.2"],"并提高了整体性能":["88.2"],"这些改进使得":["88.2"],"成为一个更强大和现代化的前端框架":["88.2"],"语法糖下进行":["89.0"],"message":["89.1","97.5","110.11","120.12","122.2"],"中需要通过":["89.2"],"的形式才能使用":["89.2"],"函数可以接收原始数据类型与引用数据类型":["89.2"],"函数只能接收引用数据类型":["89.2"],"lisi":["89.5"],"搜索关键字":["89.7"],"是否开启深度监听":["89.16"],"deep":["89.17"],"旧的值":["89.18","89.19","89.20"],"vue":["89.24"],"卸载完成":["89.28"],"第四个":["89.29"],"prevnode":["89.29"],"上一个虚拟节点":["89.29"],"钩子中可用":["89.29"],"div":["89.31"],"宽度":["89.31"],"高度":["89.31"],"具名插槽":["90.1"],"作用域插槽":["90.1"],"实现父子组件通信":["90.1"],"数据就可以在模板中使用了":["90.2"],"但是切记":["90.2"],"是只读的":["90.2"],"只能读取":["90.2"],"不能修改":["90.2"],"自定义事件可以实现子组件给父组件传递数据":["90.3"],"都是原生":["90.4"],"vue2中却不是这样的":["90.4"],"在vue2中组件标签需要通过native修饰符才能变为原生dom事件":["90.4"],"定义就变为自定义事件了":["90.5"],"let":["90.5"],"npmjs":["90.6"],"com":["90.6"],"package":["90.6","165.6"],"msg1":["90.7"],"defineprops":["90.8"],"接受了某一个属性":["90.8"],"方法返回的对象身上就没有相应属性与属性值":["90.8"],"button":["90.9","91.17"],"handler":["90.9"],"点击我获取父组件实例":["90.9"],"获取存储的数值":["90.10"],"使用方式参照官网":["90.11"],"父组件决定子组件的结构与外观":["90.12"],"style":["90.12"],"done":["90.12"],"green":["90.12","142.2"],"title":["90.12"],"或者":["91.2"],"非ts":["91.6"],"子组件模板中的表达式只能访问子组件的作用域":["91.10"],"loading":["91.13"],"下":["91.14"],"需要通过ref":["91.16"],"reactive":["91.16"],"添加响应式":["91.16"],"onchangemsg":["91.17"],"改变msg":["91.17"],"etc":["92.4","119.1"],"save":["92.4"],"as":["92.4"],"future":["92.4"],"projects":["92.4"],"并且它是预配置的":["92.5"],"并且支持大部分rollup插件":["92.5"],"项目的目录结构":["92.6"],"更好的支持typescript":["93.1"],"全局api的修改":["93.3"],"将原来的全局api转移到应用对象":["93.3"],"模板语法变化":["93.3"],"改进":["94.2"],"了":["94.3"],"对响应错误做点什么":["97.4"],"config":["97.5"],"网络错误":["98.1"],"跨域请求是否需要携带":["98.2"],"cookie":["98.2"],"请求配置":["98.3"],"error":["98.3","102.7","122.14"],"promise":["98.3","98.4","110.11"],"版本不受支持":["98.4"],"异常问题":["98.4"],"请联系管理员":["98.4"],"headers":["98.5"],"signheader":["98.5"],"查看局部配置":["99.1"],"file2":["99.5"],"filename":["99.6"],"比较两个分支指定文件的差异":["99.7"],"分支1":["99.7"],"分支2":["99.7"],"记录和作者":["99.8"],"blame":["99.8"],"b":["99.10","103.4","120.4"],"工作区和暂存区所有文件恢复成和指定版本一样":["99.15"],"版本号":["99.15"],"head":["99.16"],"rename":["99.18"],"旧名":["99.18"],"新名":["99.18"],"force":["99.21","121.18","123.0"],"ssh目录下":["100.4"],"octal":["101.2"],"0o744":["101.2"],"八进制s":["101.2"],"返回的是一个":["101.3"],"y":["101.5","153.2"],"boolean":["101.5"],"no":["101.6"],"yes":["101.6"],"不能":["101.8"],"赋予":["101.8"],"while":["101.10"],"aaa":["101.11"],"abcd":["101.14"],"更像面向对象编程的语法而已":["102.0"],"我叫zs":["102.1"],"我18了":["102.1"],"可以调用从父中继承得到的方法":["102.2"],"受保护":["102.6"],"及其子类中访问":["102.6"],"peter":["102.7"],"sayyyy":["102.8"],"aa":["102.8","104.2"],"可以使用this调用":["102.8"],"e":["102.10","121.21","121.22"],"我的名字是zs":["102.11"],"年龄是7":["102.11"],"zs":["103.2","106.3","107.1"],"c":["103.4","106.5"],"bb":["104.2"],"因为只有一个参数t":["104.3"],"tofixed":["104.4"],"张麻子":["104.5"],"number没有length属性":["104.7"],"ts文件会先编译为js文件":["105.2"],"有强大的代码类型提示":["105.3"],"true为开启严格模式":["105.7"],"false为关闭":["105.7"],"启动文件名":["105.10"],"zhangsan":["106.1"],"字面量模式虽然可以赋值任意类型":["107.1"],"但是赋完值之后":["107.1"],"这个对象类型是没有办法去做一个修改的":["107.1"],"如果给它增加一个age属性":["107.1"],"它是没有办法去做增加的":["107.1"],"无法对这个变量的进行任何赋值的一个操作":["107.1"],"生成单个":["108.0"],"soucemaps":["108.0"],"而不是将":["108.0"],"sourcemaps":["108.0"],"生成不同的文件":["108.0"],"inlinesources":["108.0"],"将代码与":["108.0"],"生成到一个文件中":["108.0"],"要求同时设置了":["108.0"],"其他选项":["108.0"],"experimentaldecorators":["108.0"],"启用装饰器":["108.0"],"emitdecoratormetadata":["108.0"],"为装饰器提供元数据的支持":["108.0"],"变量s的值":["109.2"],"只能是上面value定义的值":["109.2"],"axios":["110.2","110.10"],"echarts":["110.2"],"等技术栈":["110.2"],"安装全部依赖":["110.4"],"安装完依赖运行程序":["110.4"],"run":["110.4","126.2"],"代码在ecmascript模块中":["110.6"],"eslint支持使用第三方插件":["110.6"],"在使用插件之前":["110.6"],"您必须使用npm安装它":["110.6"],"该eslint":["110.6"],"前缀可以从插件名称被省略":["110.6"],"plugins":["110.6"],"eslint规则":["110.6"],"rules":["110.6"],"object":["110.8"],"keys":["110.8"],"foreach":["110.8"],"在入口文件引入":["110.8"],"use":["110.8"],"方法安装自定义插件":["110.8"],"gloablcomponent":["110.8"],"less":["110.9"],"后面的":["110.9"],"不要忘记":["110.9"],"不然会报错":["110.9"],"配置完毕你会发现":["110.9"],"提供这些全局变量可以在组件样式中使用了":["110.9"],"没有返回失败的信息":["110.10"],"获取用户信息失败":["110.10"],"安装":["110.10"],"最后通过":["110.10"],"测试接口":["110.10"],"无网络":["110.11"],"type":["110.11"],"reqlogout":["110.12"],"last":["111.0"],"运行nginx":["111.1"],"desc":["112.1"],"显示表的结构":["112.1"],"从表中删除数据":["112.2"],"grants":["112.3"],"for":["112.3"],"显示用户的权限":["112.3"],"073":["113.1"],"03":["113.4"],"根据数据的特性和需求":["113.5"],"选择适当的数据类型是非常重要的":["113.5"],"数据查询和分析":["114.0"],"数据库提供了强大的查询语言和工具":["114.0"],"使用户能够轻松地执行复杂的数据查询和分析操作":["114.0"],"workbench":["114.1","116.1"],"以及各种编程语言的mysql连接器":["114.1"],"无论是小型应用程序还是大型企业级系统":["114.1"],"mysql都是一个可靠和优秀的选择":["114.1"],"输入服务器名称":["116.1"],"用户名和密码进行连接":["116.1"],"替换为您希望创建的数据库的名称":["116.2"],"等替换为表的列名和相应的数据类型":["116.4"],"等替换为要插入的值":["116.5"],"替换为检索条件":["116.6"],"替换为更新条件":["116.7"],"替换为删除条件":["116.8"],"stringify":["117.4"],"err":["117.4","120.9","122.14"],"throw":["117.4"],"arr":["117.4"],"文件保存成功":["117.4"],"p616779645":["117.6"],"触不可及":["117.6"],"intouchables":["117.6"],"p1454261925":["117.6"],"当幸福来敲门":["117.6"],"pursuit":["117.6"],"happyness":["117.6"],"p2614359276":["117.6"],"龙猫":["117.6"],"となりのトトロ":["117.6"],"p2540924496":["117.6"],"server":["118.2","118.7"],"running":["118.2","118.7","120.16","120.17"],"at":["118.2","118.7","120.16","120.17"],"logo":["118.3"],"png":["118.3"],"encoded":["118.8"],"extended":["118.8"],"第三方中间件":["118.8"],"ie10":["118.11"],"chrome4":["118.11"],"firefox3":["118.11"],"text":["118.14"],"plain":["118.14"],"服务器成功响应预检请求后":["118.15"],"才会发送真正的请求":["118.15"],"并且携带真实数据":["118.15"],"接口项目":["119.1"],"读写和操作数据库":["119.1"],"创建实用的命令行工具辅助前端开发":["119.1"],"网络操作":["119.2"],"线程池里的任务是通过队列和事件循环的机制来执行":["119.2"],"追加和读取":["120.1"],"jpg":["120.3"],"文件写入成功":["120.3"],"pipe":["120.4"],"可以将可读流中的内容":["120.4"],"直接输出到可写流中":["120.4"],"写入成功":["120.6"],"关闭流":["120.7"],"buf":["120.8"],"将":["120.8"],"数据转为字符串":["120.8"],"function":["120.9"],"data":["120.9"],"0xaa":["120.10"],"buf3":["120.10"],"allocunsafe":["120.10"],"如使用何种语法格式引用模块和向外暴露成员":["121.2"],"指向的对象为准":["121.7"],"若失败则报错":["121.13"],"可以从npm":["121.15"],"官网中搜索自己所需要的包":["121.15"],"要快的":["121.16"],"检查镜像源是否下载成功":["121.17"],"删除":["121.18"],"unpublish":["121.18"],"加载失败":["121.21"],"终端报错":["121.21"],"cannot":["121.23"],"find":["121.23"],"module":["121.23"],"xxx":["121.23"],"使用标记删除的形式":["122.3"],"模拟删除的动作":["122.3"],"即在表中设置状态字段":["122.3"],"标记当前的数据是否被删除":["122.3"],"status":["122.3"],"服务器需要完成页面内容的拼接":["122.5"],"若请求比较多":["122.5"],"会对服务器造成一定访问压力":["122.5"],"不利于前后端分离":["122.5"],"开发效率低":["122.5"],"技术能解决":["122.6"],"问题":["122.6"],"其他页面前后端分离的开发模式":["122.7"],"logout":["122.11"],"清空当前客户端的session信息":["122.11"],"destroy":["122.11"],"请求头":["122.13"],"authorization":["122.13"],"字段中":["122.13"],"加上":["122.13"],"bearer":["122.13"],"前缀":["122.13"],"next":["122.14"],"unauthorizederror":["122.14"],"invalid":["122.14"],"unknown":["122.14"],"search":["123.0"],"keyword":["123.0"],"清除缓存并重装依赖项":["123.0"],"并使用其他人已经创建的模块":["124.1"],"的版本号":["124.2"],"则说明已成功安装":["124.2"],"获取有关指定包的信息":["124.3"],"这只是一小部分常用的":["124.3"],"提供了更多的命令和选项":["124.3"],"可以根据需要进行学习和使用":["124.3"],"你可以添加依赖项":["124.4"],"配置脚本":["124.4"],"指定项目的许可证等":["124.4"],"文件中的配置自动下载和安装所需的包":["124.5"],"并确保提供清晰的文档":["124.6"],"合适的版本管理和高质量的代码":["124.6"],"并注册一个账号":["125.1"],"使用方法和示例代码":["125.4"],"上搜索你的包":["125.5"],"并查看它的页面":["125.5"],"publish":["125.6"],"到你的计算机上":["126.1"],"是你要运行的脚本命令的名称":["126.2"],"待更新":["127.2"],"敬请期待":["127.2"],"附近":["128.1","130.1","134.1","135.1","136.1","137.1"],"打卡景点":["128.2"],"鹅岭公园是重庆最早的私家园林":["128.3"],"亦是重庆本地人的私藏小天地":["128.3"],"园内的瞰胜楼":["128.3"],"又称两江亭":["128.3"],"可观重庆两江最美夜景":["128.3"],"何记兴":["128.5"],"苕皮豆干":["128.5"],"花市豌杂面":["128.5"],"解放碑店":["128.5"],"离游玩距离适中":["130.1"],"当天晚上可以去大成殿":["130.1"],"纪念孔夫子地方":["130.1"],"有灯光":["130.1"],"3km":["130.2"],"新街口":["130.2"],"步行回去":["130.2"],"吃饭":["130.3"],"喷泉":["130.3"],"陆氏梅花糕":["130.3"],"黄勤记的鸡汁豆腐":["130.3"],"黄桥烧饼和牛肉锅贴":["130.3"],"之后打车回去":["130.3","130.4"],"号口出":["130.4"],"米达到":["130.4"],"米到达":["130.5","131.5","135.5","137.5"],"分钟到达天门山庄":["131.1"],"日上山庄":["131.1"],"住宿":["131.1"],"负一楼有白鱼赤乌市场汇聚上饶各地美食小吃":["131.4"],"晚上可以看电影":["131.4"],"之后再打车回去":["131.4"],"对面有云碧峰":["131.4"],"国家森林":["131.4"],"江西省南昌市东湖区雄州路与赣江中大道交叉口":["132.1"],"散步":["132.1"],"有点长":["132.1"],"视情况而定":["132.1"],"进行购票":["132.2"],"二楼贵宾厅第一班":["132.2"],"可以购物和看电影":["132.2"],"南昌市青云谱区施尧路":["132.3"],"演出时间":["132.4"],"现场提示为准":["132.4"],"江西省南昌市青山湖区北京东路1984号":["132.4"],"艾溪湖森林湿地公园":["132.4"],"南昌瑶湖郊野森林公园":["132.4"],"汉代海昏侯国考古遗址公园":["132.4"],"预约方式":["132.4"],"南昌本地宝":["132.4"],"南昌市新建区大塘坪乡观西村":["132.4"],"龙翔站一号线":["134.1"],"游玩时可走路":["134.1"],"分钟到达西湖边":["134.1"],"点两场":["134.2"],"当天晚上可以到鼓楼河坊街走走":["134.2"],"到皇朝花园西下车步行":["134.3"],"米到西溪湿地公园":["134.3"],"或者打车":["134.4"],"晚上可以去旁边步行街逛一逛":["135.1"],"沿江大道卢沟桥路":["135.2"],"下车":["135.2","137.3"],"之后步行":["135.2","135.4","137.4"],"青川大道晴川阁":["135.3"],"步行到":["135.3"],"鲁磨路磨山下车":["135.4"],"到达":["135.4"],"欢乐大道欢乐谷":["135.5"],"民宿":["136.1"],"木鸟民宿":["136.1"],"雕塑":["136.2"],"kaws":["136.2"],"7f":["136.2"],"票务中心":["136.3"],"门票预约":["136.3"],"谢子龙影像中心":["136.3"],"纯拍照":["136.3"],"需提前":["136.4"],"天预约":["136.4"],"腌过的鱿鱼很入味":["136.5"],"文庙坪炸炸炸":["136.5"],"胡记炸炸炸":["136.5"],"发财记炸炸炸":["136.5"],"奶茶":["136.5"],"茶颜悦色":["136.5"],"宰客严重":["136.6"],"千万别跟王府井门口的孙悟空":["136.6"],"玩偶之类的合照":["136.6"],"照完后会缠着你收费":["136.6"],"路边的切糕也挺贵的":["136.6"],"一刀下去就是几十块":["136.6"],"不要买太平街里面小玩意半成品":["136.6"],"到最后还是要加":["136.6"],"龙火车站":["137.1"],"号线":["137.2"],"岩内方向":["137.2","137.4"],"最晚":["137.2","137.4"],"湖滨东路":["137.2","137.4"],"口":["137.2","137.4"],"米":["137.2","137.4"],"湖东方向":["137.3"],"可以让开发人员创造出各种视觉效果":["138.1"],"上放置和移动元素":["138.3"],"文本":["138.4"],"图片等元素":["138.4"],"来动态地生成绘图元素":["138.5"],"从而实现更加复杂和丰富的视觉效果":["138.5"],"和库集成":["138.6"],"以创造更加丰富和定制化的用户体验":["138.6"],"的动画效果在各种设备与浏览器上都表现良好":["138.7"],"是非常适合移动设备和桌面浏览器上创建动态效果的途径":["138.7"],"的渲染速度可能会变慢":["138.8"],"取消前面的图像变换":["139.0"],"需要使用":["139.1"],"translate":["139.1"],"方法移动画布":["139.1"],"上面代码会显示一个水平倒转的":["139.2"],"高度放大":["139.2"],"倍的":["139.2"],"负向缩放本质是坐标翻转":["139.2"],"所针对的坐标轴就是画布左上角原点的坐标轴":["139.2"],"移动到":["139.4"],"多个":["139.4"],"方法具有叠加效果":["139.4"],"所以第二个矩形的左上角回到":["139.5"],"可以得到不同的效果":["140.0"],"fillrect":["141.1","142.4"],"closepath":["141.2"],"闭合路径之后图形绘制命令又重新指向到上下文中":["141.2"],"不是必需的":["141.2"],"stroke":["142.1","145.1","145.2"],"线条的宽度为":["142.1"],"线条的末端和交点都改成圆角":["142.1"],"并且设置为虚线":["142.1"],"white":["142.2"],"生成辐射样式以后":["142.2"],"用这个样式填充一个矩形":["142.2"],"图像加载成功以后":["142.3"],"生成图像样式":["142.3"],"然后使用这个样式填充指定区域":["142.3"],"第五个参数是半径":["144.3"],"与":["144.3"],"形成一条直线":["144.3"],"形成第二条直线":["144.3"],"弧线就是与这两根直线相切的部分":["144.3"],"arc":["144.6"],"math":["144.6"],"pi":["144.6"],"二等奖":["146.2"],"三等奖":["146.2"],"requestanimationframe":["147.3"],"href":["149.3"],"改变颜色":["149.3"],"onchange":["149.3"],"strokestyle":["149.3"],"destination":["149.3"],"out":["149.3"],"clearrect":["149.3"],"width":["149.4"],"height":["149.4"],"使开发者能够轻松构建高性能的图形界面和游戏":["152.1"],"锚点":["153.2"],"如旋转":["153.2"],"位移的基点":["153.2"],"x":["153.2"],"也是从左上角开始计算":["153.2"],"将矩形添加到舞台":["153.2"],"stage":["153.2","154.1","154.2","156.1","157.3","158.2","158.3","158.4","158.5","160.1","160.2"],"addchild":["153.2","154.1","154.2","156.1","157.3","158.1","158.2","158.3","158.4","158.5"],"set":["154.1","156.1"],"将文字添加到舞台":["154.1"],"anchor":["156.1"],"将精灵添加到舞台":["156.1","157.3"],"sprite":["156.3"],"view":["157.1"],"any":["157.1"],"app":["158.5"],"sprite2":["160.1","160.2"],"创建精灵2":["160.2"],"150px":["161.1"],"这点和":["161.1"],"canvas":["161.1"],"000000":["161.7"],"动画":["162.0"],"animation":["162.0"],"提供了强大的动画支持":["162.0"],"可以实现各种复杂的动画效果":["162.0"],"您可以通过修改场景中的属性或使用插值器来创建动画序列":["162.0"],"交互":["162.0"],"interaction":["162.0"],"可以与用户交互":["162.0"],"通过鼠标":["162.0"],"键盘和触摸事件来控制和操纵":["162.0"],"完整代码":["163.9","163.12","164.5"],"xzy":["164.3"],"pnpm":["165.1"],"echo":["165.2"],"比如你在":["165.9"],"下创建一个":["165.9"],"notes":["165.9"],"文件夹":["165.9"],"那么它的路径就是":["165.9"],"about2":["165.10"],"pages":["165.11"],"的分支":["165.11"],"这个分支存放着就是打包好的代码":["165.11"],"settings":["165.11"],"会有一个地址":["165.11"],"这个地址就是部署之后的地址了":["165.11"],"这个项目是实时更新的不需要你重新部署操作":["165.11"],"你要做的就是更新你的":["165.11"],"master":["165.11"],"分支即可":["165.11"]}]'},e={"0.0":{t:"# 算法\r",p:"\r",l:"algorithms/demo1.html",a:"算法"},"0.1":{t:"123",p:"",l:"algorithms/demo1.html#_123",a:"_123"},"1.0":{t:"# demo2",p:"",l:"algorithms/demo2.html",a:"demo2"},"2.0":{t:"# demo3",p:"",l:"algorithms/demo3.html",a:"demo3"},"3.0":{t:"# 该内容正在努力建设中 ......",p:"",l:"algorithms/index.html",a:"该内容正在努力建设中"},"4.0":{t:"# CSS 选择器\r",p:"\r",l:"frontEnd/css3/base/css选择器.html",a:"css-选择器"},"4.1":{t:"通配符选择器\r",p:`
选择页面所有元素
用于清除内外边距

* {
  padding: 0;
  margin: 0;
}

`,l:"frontEnd/css3/base/css选择器.html#通配符选择器",a:"通配符选择器"},"4.2":{t:"元素选择器\r",p:`
通过标签名选择元素
优点：可快速为同类型标签统一设置样式
缺点：不能涉及差异化样式，只能选择全部标签

h1 {
  color: #ccc;
}

`,l:"frontEnd/css3/base/css选择器.html#元素选择器",a:"元素选择器"},"4.3":{t:"类选择器\r",p:`
通过类名选择元素

.container {
  color: pink;
}

`,l:"frontEnd/css3/base/css选择器.html#类选择器",a:"类选择器"},"4.4":{t:"id 选择器\r",p:`
通过元素 id 属性选择元素

#md {
  font-weight: 600;
}

`,l:"frontEnd/css3/base/css选择器.html#id-选择器",a:"id-选择器"},"4.5":{t:"交集选择器\r",p:`&lt;p class=&quot;good&quot;&gt;&lt;/p&gt;
&lt;p class=&quot;good beaauty&quot;&gt;&lt;/p&gt;

/* 语法 ...`,l:"frontEnd/css3/base/css选择器.html#交集选择器",a:"交集选择器"},"4.6":{t:"并集选择器\r",p:`
作用：选中多个选择器对应的元素，又称：分组选择器
语法：选择器1, 选择器2, 选择器3,... 选择器 n {}

h1,
h2,
h3 {
  text-align: center;
}

`,l:"frontEnd/css3/base/css选择器.html#并集选择器",a:"并集选择器"},"4.7":{t:"后代选择器\r",p:`
在所有后代节点中选

ul li {
  color: blue;
}

`,l:"frontEnd/css3/base/css选择器.html#后代选择器",a:"后代选择器"},"4.8":{t:"子选择器\r",p:`
只在亲儿子中选

div &gt; a {
  color: green;
}

`,l:"frontEnd/css3/base/css选择器.html#子选择器",a:"子选择器"},"4.9":{t:"兄弟选择器\r",p:`
选择所有指定元素的相邻后一个兄弟节点

&lt;h1&gt;h1-2&lt;/h1&gt;
&lt;p&gt;p0 被选中&lt;/p&gt;
&lt;div class=&quot;contain ...`,l:"frontEnd/css3/base/css选择器.html#兄弟选择器",a:"兄弟选择器"},"4.10":{t:"伪类选择器\r",p:`
根据元素状态或所处 DOM 结构选择元素

`,l:"frontEnd/css3/base/css选择器.html#伪类选择器",a:"伪类选择器"},"4.11":{t:"动态伪类选择器\r",p:`按这个顺序声明
a:link 链接一开始的样式
a:visited 链接访问后的样式
a:hover 光标经过链接的样式
a:active 链接被按下时的样式

:focus 用于选择获取焦点的表单元 ...`,l:"frontEnd/css3/base/css选择器.html#动态伪类选择器",a:"动态伪类选择器"},"4.12":{t:"结构伪类选择器(C3)\r",p:`


选择符
含义




E:first-child
第一个子元素 E


E:last-child
最后一个子元素 E


E:nth-child(n)
第 n 个子元素 E


E:first- ...`,l:"frontEnd/css3/base/css选择器.html#结构伪类选择器-c3",a:"结构伪类选择器-c3"},"4.13":{t:"属性选择器(C3)\r",p:`


选择符
含义




E[att]
选择具有 att 属性的 E 元素


E[att=&quot;val&quot;]
选择具有 att 属性且属性值等于 val 的 E 元素


E[att ...`,l:"frontEnd/css3/base/css选择器.html#属性选择器-c3",a:"属性选择器-c3"},"4.14":{t:"伪元素选择器(C3)\r",p:`
伪元素选择器利用 CSS 创建新标签元素，而不需要 HTML 标签，从而简化 HTML 结构
before 和 after 创建了一个行内元素，在 DOM 树中无法找到，故为伪元素
必须有 cont ...`,l:"frontEnd/css3/base/css选择器.html#伪元素选择器-c3",a:"伪元素选择器-c3"},"4.15":{t:"相关链接\r",p:`一篇搞清伪类和伪元素
`,l:"frontEnd/css3/base/css选择器.html#相关链接",a:"相关链接"},"5.0":{t:"# Flex 布局 - 灵活的网页布局解决方案\r",p:"Flex 布局（也称为弹性盒子布局）是一种用于创建灵活、自适应的网页布局的 CSS 工具。它通过在父元素上设置display: flex，将子元素定义为弹性项目，使它们能够在主轴和交叉轴上灵活布局。F ...",l:"frontEnd/css3/base/flex.html",a:"flex-布局-灵活的网页布局解决方案"},"5.1":{t:"如何启用 Flex 布局？\r",p:`要启用 Flex 布局，只需在要成为 Flex 容器的父元素上设置display: flex即可：
.container {
  display: flex;
}

一旦容器成为 Flex 容器，其中 ...`,l:"frontEnd/css3/base/flex.html#如何启用-flex-布局",a:"如何启用-flex-布局"},"5.2":{t:"主轴和交叉轴\r",p:`Flex 布局具有一个主轴和一个交叉轴。默认情况下，主轴是水平方向，交叉轴是垂直方向。可以使用flex-direction属性更改主轴方向。
flex-direction 决定 Flex 项目的排列方 ...`,l:"frontEnd/css3/base/flex.html#主轴和交叉轴",a:"主轴和交叉轴"},"5.3":{t:"主轴对齐与交叉轴对齐\r",p:`可以使用justify-content属性控制主轴上的对齐方式，align-items属性控制交叉轴上的对齐方式。
justify-content 定义 Flex 项目在主轴上的对齐方式：

flex ...`,l:"frontEnd/css3/base/flex.html#主轴对齐与交叉轴对齐",a:"主轴对齐与交叉轴对齐"},"5.4":{t:"换行与排列\r",p:`默认情况下，Flex 项目会在一行中排列，如果项目超出了容器的宽度，它们会缩小以适应。可以使用flex-wrap属性来控制项目是否换行。
flex-wrap 指定 Flex 项目是否换行。

nowr ...`,l:"frontEnd/css3/base/flex.html#换行与排列",a:"换行与排列"},"5.5":{t:"flex-flow\r",p:`是flex-direction和flex-wrap的缩写。
.container {
  display: flex;
  flex-flow: row wrap; /* 水平排列，允许换行 */
} ...`,l:"frontEnd/css3/base/flex.html#flex-flow",a:"flex-flow"},"5.6":{t:"弹性增长与缩小\r",p:`
使用flex-grow属性可以控制项目在剩余空间中的放大比例
使用flex-shrink属性可以控制项目在空间不足时的缩小比例。

.item {
  flex-grow: 1; /* 弹性增长因子 ...`,l:"frontEnd/css3/base/flex.html#弹性增长与缩小",a:"弹性增长与缩小"},"5.7":{t:"弹性基准值\r",p:`flex-basis属性定义了项目的基准尺寸，如果没有设置宽度或高度，则会参考该值进行布局：
.item {
  flex-basis: 200px; /* 项目的基准宽度为200像素 */
}

`,l:"frontEnd/css3/base/flex.html#弹性基准值",a:"弹性基准值"},"5.8":{t:"嵌套 Flex 容器\r",p:`在 Flex 项目内部可以再创建一个新的 Flex 容器，嵌套的 Flex 容器有自己的主轴和交叉轴：
.container {
  display: flex;
  .inner-container ...`,l:"frontEnd/css3/base/flex.html#嵌套-flex-容器",a:"嵌套-flex-容器"},"5.9":{t:"多行对齐\r",p:`在多行 Flex 容器中，可以使用align-content属性控制交叉轴上多行的对齐方式。
align-content定义多行 Flex 项目在交叉轴上的对齐方式：

flex-start：多行项目 ...`,l:"frontEnd/css3/base/flex.html#多行对齐",a:"多行对齐"},"5.10":{t:"实现常见布局需求\r",p:`Flex 布局非常适合实现常见的网页布局需求，例如：


居中对齐：通过justify-content和align-items属性实现水平和垂直居中对齐。


两端对齐：使用justify-conte ...`,l:"frontEnd/css3/base/flex.html#实现常见布局需求",a:"实现常见布局需求"},"6.0":{t:"# Grid 布局：现代网页布局的终极解决方案\r",p:"\r",l:"frontEnd/css3/base/grid.html",a:"grid-布局-现代网页布局的终极解决方案"},"6.1":{t:"1. 理解 Grid 布局\r",p:"Grid 布局是一种二维布局模型，可以将网页划分为网格，其中包含了行（rows）和列（columns）。通过将网格容器（Grid Container）分割为网格单元格（Grid Cells），开发者可 ...",l:"frontEnd/css3/base/grid.html#_1-理解-grid-布局",a:"_1-理解-grid-布局"},"6.2":{t:"1.1 网格容器与网格项\r",p:`要使用 Grid 布局，首先需要将一个 HTML 元素定义为网格容器。我们可以通过设置 display: grid; 来实现：
.grid-container {
  display: grid;
} ...`,l:"frontEnd/css3/base/grid.html#_1-1-网格容器与网格项",a:"_1-1-网格容器与网格项"},"6.3":{t:"1.2 行与列\r",p:"Grid 布局的核心是行和列，通过定义网格的行和列，我们可以创造出复杂的网页布局。在网格容器中，通过 grid-template-columns 和 grid-template-rows 属性来定义列 ...",l:"frontEnd/css3/base/grid.html#_1-2-行与列",a:"_1-2-行与列"},"6.4":{t:"1.3 网格线与网格跨度\r",p:`在 Grid 布局中，网格线（Grid Lines）是定义网格单元格边界的线条。水平的网格线定义了行，而垂直的网格线定义了列。我们可以通过指定网格线的名称或索引来定位网格项。
网格跨度（Grid Sp ...`,l:"frontEnd/css3/base/grid.html#_1-3-网格线与网格跨度",a:"_1-3-网格线与网格跨度"},"6.5":{t:"2. Grid 布局的属性详解\r",p:`Grid 布局提供了一系列强大的属性，用于更精确地控制网页布局。以下是一些常用的 Grid 属性：
`,l:"frontEnd/css3/base/grid.html#_2-grid-布局的属性详解",a:"_2-grid-布局的属性详解"},"6.6":{t:"2.1 `grid-template-columns` 和 `grid-template-rows`\r",p:"grid-template-columns 和 grid-template-rows 用于定义网格的列和行的大小和结构。可以指定固定大小（如像素、百分比等），也可以使用 fr 单位表示可用空间的比例分 ...",l:"frontEnd/css3/base/grid.html#_2-1-grid-template-columns-和-grid-template-rows",a:"_2-1-grid-template-columns-和-grid-template-rows"},"6.7":{t:"2.2 `grid-template-areas`\r",p:`grid-template-areas 允许通过指定网格区域的名称来创建更具语义的布局。通过在网格容器中使用网格区域名称，而不是使用行和列属性，可以更清晰地定义布局结构。
.grid-containe ...`,l:"frontEnd/css3/base/grid.html#_2-2-grid-template-areas",a:"_2-2-grid-template-areas"},"6.8":{t:"2.3 `grid-template`\r",p:"grid-template 是 grid-template-columns、grid-template-rows 和 grid-template-areas 的缩写属性。可以通过一个属性同时定义列、行 ...",l:"frontEnd/css3/base/grid.html#_2-3-grid-template",a:"_2-3-grid-template"},"6.9":{t:"2.4 `grid-gap`\r",p:`grid-gap 定义网格项之间的间隔（行和列之间的间距）。可以使用两个值表示行和列的间隔。
.grid-container {
  display: grid;
  grid-gap: 10px 2 ...`,l:"frontEnd/css3/base/grid.html#_2-4-grid-gap",a:"_2-4-grid-gap"},"6.10":{t:"2.5 `grid-column-gap` 和 `grid-row-gap`\r",p:`grid-column-gap 和 grid-row-gap 分别定义网格列和行之间的间隔。与 grid-gap 类似，但允许分别指定列和行的间隔。
.grid-container {
  displ ...`,l:"frontEnd/css3/base/grid.html#_2-5-grid-column-gap-和-grid-row-gap",a:"_2-5-grid-column-gap-和-grid-row-gap"},"6.11":{t:"2.6 `grid-auto-columns` 和 `grid-auto-rows`\r",p:`grid-auto-columns 和 grid-auto-rows 定义了当网格容器中的网格项目无法放入先前定义的网格轨道时，自动创建的额外列和行的大小。可以指定固定大小或使用 fr 单位。
.gr ...`,l:"frontEnd/css3/base/grid.html#_2-6-grid-auto-columns-和-grid-auto-rows",a:"_2-6-grid-auto-columns-和-grid-auto-rows"},"6.12":{t:"2.7 `grid-auto-flow`\r",p:`grid-auto-flow 定义了当网格项目无法放入先前定义的网格轨道时，如何自动创建额外的网格项目。默认值是 row，表示按照行进行放置，也可以设置为 column。
.grid-containe ...`,l:"frontEnd/css3/base/grid.html#_2-7-grid-auto-flow",a:"_2-7-grid-auto-flow"},"6.13":{t:"2.8 `justify-items` 和 `align-items`\r",p:`justify-items 和 align-items 用于在网格项目中定义对齐方式。justify-items 控制项目在列轴上的对齐方式，align-items 控制项目在行轴上的对齐方式。
.g ...`,l:"frontEnd/css3/base/grid.html#_2-8-justify-items-和-align-items",a:"_2-8-justify-items-和-align-items"},"6.14":{t:"2.9 `justify-content` 和 `align-content`\r",p:"justify-content 和 align-content 用于定义网格项目在网格容器内部的对齐方式。justify-content 控制网格项目在列轴上的对齐方式，align-content 控 ...",l:"frontEnd/css3/base/grid.html#_2-9-justify-content-和-align-content",a:"_2-9-justify-content-和-align-content"},"6.15":{t:"2.10 `justify-self` 和 `align-self`\r",p:"justify-self 和 align-self 用于定义单个网格项目自身在网格单元格中的对齐方式。justify-self 控制项目在列轴上的对齐方式，align-self 控制项目在行轴上的对齐 ...",l:"frontEnd/css3/base/grid.html#_2-10-justify-self-和-align-self",a:"_2-10-justify-self-和-align-self"},"6.16":{t:"2.11 `grid-column` 和 `grid-row`\r",p:`grid-column 和 grid-row 用于将网格项目放置在指定的列和行位置。可以使用数字、span 关键字、网格线名称或 auto 值来指定位置。
.grid-item {
  grid-co ...`,l:"frontEnd/css3/base/grid.html#_2-11-grid-column-和-grid-row",a:"_2-11-grid-column-和-grid-row"},"6.17":{t:"3. 创建网格布局\r",p:`使用 Grid 布局，我们可以创建灵活且复杂的网页布局。了解如何创建网格布局对于掌握 Grid 布局至关重要。
`,l:"frontEnd/css3/base/grid.html#_3-创建网格布局",a:"_3-创建网格布局"},"6.18":{t:"3.1 网格轨道的大小和增长\r",p:`网格轨道（Grid Track）是相邻网格线之间的空间，包括行轨道和列轨道。我们可以通过设置网格轨道的大小和增长方式来控制网格布局。
.grid-container {
  display: grid ...`,l:"frontEnd/css3/base/grid.html#_3-1-网格轨道的大小和增长",a:"_3-1-网格轨道的大小和增长"},"6.19":{t:"3.2 网格模板的定义\r",p:`通过使用网格模板（Grid Template），我们可以更加直观地定义网格布局，使得布局结构更加清晰。
.grid-container {
  display: grid;
  grid-templa ...`,l:"frontEnd/css3/base/grid.html#_3-2-网格模板的定义",a:"_3-2-网格模板的定义"},"6.20":{t:"3.3 响应式设计与媒体查询\r",p:`Grid 布局与响应式设计完美结合，通过使用媒体查询（Media Queries），我们可以在不同的屏幕尺寸和设备上应用不同的网格布局。
.grid-container {
  display: gr ...`,l:"frontEnd/css3/base/grid.html#_3-3-响应式设计与媒体查询",a:"_3-3-响应式设计与媒体查询"},"6.21":{t:"4. Grid 布局的实际应用\r",p:`Grid 布局在实际应用中非常强大，可以用于创建各种复杂的网页布局。
`,l:"frontEnd/css3/base/grid.html#_4-grid-布局的实际应用",a:"_4-grid-布局的实际应用"},"6.22":{t:"4.1 简单网页布局\r",p:`Grid 布局可以用于创建简单的网页布局，如标题、导航栏和内容区域。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head ...`,l:"frontEnd/css3/base/grid.html#_4-1-简单网页布局",a:"_4-1-简单网页布局"},"6.23":{t:"4.2 复杂网页布局\r",p:`Grid 布局可以应用于创建复杂的网页布局，如新闻网站的首页布局。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head& ...`,l:"frontEnd/css3/base/grid.html#_4-2-复杂网页布局",a:"_4-2-复杂网页布局"},"6.24":{t:"4.3 布局的嵌套与组合\r",p:`Grid 布局可以嵌套使用，从而创建更加复杂和多样化的布局。
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt; ...`,l:"frontEnd/css3/base/grid.html#_4-3-布局的嵌套与组合",a:"_4-3-布局的嵌套与组合"},"6.25":{t:"4.4 网格的动态调整\r",p:`Grid 布局的一个重要特点是网格项目的动态调整。网格项可以根据内容的大小自动调整，也可以通过调整网格容器的大小来实现动态布局。
&lt;!DOCTYPE html&gt;
&lt;html lang ...`,l:"frontEnd/css3/base/grid.html#_4-4-网格的动态调整",a:"_4-4-网格的动态调整"},"6.26":{t:"5. Grid 布局与 Flexbox 的比较\r",p:`Grid 布局和 Flexbox 布局是 CSS 中两种常用的布局模型。它们分别适用于不同的布局需求，并可以结合使用以实现复杂的布局。
`,l:"frontEnd/css3/base/grid.html#_5-grid-布局与-flexbox-的比较",a:"_5-grid-布局与-flexbox-的比较"},"6.27":{t:"5.1 适用场景\r",p:`
Grid 布局：适用于创建二维布局，即同时控制行和列的布局。Grid 布局适用于复杂的网页布局，如主页布局、产品展示页面等。
Flexbox 布局：适用于单一方向的布局，即只控制主轴或交叉轴的布局。 ...`,l:"frontEnd/css3/base/grid.html#_5-1-适用场景",a:"_5-1-适用场景"},"6.28":{t:"5.2 布局的差异与共同点\r",p:`

Grid 布局：可以实现更复杂的布局结构，支持二维布局，可以精确控制网格项的位置和跨度，支持网格区域的命名，更具语义性。


Flexbox 布局：适用于一维布局，支持在主轴上对齐网格项，支持网格 ...`,l:"frontEnd/css3/base/grid.html#_5-2-布局的差异与共同点",a:"_5-2-布局的差异与共同点"},"6.29":{t:"6. 常见问题与最佳实践\r",p:`在使用 Grid 布局时，我们可能会遇到一些常见问题，以下是一些最佳实践和优化建议：
`,l:"frontEnd/css3/base/grid.html#_6-常见问题与最佳实践",a:"_6-常见问题与最佳实践"},"6.30":{t:"6.1 网格项目的排序与定位\r",p:`在 Grid 布局中，网格项的顺序并不一定与它们在 HTML 中的顺序一致。可以使用 order 属性来改变网格项的顺序。
.grid-item:nth-child(3) {
  order: 1;  ...`,l:"frontEnd/css3/base/grid.html#_6-1-网格项目的排序与定位",a:"_6-1-网格项目的排序与定位"},"6.31":{t:"6.2 跨浏览器兼容性\r",p:`虽然 Grid 布局在现代浏览器中得到了很好的支持，但在旧版本的浏览器中可能存在兼容性问题。为了确保网页在不同浏览器中正常显示，可以使用 CSS 前缀或回退方案。
`,l:"frontEnd/css3/base/grid.html#_6-2-跨浏览器兼容性",a:"_6-2-跨浏览器兼容性"},"6.32":{t:"6.3 性能考虑\r",p:"尽管 Grid 布局强大，但在某些情况下可能会对性能产生一定影响。当网页中包含大量网格项和复杂的布局时，可能会导致渲染性能下降。在使用 Grid 布局时，建议合理控制网格项的数量和布局复杂度，以优化网 ...",l:"frontEnd/css3/base/grid.html#_6-3-性能考虑",a:"_6-3-性能考虑"},"6.33":{t:"6.4 最佳实践与优化建议\r",p:`
使用网格模板（grid-template）和网格区域（grid-template-areas）来定义布局，以提高代码的可读性和维护性。
嵌套使用 Grid 布局，实现更复杂的布局需求。
结合 Fle ...`,l:"frontEnd/css3/base/grid.html#_6-4-最佳实践与优化建议",a:"_6-4-最佳实践与优化建议"},"7.0":{t:"# 选择器优先级\r",p:`一般情况下，选择器的优先级为

!important 行内 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通配选择器
相同级别的选择器，显示最后面的样式。

`,l:"frontEnd/css3/base/选择器优先级.html",a:"选择器优先级"},"7.1":{t:"CSS 权重\r",p:`::: tip 详细描述

计算方式：每个选择器，都可以算出一组权重，格式为（a,b,c)


格式: (a, b, c)

a: ID 选择器的个数
b: 类、伪类、属性 选择器的个数
c: 元素、 ...`,l:"frontEnd/css3/base/选择器优先级.html#css-权重",a:"css-权重"},"8.0":{t:"# CSS 水平垂直居中\r",p:"\r",l:"frontEnd/css3/tricks/center.html",a:"css-水平垂直居中"},"8.1":{t:"行内元素\r",p:`
使用 line-height

&lt;div class=&quot;container&quot;&gt;
  &lt;span&gt;123&lt;/span&gt;
&lt;/div&gt; ...`,l:"frontEnd/css3/tricks/center.html#行内元素",a:"行内元素"},"8.2":{t:"块级元素\r",p:`&lt;div class=&quot;container&quot;&gt;
  &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;
&lt;/div&gt; ...`,l:"frontEnd/css3/tricks/center.html#块级元素",a:"块级元素"},"8.3":{t:"使用 margin\r",p:`
父元素使用 display: flex

.container {
  display: flex;
  height: 100vh;
}

.box {
  width: 400px;
  hei ...`,l:"frontEnd/css3/tricks/center.html#使用-margin",a:"使用-margin"},"8.4":{t:"使用定位\r",p:"\r",l:"frontEnd/css3/tricks/center.html#使用定位",a:"使用定位"},"8.5":{t:"定宽高\r",p:`.box {
  width: 400px;
  height: 200px;
  background: skyblue;

  position: absolute;
  left: 50%;
  ...`,l:"frontEnd/css3/tricks/center.html#定宽高",a:"定宽高"},"8.6":{t:"不定宽高\r",p:`
使用 transform

.box {
  width: 400px;
  height: 200px;
  background: skyblue;

  position: absolute; ...`,l:"frontEnd/css3/tricks/center.html#不定宽高",a:"不定宽高"},"8.7":{t:"使用 Flex 布局\r",p:`.container {
  display: flex;
  justify-content: center; /* 水平居中 */
  align-items: center; /* 垂直居中 * ...`,l:"frontEnd/css3/tricks/center.html#使用-flex-布局",a:"使用-flex-布局"},"8.8":{t:"使用 Grid 布局\r",p:`.container {
  display: grid;
  place-content: center;
}

`,l:"frontEnd/css3/tricks/center.html#使用-grid-布局",a:"使用-grid-布局"},"9.0":{t:"# CSS 文本溢出隐藏\r",p:`&lt;div class=&quot;content&quot;&gt;12333333333333333333333333&lt;/div&gt;

.content {
  width: 100 ...`,l:"frontEnd/css3/tricks/ellipsis.html",a:"css-文本溢出隐藏"},"9.1":{t:"单行溢出隐藏\r",p:`.content {
  width: 100px; /* 1.设置元素的宽度 */
  border: 1px solid #000;
  white-space: nowrap; /* 2.不换行 ...`,l:"frontEnd/css3/tricks/ellipsis.html#单行溢出隐藏",a:"单行溢出隐藏"},"9.2":{t:"多行溢出隐藏-webkit-内核\r",p:`&lt;div class=&quot;text&quot;&gt;
  这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是多行文本内容，这里是 ...`,l:"frontEnd/css3/tricks/ellipsis.html#多行溢出隐藏-webkit-内核",a:"多行溢出隐藏-webkit-内核"},"9.3":{t:"多行溢出隐藏 兼容较好\r",p:`.text {
  /* 1.限定宽度 */
  width: 400px;
  border: solid;
  margin: auto;
  /* 2.限定高度以及行高，并且行高与高度要成比例  ...`,l:"frontEnd/css3/tricks/ellipsis.html#多行溢出隐藏-兼容较好",a:"多行溢出隐藏-兼容较好"},"10.0":{t:"# 滚动条样式\r",p:`/* 滚动条 */
::-webkit-scrollbar {
  /* 纵向 */
  width: 8px;
  /* 横向 */
  height: 8px;
  background-colo ...`,l:"frontEnd/css3/tricks/scrollbar.html",a:"滚动条样式"},"11.0":{t:"# CSS 绘制三角形\r",p:"\r",l:"frontEnd/css3/tricks/triangle.html",a:"css-绘制三角形"},"11.1":{t:"方法 1：使用边框\r",p:`/* 朝上的三角形 */
.arrow-up {
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-rig ...`,l:"frontEnd/css3/tricks/triangle.html#方法-1-使用边框",a:"方法-1-使用边框"},"11.2":{t:"方法 2：使用 clip-path 属性\r",p:`.content {
  width: 175px;
  height: 175px;
  margin: auto;
  object-fit: cover;
  background-image: ...`,l:"frontEnd/css3/tricks/triangle.html#方法-2-使用-clip-path-属性",a:"方法-2-使用-clip-path-属性"},"12.0":{t:"# ES6 class\r",p:`在 ECMAScript 2015（ES6）中，引入了类（Class）的概念，允许我们以一种更面向对象的方式来创建和管理对象。
`,l:"frontEnd/ECMAScript/es6/class.html",a:"es6-class"},"12.1":{t:"创建类\r",p:`使用class关键字可以定义一个类，类名通常首字母大写。
class Person {
  // 构造函数，用于创建对象时进行初始化
  constructor(name, age) {
    th ...`,l:"frontEnd/ECMAScript/es6/class.html#创建类",a:"创建类"},"12.2":{t:"创建对象\r",p:`通过类创建对象时，需要使用new关键字。
const person1 = new Person('John', 30)
const person2 = new Person('Alice', 25)
 ...`,l:"frontEnd/ECMAScript/es6/class.html#创建对象",a:"创建对象"},"12.3":{t:"类的继承\r",p:`ES6 的类支持继承，可以使用extends关键字来继承另一个类的属性和方法。
class Student extends Person {
  constructor(name, age, majo ...`,l:"frontEnd/ECMAScript/es6/class.html#类的继承",a:"类的继承"},"12.4":{t:"方法重写\r",p:`子类可以重写继承自父类的方法。
class Student extends Person {
  // ...

  // 重写父类的方法
  sayHello() {
    console.log ...`,l:"frontEnd/ECMAScript/es6/class.html#方法重写",a:"方法重写"},"12.5":{t:"静态方法\r",p:`使用static关键字定义静态方法，静态方法属于类本身，而不是类的实例。
class MathUtils {
  static add(a, b) {
    return a + b
  }

   ...`,l:"frontEnd/ECMAScript/es6/class.html#静态方法",a:"静态方法"},"12.6":{t:"Getter 和 Setter\r",p:`使用get和set关键字定义属性的读取器和设置器。
class Circle {
  constructor(radius) {
    this._radius = radius
  }

  // ...`,l:"frontEnd/ECMAScript/es6/class.html#getter-和-setter",a:"getter-和-setter"},"13.0":{t:"# ECMAScript 的介绍\r",p:"\r",l:"frontEnd/ECMAScript/es6/index.html",a:"ecmascript-的介绍"},"13.1":{t:"ES6 入门教程\r",p:`阮一峰ECMAScript 6 入门
`,l:"frontEnd/ECMAScript/es6/index.html#es6-入门教程",a:"es6-入门教程"},"13.2":{t:"ECMAScript 简介\r",p:`
ECMAScript（简称 ES）是一种由 ECMA 国际（European Computer Manufacturers Association）制定和维护的脚本语言标准。它是 JavaScrip ...`,l:"frontEnd/ECMAScript/es6/index.html#ecmascript-简介",a:"ecmascript-简介"},"13.3":{t:"ECMAScript 与 JavaScript 的关系？\r",p:`
ECMAScript 简称 ES。ES 是一个脚本语言。注意，是 ES 也是脚本语言。
ES 通常可以看作是 JavaScript 的标准化规范。
ES 只提供了最基本的语法。如：怎样定义变量和函数 ...`,l:"frontEnd/ECMAScript/es6/index.html#ecmascript-与-javascript-的关系",a:"ecmascript-与-javascript-的关系"},"13.4":{t:"ECMAScript 版本发布记录\r",p:`以下是每个 ECMAScript 版本的主要内容概述：


ECMAScript 1 (ES1) - 1997:

第一个 ECMAScript 版本，定义了基本的语法和数据类型，包括变量、操作符、函 ...`,l:"frontEnd/ECMAScript/es6/index.html#ecmascript-版本发布记录",a:"ecmascript-版本发布记录"},"14.0":{t:"# Map 数据结构\r",p:"\r",l:"frontEnd/ECMAScript/es6/Map数据结构.html",a:"map-数据结构"},"14.1":{t:"简述\r",p:`Map 是 ES6 中一种强大的数据结构，它是一种用于存储键值对的集合。
`,l:"frontEnd/ECMAScript/es6/Map数据结构.html#简述",a:"简述"},"14.2":{t:"方法\r",p:`在 ES6 中，Map 数据结构提供了以下常用的方法：

set(key, value): 向 Map 中添加键值对，如果键已存在，则更新对应的值。
get(key): 获取指定键对应的值，如果键不存 ...`,l:"frontEnd/ECMAScript/es6/Map数据结构.html#方法",a:"方法"},"14.3":{t:"对象操作\r",p:"\r",l:"frontEnd/ECMAScript/es6/Map数据结构.html#对象操作",a:"对象操作"},"14.4":{t:"转换\r",p:`var kvArray = [
  ['key1', 'value1'],
  ['key2', 'value2']
]
// 可以将 二维 键值对数组转换 Map 对象

var myMap = n ...`,l:"frontEnd/ECMAScript/es6/Map数据结构.html#转换",a:"转换"},"14.5":{t:"克隆\r",p:`var myMap1 = new Map([
  ['key1', 'value1'],
  ['key2', 'value2']
])
var myMap2 = new Map(myMap1)
/* ...`,l:"frontEnd/ECMAScript/es6/Map数据结构.html#克隆",a:"克隆"},"14.6":{t:"合并\r",p:`var first = new Map([
  [1, 'one'],
  [2, 'two'],
  [3, 'three']
])
var second = new Map([
  [1, 'un ...`,l:"frontEnd/ECMAScript/es6/Map数据结构.html#合并",a:"合并"},"15.0":{t:"# ES6 模块化\r",p:"\r",l:"frontEnd/ECMAScript/es6/module.html",a:"es6-模块化"},"15.1":{t:"引言\r",p:"随着前端技术的不断发展，JavaScript 作为一种脚本语言，其应用范围也越来越广泛。然而，在处理复杂的项目和大规模的代码库时，传统的 JavaScript 代码组织方式会变得不够优雅和高效。为了解 ...",l:"frontEnd/ECMAScript/es6/module.html#引言",a:"引言"},"15.2":{t:"模块化的意义\r",p:`在传统的 JavaScript 代码中，所有的变量、函数和类等都在全局作用域下定义，这样容易导致命名冲突和代码复杂度的增加。尤其在大型项目中，代码量庞大、文件众多，这些问题会变得更为明显。
模块化的意 ...`,l:"frontEnd/ECMAScript/es6/module.html#模块化的意义",a:"模块化的意义"},"15.3":{t:"避免命名冲突\r",p:`在模块中定义的变量、函数和类等都只在当前模块的作用域内有效，不会污染全局命名空间，从而避免了命名冲突的问题。
`,l:"frontEnd/ECMAScript/es6/module.html#避免命名冲突",a:"避免命名冲突"},"15.4":{t:"更好的代码组织和维护\r",p:`模块化将代码分割成多个小块，每个模块都有自己的职责，使得代码的组织和维护变得更加清晰和简单。开发者可以更容易地理解每个模块的功能，并且修改、测试和重构模块都更加方便。
`,l:"frontEnd/ECMAScript/es6/module.html#更好的代码组织和维护",a:"更好的代码组织和维护"},"15.5":{t:"代码重用\r",p:`模块化使得代码可以被多个模块共享和复用，提高了代码的可重用性。当多个模块需要相同的功能时，只需要导入相应的模块，而不需要重复编写代码。
`,l:"frontEnd/ECMAScript/es6/module.html#代码重用",a:"代码重用"},"15.6":{t:"导出模块\r",p:`在 ES6 中，通过使用export关键字，我们可以将模块中的变量、函数或类导出，以便其他模块可以使用它们。
`,l:"frontEnd/ECMAScript/es6/module.html#导出模块",a:"导出模块"},"15.7":{t:"导出变量\r",p:`使用export关键字导出一个变量。
// module1.js
export const name = 'John'

`,l:"frontEnd/ECMAScript/es6/module.html#导出变量",a:"导出变量"},"15.8":{t:"导出函数\r",p:`使用export关键字导出一个函数。
// module1.js
export function sayHello() {
  console.log(\`Hello, \${name}!\`)
}

`,l:"frontEnd/ECMAScript/es6/module.html#导出函数",a:"导出函数"},"15.9":{t:"导出类\r",p:`使用export关键字导出一个类。
// module1.js
export class Person {
  constructor(name) {
    this.name = name
  } ...`,l:"frontEnd/ECMAScript/es6/module.html#导出类",a:"导出类"},"15.10":{t:"导入模块\r",p:`通过使用import关键字，我们可以将其他模块中的变量、函数或类导入到当前模块中。
`,l:"frontEnd/ECMAScript/es6/module.html#导入模块",a:"导入模块"},"15.11":{t:"导入单个变量\r",p:`使用import关键字导入其他模块中的单个变量。
// main.js
import { name } from './module1.js'

console.log(name) // 输出：Joh ...`,l:"frontEnd/ECMAScript/es6/module.html#导入单个变量",a:"导入单个变量"},"15.12":{t:"导入函数\r",p:`使用import关键字导入其他模块中的函数。
// main.js
import { sayHello } from './module1.js'

sayHello() // 输出：Hello, J ...`,l:"frontEnd/ECMAScript/es6/module.html#导入函数",a:"导入函数"},"15.13":{t:"导入类\r",p:`使用import关键字导入其他模块中的类。
// main.js
import { Person } from './module1.js'

const person = new Person('A ...`,l:"frontEnd/ECMAScript/es6/module.html#导入类",a:"导入类"},"15.14":{t:"导入全部内容\r",p:`使用as来导入整个模块的内容，并将其绑定到一个变量上。
// main.js
import as module1 from './module1.js'

console.log(module1.na ...`,l:"frontEnd/ECMAScript/es6/module.html#导入全部内容",a:"导入全部内容"},"15.15":{t:"默认导出\r",p:`除了命名导出，一个模块还可以有一个默认导出，用于导出模块中的主要功能或对象。
`,l:"frontEnd/ECMAScript/es6/module.html#默认导出",a:"默认导出"},"15.16":{t:"默认导出变量\r",p:`// module2.js
const age = 30
export default age

// main.js
import myAge from './module2.js'
console ...`,l:"frontEnd/ECMAScript/es6/module.html#默认导出变量",a:"默认导出变量"},"15.17":{t:"默认导出函数\r",p:`// module2.js
export default function sayHello() {
  console.log('Hello, default export!')
}

// mai ...`,l:"frontEnd/ECMAScript/es6/module.html#默认导出函数",a:"默认导出函数"},"15.18":{t:"默认导出类\r",p:`// module2.js
export default class Person {
  constructor(name) {
    this.name = name
  }

  sayHel ...`,l:"frontEnd/ECMAScript/es6/module.html#默认导出类",a:"默认导出类"},"15.19":{t:"同时使用命名导出和默认导出\r",p:`一个模块可以同时有命名导出和默认导出。
// module3.js
export const name = 'Alice'

export default class {
  // ...
}

// ...`,l:"frontEnd/ECMAScript/es6/module.html#同时使用命名导出和默认导出",a:"同时使用命名导出和默认导出"},"15.20":{t:"重命名导入和导出\r",p:`使用as关键字可以在导入和导出时重命名变量名，避免命名冲突或提高代码可读性。
`,l:"frontEnd/ECMAScript/es6/module.html#重命名导入和导出",a:"重命名导入和导出"},"15.21":{t:"重命名导入\r",p:`// module4.js
export const myName = 'Tom'

// main.js
import { myName as name } from './module4.js'
 ...`,l:"frontEnd/ECMAScript/es6/module.html#重命名导入",a:"重命名导入"},"15.22":{t:"重命名导出\r",p:`// module4.js
const myAge = 25
export { myAge as age }

// main.js
import { age } from './module4.js ...`,l:"frontEnd/ECMAScript/es6/module.html#重命名导出",a:"重命名导出"},"15.23":{t:"动态导入\r",p:`除了静态导入外，ES6 还引入了动态导入，可以在代码运行时根据条件来导入模块。这样可以优化代码加载，提高页面的响应速度。
const condition = true

if (condition)  ...`,l:"frontEnd/ECMAScript/es6/module.html#动态导入",a:"动态导入"},"15.24":{t:"注意事项\r",p:`在使用 ES6 模块化时，需要注意以下几点：
`,l:"frontEnd/ECMAScript/es6/module.html#注意事项",a:"注意事项"},"15.25":{t:"文件扩展名\r",p:`模块文件必须以.js为后缀。
`,l:"frontEnd/ECMAScript/es6/module.html#文件扩展名",a:"文件扩展名"},"15.26":{t:"模块的类型\r",p:`在浏览器环境中，需要在\`


`,l:"frontEnd/ECMAScript/es6/module.html#模块的类型",a:"模块的类型"},"15.27":{t:"严格模式\r",p:`模块中的代码在严格模式下运行，无需显式指定&quot;use strict&quot;。
`,l:"frontEnd/ECMAScript/es6/module.html#严格模式",a:"严格模式"},"15.28":{t:"导入和导出位置\r",p:`导入和导出语句只能位于模块的顶层，不能嵌套在其他块中。
::: tip 总结
ES6 模块化是一种优雅、灵活的 JavaScript 代码组织与交互方式，它允许开发者将代码分割成多个模块，每个模块都有 ...`,l:"frontEnd/ECMAScript/es6/module.html#导入和导出位置",a:"导入和导出位置"},"16.0":{t:"# Set 数据结构\r",p:"\r",l:"frontEnd/ECMAScript/es6/Set数据结构.html",a:"set-数据结构"},"16.1":{t:"简述\r",p:`Set对象是值的集合，你可以按照插入的顺序迭代它的元素。Set 中的元素只会出现一次，即 Set 中的元素是唯一的。
`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#简述",a:"简述"},"16.2":{t:"实例的方法与属性\r",p:"\r",l:"frontEnd/ECMAScript/es6/Set数据结构.html#实例的方法与属性",a:"实例的方法与属性"},"16.3":{t:"add(value) 方法\r",p:`在 Set 对象尾部添加一个元素。返回该 Set 对象。
const s = new Set()
s.add(0)
// 可以连写
s.add(1).add(2).add(2).add(3)
cons ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#add-value-方法",a:"add-value-方法"},"16.4":{t:"clear() 方法\r",p:`移除 Set 对象内的所有元素。
const s = new Set()
s.add(0)
s.add(1).add(2).add(2).add(3)
s.clear()
console.log(s) ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#clear-方法",a:"clear-方法"},"16.5":{t:"delete(value) 方法\r",p:`移除值为 value 的元素，并返回一个布尔值来表示是否移除成功。Set.prototype.has(value) 会在此之后返回 false。
const s = new Set()
s.add(0 ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#delete-value-方法",a:"delete-value-方法"},"16.6":{t:"entries() 方法\r",p:`返回一个新的迭代器对象，该对象包含 Set 对象中的按插入顺序排列的所有元素的值的 [value, value] 数组。为了使这个方法和 Map 对象保持相似，每个值的键和值相等。
const set ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#entries-方法",a:"entries-方法"},"16.7":{t:"has(value) 方法\r",p:`返回一个布尔值，表示该值在 Set 中存在与否。
const s = new Set()
s.add(0)
s.add(1).add(2).add(2).add(3)
console.log(s.ha ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#has-value-方法",a:"has-value-方法"},"16.8":{t:"values() 方法\r",p:`返回一个新的迭代器对象，该对象包含 Set 对象中的按插入顺序排列的所有元素的值。
const set1 = new Set()
set1.add(42)
set1.add('forty two')
 ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#values-方法",a:"values-方法"},"16.9":{t:"keys() 方法\r",p:`与 values() 方法相同，返回一个新的迭代器对象，该对象包含 Set 对象中的按插入顺序排列的所有元素的值。
`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#keys-方法",a:"keys-方法"},"16.10":{t:"size 属性\r",p:`返回 Set 对象中的值的个数
const s = new Set()
s.add(0)
s.add(1).add(2).add(2).add(3)

console.log(s.size) // 4 ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#size-属性",a:"size-属性"},"16.11":{t:"使用 Set 实现的一些方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/Set数据结构.html#使用-set-实现的一些方法",a:"使用-set-实现的一些方法"},"16.12":{t:"转换\r",p:`// Array 转 Set
var mySet = new Set(['value1', 'value2', 'value3']) // {&quot;value1&quot;, &quot;val ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#转换",a:"转换"},"16.13":{t:"去重\r",p:`var mySet = new Set([1, 2, 2, 1, 3, 4, 4])
;[...mySet] // [1, 2, 3, 4]

`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#去重",a:"去重"},"16.14":{t:"并集\r",p:`var a = new Set([1, 2, 3])
var b = new Set([4, 3, 2])
var union = new Set([...a, ...b]) // {1, 2, 3, ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#并集",a:"并集"},"16.15":{t:"交集\r",p:`var a = new Set([1, 2, 3])
var b = new Set([4, 3, 2])

var intersect = new Set([...a].filter((x) =&g ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#交集",a:"交集"},"16.16":{t:"差集\r",p:`var a = new Set([1, 2, 3])
var b = new Set([4, 3, 2])
var difference = new Set([...a].filter((x) =&g ...`,l:"frontEnd/ECMAScript/es6/Set数据结构.html#差集",a:"差集"},"17.0":{t:"# ES6 函数的扩展\r",p:"\r",l:"frontEnd/ECMAScript/es6/函数的扩展.html",a:"es6-函数的扩展"},"17.1":{t:"函数参数的默认值\r",p:"\r",l:"frontEnd/ECMAScript/es6/函数的扩展.html#函数参数的默认值",a:"函数参数的默认值"},"17.2":{t:"认识函数参数的默认值\r",p:`调用函数的时候传参了，就用传递的参数；如果没传参，就用默认值
`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#认识函数参数的默认值",a:"认识函数参数的默认值"},"17.3":{t:"函数参数默认值的基本用法\r",p:`// 之前的默认值实现方式
const multiply = (x, y) =&gt; {
  if (typeof y === 'undefined') {
    y = 3
  }
  retu ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#函数参数默认值的基本用法",a:"函数参数默认值的基本用法"},"17.4":{t:"默认值的生效条件\r",p:`不传参数，或者明确的传递 undefined 作为参数，只有这两种情况下，默认值才会生效。
注意：null 就是 null，不会使用默认值。
`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#默认值的生效条件",a:"默认值的生效条件"},"17.5":{t:"与解构赋值默认值结合使用\r",p:`参数默认值可以与解构赋值的默认值，结合起来使用。
function foo({ x, y = 5 }) {
  console.log(x, y)
}

foo({}) // undefined 5
 ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#与解构赋值默认值结合使用",a:"与解构赋值默认值结合使用"},"17.6":{t:"参数默认值的位置\r",p:`通常情况下，定义了默认值的参数，应该是函数的尾参数。因为这样比较容易看出来，到底省略了哪些参数。如果非尾部的参数设置默认值，实际上这个参数是没法省略的。
// 例一
function f(x = 1, ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#参数默认值的位置",a:"参数默认值的位置"},"17.7":{t:"函数参数默认值的应用\r",p:`接收很多参数的时候
// 普通时候
const logUser = (username = 'zjr', age = 18, sex = 'male') =&gt; {
  console.log(u ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#函数参数默认值的应用",a:"函数参数默认值的应用"},"17.8":{t:"rest 参数\r",p:"\r",l:"frontEnd/ECMAScript/es6/函数的扩展.html#rest-参数",a:"rest-参数"},"17.9":{t:"前言\r",p:"剩余语法（Rest syntax 也可以叫剩余参数）看起来和展开语法完全相同都是使用 ... 的语法糖，不同之处在于剩余参数用于解构数组和对象。从某种意义上说，剩余语法与展开语法是相反的：展开语法将数 ...",l:"frontEnd/ECMAScript/es6/函数的扩展.html#前言",a:"前言"},"17.10":{t:"函数参数\r",p:`在讲解剩余参数前，我们先来看看，剩余参数在函数参数中都解决了哪些问题？为什么会引入剩余参数的概念？
在 ES5 中，函数经常会传入不定参数，在传入不定参数时，ES5 的给出的解决方案是通过 argum ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#函数参数",a:"函数参数"},"17.11":{t:"注意事项\r",p:`箭头函数的剩余参数
箭头函数的参数部分即使只有一个剩余参数，也不能省略圆括号。
const add = (...args) =&gt; {};
使用剩余参数替代 arguments 获取实际参数

剩 ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#注意事项",a:"注意事项"},"17.12":{t:"剩余参数的应用\r",p:`作为数组的应用：
const add = (...args) =&gt; {
  let sum = 0

  for (let i = 0; i &lt; args.length; i++) {
  ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#剩余参数的应用",a:"剩余参数的应用"},"17.13":{t:"小结\r",p:`本节结合了 ES5 函数中的 arguments 对象引入了为什么 ES6 会引入剩余参数的概念，可以看到剩余参数所带来的好处。本节内容可以总结以下几点：

剩余参数是为了能替代函数内部的 argum ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#小结",a:"小结"},"17.14":{t:"箭头函数\r",p:`ES6 引入了箭头函数（Arrow Functions），是一种更简洁和灵活的函数定义方式。箭头函数通常与其他 ES6 特性（如解构赋值、模板字符串等）结合使用，使得代码更加现代化和易读。
`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#箭头函数",a:"箭头函数"},"17.15":{t:"基本语法\r",p:`箭头函数的基本语法如下：
const functionName = (parameter1, parameter2, ...) =&gt; {
  // 函数体
  return result;
}; ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#基本语法",a:"基本语法"},"17.16":{t:"没有参数或多个参数\r",p:`当箭头函数没有参数或有多个参数时，需要使用括号来表示参数列表。
// 没有参数
const greet = () =&gt; console.log('Hello!')
greet() // 输出：H ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#没有参数或多个参数",a:"没有参数或多个参数"},"17.17":{t:"箭头函数与 this\r",p:`箭头函数与传统函数有一个重要的区别：箭头函数没有自己的this，它继承自外层作用域的this。
在传统函数中，this的值是在函数调用时动态确定的，取决于调用方式（比如函数是否作为对象的方法调用、是否 ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#箭头函数与-this",a:"箭头函数与-this"},"17.18":{t:"使用注意事项\r",p:`
如果箭头函数只有一个参数，可以省略参数列表的括号。
如果箭头函数的函数体为空或只有一个表达式，可以省略花括号和return关键字。
避免在对象方法中使用箭头函数，因为箭头函数会继承外层作用域的thi ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#使用注意事项",a:"使用注意事项"},"17.19":{t:"函数参数的尾逗号\r",p:`ES2017 允许函数的最后一个参数有尾逗号（trailing comma）。
此前，函数定义和调用时，都不允许最后一个参数后面出现逗号。
function clownsEverywhere(para ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#函数参数的尾逗号",a:"函数参数的尾逗号"},"17.20":{t:"catch 命令的参数省略\r",p:`JavaScript 语言的try...catch结构，以前明确要求catch命令后面必须跟参数，接受try代码块抛出的错误对象。
try {
  // ...
} catch (err) {
  / ...`,l:"frontEnd/ECMAScript/es6/函数的扩展.html#catch-命令的参数省略",a:"catch-命令的参数省略"},"18.0":{t:"# Js 字符串的常用方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/字符串的常用方法.html",a:"js-字符串的常用方法"},"18.1":{t:"一、操作方法\r",p:`我们也可将字符串常用的操作方法归纳为增、删、改、查，需要知道字符串的特点是一旦创建了，就不可变
`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#一、操作方法",a:"一、操作方法"},"18.2":{t:"增\r",p:`这里增的意思并不是说直接增添内容，而是创建字符串的一个副本，再进行操作
除了常用+以及\${}进行字符串拼接之外，还可通过concat
`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#增",a:"增"},"18.3":{t:"concat()\r",p:`用于将一个或多个字符串拼接成一个新字符串
let stringValue = 'hello '
let result = stringValue.concat('world')
console.log ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#concat",a:"concat"},"18.4":{t:"删\r",p:`这里的删的意思并不是说删除原字符串的内容，而是创建字符串的一个副本，再进行操作
常见的有：

slice()
substr()
substring()

这三个方法都返回调用它们的字符串的一个子字符串 ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#删",a:"删"},"18.5":{t:"改\r",p:`这里改的意思也不是改变原字符串，而是创建字符串的一个副本，再进行操作
常见的有：


trim()、trimLeft()、trimRight()


repeat()


padStart()、pad ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#改",a:"改"},"18.6":{t:"trim()、trimLeft()、trimRight()\r",p:`删除前、后或前后所有空格符，再返回新的字符串
let stringValue = ' hello world '
let trimmedStringValue = stringValue.trim() ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#trim-、trimleft-、trimright",a:"trim-、trimleft-、trimright"},"18.7":{t:"repeat()\r",p:`接收一个整数参数，表示要将字符串复制多少次，然后返回拼接所有副本后的结果
let stringValue = 'na '
let copyResult = stringValue.repeat(2)  ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#repeat",a:"repeat"},"18.8":{t:"padStart() padEnd()\r",p:`复制字符串，如果小于指定长度，则在相应一边填充字符，直至满足长度条件
没有第二个参数默认空格
let stringValue = 'foo'
console.log(stringValue.padSt ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#padstart-padend",a:"padstart-padend"},"18.9":{t:"toLowerCase()、 toUpperCase()\r",p:`大小写转化
let stringValue = 'hello world'
console.log(stringValue.toUpperCase()) // &quot;HELLO WORLD&qu ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#tolowercase-、-touppercase",a:"tolowercase-、-touppercase"},"18.10":{t:"查\r",p:"\r",l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#查",a:"查"},"18.11":{t:"charAt()\r",p:`返回给定索引位置的字符，由传给方法的整数参数指定
let message = 'abcde'
console.log(message.charAt(2)) // &quot;c&quot;

`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#charat",a:"charat"},"18.12":{t:"indexOf()\r",p:`从字符串开头去搜索传入的字符串，并返回位置（如果没找到，则返回 -1 ）
let stringValue = 'hello world'
console.log(stringValue.indexOf ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#indexof",a:"indexof"},"18.13":{t:"startWith()、includes()\r",p:`从字符串中搜索传入的字符串，并返回一个表示是否包含的布尔值
let message = 'foobarbaz'
console.log(message.startsWith('foo')) // tr ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#startwith-、includes",a:"startwith-、includes"},"18.14":{t:"at()\r",p:`at()方法接受一个整数作为参数，返回参数指定位置的字符，支持负索引（即倒数的位置）。
const str = 'hello'
str.at(1) // &quot;e&quot;
str.at(-1 ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#at",a:"at"},"18.15":{t:"二、转换方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#二、转换方法",a:"二、转换方法"},"18.16":{t:"split()\r",p:`把字符串按照指定的分割符，拆分成数组中的每一项
let str = '12+23+34'
let arr = str.split('+') // [12,23,34]

`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#split",a:"split"},"18.17":{t:"三、模板匹配方法\r",p:`针对正则表达式，字符串设计了几个方法：

match()
search()
replace()

`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#三、模板匹配方法",a:"三、模板匹配方法"},"18.18":{t:"match()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，返回数组
let text = 'cat, bat, sat, fat'
let pattern = /.at/
let mat ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#match",a:"match"},"18.19":{t:"search()\r",p:`接收一个参数，可以是一个正则表达式字符串，也可以是一个RegExp对象，找到则返回匹配索引，否则返回 -1
let text = 'cat, bat, sat, fat'
let pos = text ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#search",a:"search"},"18.20":{t:"replace()\r",p:`接收两个参数，第一个参数为匹配的内容，第二个参数为替换的元素（可用函数）
let text = 'cat, bat, sat, fat'
let result = text.replace('at', ...`,l:"frontEnd/ECMAScript/es6/字符串的常用方法.html#replace",a:"replace"},"19.0":{t:"# ES6 字符串的扩展\r",p:"\r",l:"frontEnd/ECMAScript/es6/字符串的扩展.html",a:"es6-字符串的扩展"},"19.1":{t:"模板字符串\r",p:"ES6 引入了模板字符串（Template Strings），也被称为模板字面量，是一种方便拼接字符串的新语法。模板字符串使用反引号（`）来包裹字符串，并允许在字符串中插入变量、表达式和多行文本。\n",l:"frontEnd/ECMAScript/es6/字符串的扩展.html#模板字符串",a:"模板字符串"},"19.2":{t:"字符串插值\r",p:"使用${}来在模板字符串中插入变量或表达式，其中${}中的内容会被解析并替换为实际的值。\nconst name = 'John'\nconst age = 30\nconst message = `Hel ...",l:"frontEnd/ECMAScript/es6/字符串的扩展.html#字符串插值",a:"字符串插值"},"19.3":{t:"多行字符串\r",p:`使用模板字符串可以很方便地创建多行文本，不需要使用\\n来手动添加换行符。
const multiLineText = \`
  This is a multi-line text.
  It spans ...`,l:"frontEnd/ECMAScript/es6/字符串的扩展.html#多行字符串",a:"多行字符串"},"19.4":{t:"嵌套模板字符串\r",p:"模板字符串可以嵌套在其他模板字符串中，使得字符串拼接更加灵活。\nconst name = 'Alice'\nconst greeting = `Hello, ${`my name is ${name}` ...",l:"frontEnd/ECMAScript/es6/字符串的扩展.html#嵌套模板字符串",a:"嵌套模板字符串"},"19.5":{t:"带标签的模板字符串\r",p:`可以在模板字符串前添加一个标签函数，这个标签函数将模板字符串的各个部分解析成多个参数，使得我们可以对字符串进行自定义处理。
function tagFunc(strings, ...values) { ...`,l:"frontEnd/ECMAScript/es6/字符串的扩展.html#带标签的模板字符串",a:"带标签的模板字符串"},"20.0":{t:"# ES6 对象的扩展\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html",a:"es6-对象的扩展"},"20.1":{t:"属性的简洁表示法\r",p:`ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。
const foo = 'bar'
const baz = { foo }
baz // {foo: &quo ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#属性的简洁表示法",a:"属性的简洁表示法"},"20.2":{t:"方括号语法\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html#方括号语法",a:"方括号语法"},"20.3":{t:"方括号语法的用法\r",p:`const prop = 'age'
const person = {}
person.prop = 18
console.log(person) // { prop: 18 }

// ------ ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#方括号语法的用法",a:"方括号语法的用法"},"20.4":{t:"方括号中可以放什么\r",p:`// [值、可以得到值的表达式]
const prop = 'age'
const func = () =&gt; 'age2'
const person = {
  [prop]: 18,
  [f ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#方括号中可以放什么",a:"方括号中可以放什么"},"20.5":{t:"方括号语法和点语法的区别\r",p:`
点语法是方括号语法的特殊形式
属性名由数字、字母、下划线以及 $ 构成，并且数字还不能打头的时候可以使用点语法（合法标识符）
能用点语法优先使用点语法

const person = {
    a ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#方括号语法和点语法的区别",a:"方括号语法和点语法的区别"},"20.6":{t:"super 关键字\r",p:`我们知道，this关键字总是指向函数所在的当前对象，ES6 又新增了另一个类似的关键字super，指向当前对象的原型对象。
const proto = {
  foo: 'hello'
}

cons ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#super-关键字",a:"super-关键字"},"20.7":{t:"对象的展开运算符\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html#对象的展开运算符",a:"对象的展开运算符"},"20.8":{t:"展开对象\r",p:`对象不能直接展开，必须在 {} 中展开。
const apple = {
  color: '红色',
  shape: '球形',
  taste: '甜'
}
console.log({ ...a ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#展开对象",a:"展开对象"},"20.9":{t:"合并对象\r",p:`const apple = {
  color: '红色',
  shape: '球形',
  taste: '甜'
}

const pen = {
  color: '黑色',
  shape:  ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#合并对象",a:"合并对象"},"20.10":{t:"注意事项\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html#注意事项",a:"注意事项"},"20.11":{t:"空对象的展开\r",p:`如果展开一个空对象，则没有任何效果。
console.log({ ...{} }) // {}
console.log({ ...{}, a: 1 }) // { a: 1 }

`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#空对象的展开",a:"空对象的展开"},"20.12":{t:"非对象的展开\r",p:`如果展开的不是对象，则会自动将其转为对象，再将其属性罗列出来（没有属性便为空）。
console.log({ ...1 }) // {}
console.log(new Object(1)) // [ ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#非对象的展开",a:"非对象的展开"},"20.13":{t:"字符串的展开\r",p:`如果展开运算符后面是字符串，它会自动转成一个类似数组的对象，因此返回的不是空对象。
// 字符串在对象中展开
console.log({ ...'alex' }) // { '0': 'a', '1' ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#字符串的展开",a:"字符串的展开"},"20.14":{t:"数组的展开\r",p:`console.log({ ...[1, 2, 3] }) // { '0': 1, '1': 2, '2': 3 }

`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#数组的展开",a:"数组的展开"},"20.15":{t:"对象中对象属性的展开\r",p:`不会展开对象中的对象属性。
const apple = {
  feature: {
    taste: '甜'
  }
}

const pen = {
  feature: {
    colo ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#对象中对象属性的展开",a:"对象中对象属性的展开"},"20.16":{t:"对象展开运算符的应用\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html#对象展开运算符的应用",a:"对象展开运算符的应用"},"20.17":{t:"复制对象\r",p:`const a = { x: 1, y: 2 }
const c = { ...a }
console.log(c, c === a)
// { x: 1, y: 2 } false

`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#复制对象",a:"复制对象"},"20.18":{t:"用户参数和默认参数\r",p:`const logUser = (userParam) =&gt; {
  const defaultPeram = {
    username: 'ZhangSan',
    age: 0,
  ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#用户参数和默认参数",a:"用户参数和默认参数"},"20.19":{t:"对象的新增方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/对象的扩展.html#对象的新增方法",a:"对象的新增方法"},"20.20":{t:"Object.is()\r",p:"ES5 比较两个值是否相等，只有两个运算符：相等运算符（==）和严格相等运算符（===）。它们都有缺点，前者会自动转换数据类型，后者的NaN不等于自身，以及+0等于-0。JavaScript 缺乏一种 ...",l:"frontEnd/ECMAScript/es6/对象的扩展.html#object-is",a:"object-is"},"20.21":{t:"Object.assign()\r",p:`Object.assign()方法用于对象的合并，将源对象（source）的所有可枚举属性，复制到目标对象（target）。
const target = { a: 1 }

const source ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#object-assign",a:"object-assign"},"20.22":{t:"Object.keys()、Object.values() 和 Object.entries()\r",p:`Object.keys方法，返回一个数组，成员是参数对象自身的（不含继承的）所有可遍历（enumerable）属性的键名。
Object.values方法返回一个数组，成员是参数对象自身的（不含继承的 ...`,l:"frontEnd/ECMAScript/es6/对象的扩展.html#object-keys-、object-values-和-object-entries",a:"object-keys-、object-values-和-object-entries"},"21.0":{t:"# ES6 Array 数组新增方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/数组的扩展.html",a:"es6-array-数组新增方法"},"21.1":{t:"Array.of()\r",p:`将参数中所有值作为元素形成数组。
没有参数则返回空数组
Array.of(1, '2', true) // [1, '2', true]

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#array-of",a:"array-of"},"21.2":{t:"Array.from()\r",p:`将类数组对象或可迭代对象转化为数组。
Array.from([1, 2]) // [1, 2]
Array.from([1, , 3]) // [1, undefined, 3]

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#array-from",a:"array-from"},"21.3":{t:"转换类数组\r",p:`let arr = Array.from({
  0: '1',
  1: '2',
  2: 3,
  length: 3 // 必须有length属性，没有则返回空数组
})
// ['1', ' ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#转换类数组",a:"转换类数组"},"21.4":{t:"转换 map\r",p:`let map = new Map()
map.set('key0', 'value0')
map.set('key1', 'value1')
Array.from(map) // [['key0', ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#转换-map",a:"转换-map"},"21.5":{t:"转换 set\r",p:`let set = new Set([1, 2, 3])
Array.from(set) // [1, 2, 3]

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#转换-set",a:"转换-set"},"21.6":{t:"转换字符串\r",p:`Array.from('abc') // [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#转换字符串",a:"转换字符串"},"21.7":{t:"方法\r",p:"\r",l:"frontEnd/ECMAScript/es6/数组的扩展.html#方法",a:"方法"},"21.8":{t:"find()查找\r",p:`则返回符合条件的第一个元素。
let arr = Array.of(1, 2, 3, 4)
arr.find((item) =&gt; item &gt; 2) // 3

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#find-查找",a:"find-查找"},"21.9":{t:"findIndex() 查找索引\r",p:`则返回符合条件的第一个元素的索引。
let arr = Array.of(1, 2, 1, 3)
// 参数1：回调函数
// 参数2(可选)：指定回调函数中的 this 值
arr.findInde ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#findindex-查找索引",a:"findindex-查找索引"},"21.10":{t:"fill()填充\r",p:`let arr = Array.of(1, 2, 3, 4)
// 参数1：用来填充的值
// 参数2：被填充的起始索引
// 参数3(可选)：被填充的结束索引，默认为数组末尾
console.log ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#fill-填充",a:"fill-填充"},"21.11":{t:"copyWithin() 覆盖\r",p:`
开始覆盖的位置索引
复制起始位置
（可选）复制结束位置，默认为结尾

var arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g']
arr.copyWithin(2,  ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#copywithin-覆盖",a:"copywithin-覆盖"},"21.12":{t:"entries() 遍历\r",p:`// 遍历键值对。
for (let [key, value] of ['a', 'b'].entries()) {
  console.log(key, value)
}
// 0 &quot;a& ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#entries-遍历",a:"entries-遍历"},"21.13":{t:"keys()遍历键名\r",p:`for (let key of ['a', 'b'].keys()) {
  console.log(key)
}
// 0
// 1

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#keys-遍历键名",a:"keys-遍历键名"},"21.14":{t:"values()遍历键值\r",p:`for (let value of ['a', 'b'].values()) {
  console.log(value)
}
// &quot;a&quot;
// &quot;b&quot;

`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#values-遍历键值",a:"values-遍历键值"},"21.15":{t:"includes()查找\r",p:`数组是否包含指定值
Set 的 has 方法用于查找值，Map 的 has 方法用于查找键名。
// 参数1：包含的指定值
;[1, 2, 3].includes(1) // true
// 参数2： ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#includes-查找",a:"includes-查找"},"21.16":{t:"flat()嵌套数组转一维数\r",p:`console.log([1, [2, 3]].flat()) // [1, 2, 3]

// 指定转换的嵌套层数
console.log([1, [2, [3, [4, 5]]]].flat(2) ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#flat-嵌套数组转一维数",a:"flat-嵌套数组转一维数"},"21.17":{t:"flatMap()\r",p:`先遍历元素，再对数组执行 flat() 方法。
// 参数1：遍历函数，遍历函数可接受3个参数：当前元素、当前元素索引、原数组
// 参数2：指定遍历函数中 this 的指向
console.log( ...`,l:"frontEnd/ECMAScript/es6/数组的扩展.html#flatmap",a:"flatmap"},"22.0":{t:"# 解构赋值\r",p:`ES6 引入了解构赋值（Destructuring Assignment），是一种从数组或对象中提取值并赋给变量的语法，使得在处理数据时更加方便和简洁。
当使用解构赋值时，我们可以从数组或对象中提取数 ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html",a:"解构赋值"},"22.1":{t:"数组解构赋值\r",p:`数组解构赋值允许我们根据数组的顺序，将数组的元素提取出来并赋值给变量。
`,l:"frontEnd/ECMAScript/es6/解构赋值.html#数组解构赋值",a:"数组解构赋值"},"22.2":{t:"基本用法\r",p:`const numbers = [1, 2, 3, 4, 5]

const [a, b, c, d, e] = numbers

console.log(a) // 1
console.log(b) ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#基本用法",a:"基本用法"},"22.3":{t:"忽略不需要的元素\r",p:`我们可以使用逗号将不需要的元素跳过。
const numbers = [1, 2, 3, 4, 5]

const [a, , c, , e] = numbers

console.log(a) // ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#忽略不需要的元素",a:"忽略不需要的元素"},"22.4":{t:"给变量指定默认值\r",p:`如果数组元素不足以匹配变量的个数，可以为变量指定默认值，避免出现undefined。
const numbers = [1, 2]

const [a, b, c = 3] = numbers

co ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#给变量指定默认值",a:"给变量指定默认值"},"22.5":{t:"剩余元素\r",p:`使用...语法可以将剩余的数组元素赋值给一个新数组。
const numbers = [1, 2, 3, 4, 5]

const [a, b, ...rest] = numbers

console ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#剩余元素",a:"剩余元素"},"22.6":{t:"交换变量的值\r",p:`使用解构赋值，可以非常简洁地交换两个变量的值，无需使用第三个变量。
let x = 10
let y = 20

;[x, y] = [y, x]  // 前面必须要加分号

console.log( ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#交换变量的值",a:"交换变量的值"},"22.7":{t:"对象解构赋值\r",p:`对象解构赋值允许我们根据对象的属性名，将对象的属性值提取出来并赋值给变量。
`,l:"frontEnd/ECMAScript/es6/解构赋值.html#对象解构赋值",a:"对象解构赋值"},"22.8":{t:"基本用法\r",p:`const person = {
  name: 'John',
  age: 30,
  country: 'USA'
}

const { name, age, country } = perso ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#基本用法",a:"基本用法"},"22.9":{t:"重命名变量\r",p:`我们可以通过在解构时为变量指定新的名称，来实现重命名。
const person = {
  fullName: 'John Doe',
  yearsOld: 30
}

const { fullN ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#重命名变量",a:"重命名变量"},"22.10":{t:"给变量指定默认值\r",p:`和数组解构一样，可以为对象解构赋值时，为变量指定默认值。
const person = {
  name: 'Alice',
  age: 25
}

const { name, age, count ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#给变量指定默认值",a:"给变量指定默认值"},"22.11":{t:"嵌套解构\r",p:`对象解构也支持嵌套解构，从嵌套对象中提取值。
const person = {
  name: 'Bob',
  age: 28,
  address: {
    city: 'New York', ...`,l:"frontEnd/ECMAScript/es6/解构赋值.html#嵌套解构",a:"嵌套解构"},"23.0":{t:"# html5 音视频标签\r",p:`音视频标签中的资源除了可以用 src 属性来指定外，还可以用 source 标签，而且可以指定多个，可以用来解决某些兼容问题。
\`\`\`html

&lt;h2&gt;音频示例&lt;/h2&gt;
& ...`,l:"frontEnd/html5/base/audio_video.html",a:"html5-音视频标签"},"23.1":{t:"音视频频格式的 MIME 类型\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#音视频频格式的-mime-类型",a:"音视频频格式的-mime-类型"},"23.2":{t:"音频格式\r",p:`


Format
MIME-type




MP3
audio/mpeg


Ogg
audio/ogg


Wav
audio/wav



`,l:"frontEnd/html5/base/audio_video.html#音频格式",a:"音频格式"},"23.3":{t:"视频格式\r",p:`


格式
MIME-type




MP4
video/mp4


WebM
video/webm


Ogg
video/ogg



`,l:"frontEnd/html5/base/audio_video.html#视频格式",a:"视频格式"},"23.4":{t:"音视频标签描述\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#音视频标签描述",a:"音视频标签描述"},"23.5":{t:"HTML5 Audio 标签\r",p:`


标签
描述




&lt;audio&gt;
定义了声音内容


&lt;source&gt;
规定了多媒体资源, 可以是多个，在 &lt;video&gt; 与 &lt;audio&gt;标 ...`,l:"frontEnd/html5/base/audio_video.html#html5-audio-标签",a:"html5-audio-标签"},"23.6":{t:"HTML5 Video 标签\r",p:`| 标签 | 描述 |
|&lt;video&gt; |定义一个视频|
|&lt;source&gt;| 定义多种媒体资源,比如 &lt;video&gt; 和&lt;audio&gt;|
|&lt; ...`,l:"frontEnd/html5/base/audio_video.html#html5-video-标签",a:"html5-video-标签"},"23.7":{t:"`<video>`标签的属性\r",p:`


属性
描述




src
要播放的视频的 URL


width/height
视频显示区域的宽高


controls
用户控制界面


poster
视频封面


autoplay
自动播 ...`,l:"frontEnd/html5/base/audio_video.html#video-标签的属性",a:"video-标签的属性"},"23.8":{t:"音视频对象的方法\r",p:`


方法名
作用




play()
播放


psuse()
暂停


load()
重新加载



`,l:"frontEnd/html5/base/audio_video.html#音视频对象的方法",a:"音视频对象的方法"},"23.9":{t:"代码实例\r",p:"\r",l:"frontEnd/html5/base/audio_video.html#代码实例",a:"代码实例"},"23.10":{t:"audio 音频\r",p:`&lt;audio controls&gt;
  &lt;source src=&quot;https://www.runoob.com/try/demo_source/horse.ogg&quot; ...`,l:"frontEnd/html5/base/audio_video.html#audio-音频",a:"audio-音频"},"23.11":{t:"video 视频\r",p:`&lt;div style=&quot;text-align:center&quot;&gt;
  &lt;button onclick=&quot;playPause()&quot;&gt;播放/暂 ...`,l:"frontEnd/html5/base/audio_video.html#video-视频",a:"video-视频"},"24.0":{t:"# HTML - 超文本标记语言\r",p:`HTML（HyperText Markup Language）是一种用于创建网页和网页应用程序的标记语言。它通过使用一系列标签和属性来描述网页的结构和内容，使得网页可以在浏览器中正确显示和呈现。
`,l:"frontEnd/html5/base/index.html",a:"html-超文本标记语言"},"24.1":{t:"HTML 的基本结构\r",p:`HTML 文档由一系列嵌套的 HTML 标签组成。一个基本的 HTML 文档通常包含以下结构：
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
   ...`,l:"frontEnd/html5/base/index.html#html-的基本结构",a:"html-的基本结构"},"24.2":{t:"HTML 标签和元素\r",p:"HTML 标签用于定义网页的结构和内容，它们由尖括号包围。标签通常成对出现，包含开始标签和结束标签，例如&lt;tagname&gt;内容&lt;/tagname&gt;。有些标签是空标签，没有结束标 ...",l:"frontEnd/html5/base/index.html#html-标签和元素",a:"html-标签和元素"},"24.3":{t:"HTML5 的新特性\r",p:"HTML5 引入了许多新特性，如语义化标签（&lt;header&gt;、&lt;footer&gt;、&lt;nav&gt;、&lt;article&gt;等）、多媒体支持（&lt;video&gt ...",l:"frontEnd/html5/base/index.html#html5-的新特性",a:"html5-的新特性"},"24.4":{t:"实践和进阶\r",p:`学习 HTML 最重要的是通过实践来加深理解。创建简单的网页、布局、添加样式和图像，然后逐渐增加复杂性，学习如何使用 CSS 和 JavaScript 与 HTML 结合，从而实现更丰富的用户体验。
 ...`,l:"frontEnd/html5/base/index.html#实践和进阶",a:"实践和进阶"},"25.0":{t:"# 常用标签及用法\r",p:`当描述 HTML 标签时，代码块会被渲染成 HTML 标记，为了避免这种情况，我将在每个代码示例中添加特殊字符，以确保它们不会被渲染。请在复制代码时将特殊字符删除。
`,l:"frontEnd/html5/base/label.html",a:"常用标签及用法"},"25.1":{t:"标题标签 `<h1>` 到 `<h6>`\r",p:`&lt;h1&gt;这是h1级别的标题&lt;/h1&gt;
&lt;h2&gt;这是h2级别的标题&lt;/h2&gt;
&lt;h3&gt;这是h3级别的标题&lt;/h3&gt;
&lt;h4& ...`,l:"frontEnd/html5/base/label.html#标题标签-h1-到-h6",a:"标题标签-h1-到-h6"},"25.2":{t:"段落标签 `<p>`\r",p:`&lt;p&gt;这是一个段落文本。&lt;/p&gt;

`,l:"frontEnd/html5/base/label.html#段落标签-p",a:"段落标签-p"},"25.3":{t:"超链接标签 `<a>`\r",p:`&lt;a href=&quot;https://www.example.com&quot;&gt;点击这里跳转到示例网站&lt;/a&gt;

`,l:"frontEnd/html5/base/label.html#超链接标签-a",a:"超链接标签-a"},"25.4":{t:"图像标签 `<img>`\r",p:`&lt;img src=&quot;example.jpg&quot; alt=&quot;示例图片&quot; /&gt;

`,l:"frontEnd/html5/base/label.html#图像标签-img",a:"图像标签-img"},"25.5":{t:"无序列表和列表项标签 `<ul>` 和 `<li>`\r",p:`&lt;ul&gt;
  &lt;li&gt;列表项1&lt;/li&gt;
  &lt;li&gt;列表项2&lt;/li&gt;
  &lt;li&gt;列表项3&lt;/li&gt;
&lt;/ ...`,l:"frontEnd/html5/base/label.html#无序列表和列表项标签-ul-和-li",a:"无序列表和列表项标签-ul-和-li"},"25.6":{t:"有序列表和列表项标签 `<ol>` 和 `<li>`\r",p:`&lt;ol&gt;
  &lt;li&gt;列表项1&lt;/li&gt;
  &lt;li&gt;列表项2&lt;/li&gt;
  &lt;li&gt;列表项3&lt;/li&gt;
&lt;/ ...`,l:"frontEnd/html5/base/label.html#有序列表和列表项标签-ol-和-li",a:"有序列表和列表项标签-ol-和-li"},"25.7":{t:"容器标签 `<div>`\r",p:`&lt;div&gt;
  这是一个div容器。
  &lt;p&gt;包含一段文本。&lt;/p&gt;
&lt;/div&gt;

`,l:"frontEnd/html5/base/label.html#容器标签-div",a:"容器标签-div"},"25.8":{t:"内联容器标签 `<span>`\r",p:`这是一个
&lt;span style=&quot;color: blue;&quot;&gt;内联容器&lt;/span&gt;
标签。

`,l:"frontEnd/html5/base/label.html#内联容器标签-span",a:"内联容器标签-span"},"25.9":{t:"表格标签 `<table>`、`<tr>`、`<th>` 和 `<td>`\r",p:`&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;表头1&lt;/th&gt;
    &lt;th&gt;表头2&lt;/th&gt;
  &lt;/tr&gt;
  ...`,l:"frontEnd/html5/base/label.html#表格标签-table-、-tr-、-th-和-td",a:"表格标签-table-、-tr-、-th-和-td"},"25.10":{t:"换行标签 `<br>`\r",p:`这是一行文本。
&lt;br /&gt;
这是另一行文本。

`,l:"frontEnd/html5/base/label.html#换行标签-br",a:"换行标签-br"},"25.11":{t:"输入标签 `<input>`\r",p:`&lt;input type=&quot;text&quot; placeholder=&quot;输入文本&quot; /&gt;
&lt;input type=&quot;checkbox&quo ...`,l:"frontEnd/html5/base/label.html#输入标签-input",a:"输入标签-input"},"25.12":{t:"按钮标签 `<button>`\r",p:`&lt;button&gt;点击我&lt;/button&gt;

`,l:"frontEnd/html5/base/label.html#按钮标签-button",a:"按钮标签-button"},"25.13":{t:"表单标签 `<form>`\r",p:`&lt;form action=&quot;/submit&quot; method=&quot;post&quot;&gt;
  &lt;label for=&quot;username&quot; ...`,l:"frontEnd/html5/base/label.html#表单标签-form",a:"表单标签-form"},"25.14":{t:"标题、脚注和导航标签 `<header>`、`<footer>` 和 `<nav>`\r",p:`&lt;header&gt;
  &lt;h1&gt;网站标题&lt;/h1&gt;
  &lt;nav&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=& ...`,l:"frontEnd/html5/base/label.html#标题、脚注和导航标签-header-、-footer-和-nav",a:"标题、脚注和导航标签-header-、-footer-和-nav"},"25.15":{t:"多媒体标签 `<video>` 和 `<audio>`\r",p:`&lt;video src=&quot;example.mp4&quot; controls&gt;您的浏览器不支持视频播放。&lt;/video&gt;

&lt;audio src=&quot;e ...`,l:"frontEnd/html5/base/label.html#多媒体标签-video-和-audio",a:"多媒体标签-video-和-audio"},"26.0":{t:"# HTML 标签\r",p:`HTML 标签用于定义网页的结构和内容，它们由尖括号包围。HTML 标签可以分为两类：块级标签和内联标签。
`,l:"frontEnd/html5/base/tag.html",a:"html-标签"},"26.1":{t:"块级标签（Block-level Elements）\r",p:`块级标签通常用于创建页面的大型结构和组织，它们会单独占据一行，并且在前后都会产生换行。常见的块级标签包括：

&lt;div&gt;：最通用的容器标签，用于将一组元素包裹在一起，方便样式和布局控制。
 ...`,l:"frontEnd/html5/base/tag.html#块级标签-block-level-elements",a:"块级标签-block-level-elements"},"26.2":{t:"内联标签（Inline Elements）\r",p:`内联标签用于包裹文本的一部分，它们不会独占一行，而是按照文本的自然流动排列。常见的内联标签包括：

&lt;a&gt;：锚链接标签，用于创建超链接到其他网页或文档。
&lt;span&gt;：内联容器 ...`,l:"frontEnd/html5/base/tag.html#内联标签-inline-elements",a:"内联标签-inline-elements"},"26.3":{t:"嵌套标签\r",p:`HTML 标签可以嵌套在其他标签中，形成树状的结构。例如，可以将一段文本包裹在&lt;p&gt;标签中，然后在&lt;div&gt;标签中包裹这个&lt;p&gt;标签，从而形成嵌套的关系。
&lt; ...`,l:"frontEnd/html5/base/tag.html#嵌套标签",a:"嵌套标签"},"26.4":{t:"属性\r",p:`HTML 标签可以包含属性，属性用于为标签提供额外的信息或设置。属性以键值对的形式出现，放在标签的开始标签中。例如，&lt;a&gt;标签用href属性来指定链接地址：
&lt;a href=&quo ...`,l:"frontEnd/html5/base/tag.html#属性",a:"属性"},"26.5":{t:"自定义标签\r",p:`HTML5 允许开发者创建自定义的标签，这些标签可能在 HTML 规范中没有定义，但可以在特定的应用中使用。自定义标签应以data-为前缀，避免与未来 HTML 版本中的新标签冲突。
例如：
&lt; ...`,l:"frontEnd/html5/base/tag.html#自定义标签",a:"自定义标签"},"27.0":{t:"# input\r",p:"\r",l:"frontEnd/html5/problem/input.html",a:"input"},"27.1":{t:'input type="password" 浏览器自动填充账号和密码\r',p:"&lt;a-input type=&quot;password&quot; placeholder=&quot;请输入登录密码&quot; v-model=&quot;model.password&q ...",l:"frontEnd/html5/problem/input.html#input-type-password-浏览器自动填充账号和密码",a:"input-type-password-浏览器自动填充账号和密码"},"28.0":{t:"# JavaScript 数组\r",p:`数组：(Array)是一种可以按顺序保存数据的数据类型
使用场景：如果有多个数据可以用数组保存起来，然后放到一个变量中，管理非常方便

数组中可以存放任意类型的数据，例如字符串，数字，布尔值等。

`,l:"frontEnd/JavaScript/base/array.html",a:"javascript-数组"},"28.1":{t:"创建\r",p:`创建数组有两种方式

利用 new 创建数组
利用数组字面量创建数组

数组的字面量是方括号 [ ]
声明数组并赋值称为数组的初始化
这种字面量方式也是最多的使用方式



// 利用new 创建数组 ...`,l:"frontEnd/JavaScript/base/array.html#创建",a:"创建"},"28.2":{t:"获取数组元素\r",p:`数组的长度
使用数组名.length可以访问数组元素的数量（数组长度）
数组的索引
索引 (下标) ：用来访问数组元素的序号（数组下标从 0 开始）。

数组可以通过索引来访问、设置、修改对应的数组元 ...`,l:"frontEnd/JavaScript/base/array.html#获取数组元素",a:"获取数组元素"},"28.3":{t:" ",p:"",l:"frontEnd/JavaScript/base/array.html#",a:""},"28.4":{t:"数组方法 -->\r",p:"\r",l:"frontEnd/JavaScript/base/array.html#数组方法",a:"数组方法"},"28.5":{t:"一、操作方法\r",p:`数组基本操作可以归纳为 增、删、改、查，需要留意的是哪些方法会对原数组产生影响，哪些方法不会
下面对数组常用的操作方法做一个归纳
`,l:"frontEnd/JavaScript/base/array.html#一、操作方法",a:"一、操作方法"},"28.6":{t:"增\r",p:`下面前三种是对原数组产生影响的增添方法，第四种则不会对原数组产生影响

push()
unshift()
splice()
concat()

`,l:"frontEnd/JavaScript/base/array.html#增",a:"增"},"28.7":{t:"push()\r",p:`push()方法接收任意数量的参数，并将它们添加到数组末尾，返回数组的最新长度
let colors = [] // 创建一个数组
let count = colors.push('red', 'bl ...`,l:"frontEnd/JavaScript/base/array.html#push",a:"push"},"28.8":{t:"unshift()\r",p:`unshift()在数组开头添加任意多个值，然后返回新的数组长度
let colors = new Array() // 创建一个数组
let count = colors.unshift('red' ...`,l:"frontEnd/JavaScript/base/array.html#unshift",a:"unshift"},"28.9":{t:"splice()\r",p:`传入三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组
let colors = ['red', 'green', 'blue']
let removed = colors.sp ...`,l:"frontEnd/JavaScript/base/array.html#splice",a:"splice"},"28.10":{t:"concat()\r",p:`首先会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组
let colors = ['red', 'green', 'blue']
let color ...`,l:"frontEnd/JavaScript/base/array.html#concat",a:"concat"},"28.11":{t:"删\r",p:`下面三种都会影响原数组，最后一项不影响原数组：

pop()
shift()
splice()
slice()

`,l:"frontEnd/JavaScript/base/array.html#删",a:"删"},"28.12":{t:"pop()\r",p:`pop() 方法用于删除数组的最后一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.pop() / ...`,l:"frontEnd/JavaScript/base/array.html#pop",a:"pop"},"28.13":{t:"shift()\r",p:`shift()方法用于删除数组的第一项，同时减少数组的 length 值，返回被删除的项
let colors = ['red', 'green']
let item = colors.shift() ...`,l:"frontEnd/JavaScript/base/array.html#shift",a:"shift"},"28.14":{t:"splice()\r",p:`传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组
let colors = ['red', 'green', 'blue']
let removed = colors.splice ...`,l:"frontEnd/JavaScript/base/array.html#splice",a:"splice"},"28.15":{t:"slice()\r",p:`slice() 用于创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组
let colors = ['red', 'green', 'blue', 'yellow', 'purple']
 ...`,l:"frontEnd/JavaScript/base/array.html#slice",a:"slice"},"28.16":{t:"改\r",p:`即修改原来数组的内容，常用splice
`,l:"frontEnd/JavaScript/base/array.html#改",a:"改"},"28.17":{t:"splice()\r",p:`传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响
let colors = ['red', 'green', 'blue']
let remo ...`,l:"frontEnd/JavaScript/base/array.html#splice",a:"splice"},"28.18":{t:"查\r",p:`即查找元素，返回元素坐标或者元素值

indexOf()
includes()
find()

`,l:"frontEnd/JavaScript/base/array.html#查",a:"查"},"28.19":{t:"indexOf()\r",p:`返回要查找的元素在数组中的位置，如果没找到则返回 -1
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.indexOf(4) // 3

`,l:"frontEnd/JavaScript/base/array.html#indexof",a:"indexof"},"28.20":{t:"includes()\r",p:`返回要查找的元素在数组中的位置，找到返回true，否则false
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.includes(4) // tr ...`,l:"frontEnd/JavaScript/base/array.html#includes",a:"includes"},"28.21":{t:"find()\r",p:`返回第一个匹配的元素
const people = [
  {
    name: 'Matt',
    age: 27
  },
  {
    name: 'Nicholas',
    age ...`,l:"frontEnd/JavaScript/base/array.html#find",a:"find"},"28.22":{t:"二、排序方法\r",p:`数组有两个方法可以用来对元素重新排序：

reverse()
sort()

`,l:"frontEnd/JavaScript/base/array.html#二、排序方法",a:"二、排序方法"},"28.23":{t:"reverse()\r",p:`顾名思义，将数组元素方向反转
let values = [1, 2, 3, 4, 5]
values.reverse()
console.log(values) // 5,4,3,2,1

`,l:"frontEnd/JavaScript/base/array.html#reverse",a:"reverse"},"28.24":{t:"sort()\r",p:`sort()方法接受一个比较函数，用于判断哪个值应该排在前面
function compare(value1, value2) {
  if (value1 &lt; value2) {
    re ...`,l:"frontEnd/JavaScript/base/array.html#sort",a:"sort"},"28.25":{t:"三、转换方法\r",p:`常见的转换方法有：
`,l:"frontEnd/JavaScript/base/array.html#三、转换方法",a:"三、转换方法"},"28.26":{t:"join()\r",p:`join() 方法接收一个参数，即字符串分隔符，返回包含所有项的字符串
let colors = ['red', 'green', 'blue']
console.log(colors.join(', ...`,l:"frontEnd/JavaScript/base/array.html#join",a:"join"},"28.27":{t:"四、迭代方法\r",p:`常用来迭代数组的方法（都不改变原数组）有如下：

some()
every()
forEach()
filter()
map()

`,l:"frontEnd/JavaScript/base/array.html#四、迭代方法",a:"四、迭代方法"},"28.28":{t:"some()\r",p:`对数组每一项都运行传入的测试函数，如果至少有 1 个元素返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let some ...`,l:"frontEnd/JavaScript/base/array.html#some",a:"some"},"28.29":{t:"every()\r",p:`对数组每一项都运行传入的测试函数，如果所有元素都返回 true ，则这个方法返回 true
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let everyRes ...`,l:"frontEnd/JavaScript/base/array.html#every",a:"every"},"28.30":{t:"forEach()\r",p:`对数组每一项都运行传入的函数，没有返回值
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
numbers.forEach((item, index, array)  ...`,l:"frontEnd/JavaScript/base/array.html#foreach",a:"foreach"},"28.31":{t:"filter()\r",p:`对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let filterResult = nu ...`,l:"frontEnd/JavaScript/base/array.html#filter",a:"filter"},"28.32":{t:"map()\r",p:`对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组
let numbers = [1, 2, 3, 4, 5, 4, 3, 2, 1]
let mapResult = numbers.m ...`,l:"frontEnd/JavaScript/base/array.html#map",a:"map"},"29.0":{t:"# JavaScript 流程控制\r",p:"\r",l:"frontEnd/JavaScript/base/flow.html",a:"javascript-流程控制"},"29.1":{t:"if 语句\r",p:`流程控制语句可以用来改变程序执行的顺序

条件判断语句
条件分支语句
循环语句

if (i &gt; 1) {
  alert('yes')
} else {
  alert('no')
}

// ...`,l:"frontEnd/JavaScript/base/flow.html#if-语句",a:"if-语句"},"29.2":{t:"if-else\r",p:`if-else 语句：

语法：

if(条件表达式){
  语句...
}else if(条件表达式1){
  语句...
}else if(条件表达式2){
  语句...
}else{
  语句 ...`,l:"frontEnd/JavaScript/base/flow.html#if-else",a:"if-else"},"29.3":{t:"switch 语句\r",p:`switch 语句 - 语法：

switch(表达式){
    case 表达式1:
        代码...
        break
    case 表达式2:
        代码.. ...`,l:"frontEnd/JavaScript/base/flow.html#switch-语句",a:"switch-语句"},"29.4":{t:"循环语句\r",p:`

通过循环语句可以使指定的代码反复执行


JS 中一共有三种循环语句

while 语句
do-while 语句
for 语句 - while 语句 - 语法：



`,l:"frontEnd/JavaScript/base/flow.html#循环语句",a:"循环语句"},"29.5":{t:"while\r",p:`// while(条件表达式){
//     语句...
// }
var i = 0
while (i &lt; 10) {
  i += 2
}

::: tip while 执行流程：
whi ...`,l:"frontEnd/JavaScript/base/flow.html#while",a:"while"},"29.6":{t:"do-while\r",p:`let i = 10
do {
  console.log(i)
  i++
} while (i &lt; 5)

::: tip do-while 执行顺序
do-while 语句在执行时，会先执 ...`,l:"frontEnd/JavaScript/base/flow.html#do-while",a:"do-while"},"29.7":{t:"for\r",p:"\r",l:"frontEnd/JavaScript/base/flow.html#for",a:"for"},"29.8":{t:"`for` 循环\r",p:`for (let i = 0; i &lt; 5; i++) {
  console.log(i)
}

`,l:"frontEnd/JavaScript/base/flow.html#for-循环",a:"for-循环"},"29.9":{t:"`for in` 循环\r",p:`
用于迭代对象的属性，通常是迭代对象的键（属性名）。
适用于对象（包括数组和其他可枚举属性的对象），不适用于迭代数组元素的值。
迭代的顺序不一定是按照属性在对象中的顺序，可能会有不可预测的结果。
通常 ...`,l:"frontEnd/JavaScript/base/flow.html#for-in-循环",a:"for-in-循环"},"29.10":{t:"` for of` 循环\r",p:`
用于迭代可迭代对象的值，例如数组、字符串、Map、Set 等。
迭代的顺序是按照对象的迭代协议定义的顺序，通常是按照对象中元素的顺序。
不会迭代对象的属性，只迭代值。

语法：
for (变量 of ...`,l:"frontEnd/JavaScript/base/flow.html#for-of-循环",a:"for-of-循环"},"29.11":{t:"for-in 和 for-of 的区别\r",p:`for-in 循环和 for-of 循环虽然都是用于迭代对象的方法，但它们有一些不同之处。

迭代对象的内容不同

for-in 循环迭代对象的是键名，而 for-of 循环迭代对象的是值。因此，fo ...`,l:"frontEnd/JavaScript/base/flow.html#for-in-和-for-of-的区别",a:"for-in-和-for-of-的区别"},"29.12":{t:"break 和 continue\r",p:`

break

break 用来终止 switch 和循环语句
break 执行后，当前的 switch 或循环会立刻停止
break 会终止离他最近的循环



for (let i = 0; i ...`,l:"frontEnd/JavaScript/base/flow.html#break-和-continue",a:"break-和-continue"},"30.0":{t:"# JavaScript 函数\r",p:`
在 JS 里面，可能会定义非常多的相同代码或者功能相似的代码，这些代码可能需要大量重复使用。
虽然 for 循环语句也能实现一些简单的重复操作，但是比较具有局限性，此时我们就可以使用 JS 中的函数 ...`,l:"frontEnd/JavaScript/base/function.html",a:"javascript-函数"},"30.1":{t:"函数的使用\r",p:"\r",l:"frontEnd/JavaScript/base/function.html#函数的使用",a:"函数的使用"},"30.2":{t:"声明函数\r",p:`function是声明函数的关键字，必须小写
// 声明定义方式
function 函数名() {
    // 函数体代码
}

// 这是函数表达式写法，匿名函数后面跟分号结束
var 变量名 = ...`,l:"frontEnd/JavaScript/base/function.html#声明函数",a:"声明函数"},"30.3":{t:"调用函数\r",p:`函数名();
// 函数使用分为两步： 声明函数 和 调用函数
// 1. 声明函数
// function 函数名() {
//     // 函数体
// }
function sayHi() { ...`,l:"frontEnd/JavaScript/base/function.html#调用函数",a:"调用函数"},"30.4":{t:"函数的封装\r",p:`函数的封装：是把一个或者多个功能通过函数的方式封装起来，对外只提供一个简单的函数接口。
`,l:"frontEnd/JavaScript/base/function.html#函数的封装",a:"函数的封装"},"30.5":{t:"函数的参数\r",p:"\r",l:"frontEnd/JavaScript/base/function.html#函数的参数",a:"函数的参数"},"30.6":{t:"形参和实参\r",p:`
在声明函数时，可以在函数名称后面的小括号中添加一些参数，这些参数被称为形参
在调用该函数时，同样也需要传递相应的参数，这些参数被称为实参

参数的作用: 在函数内部某些值不能固定，我们可以通过参数在 ...`,l:"frontEnd/JavaScript/base/function.html#形参和实参",a:"形参和实参"},"30.7":{t:"函数形参和实参个数不匹配问题\r",p:`


参数个数
说明




实参个数等于形参个数
输出正确结果


实参个数多于形参个数
只取到形参的个数


实参个数少于形参个数
多的参数定义为 undefined



// 函数形参实参个数 ...`,l:"frontEnd/JavaScript/base/function.html#函数形参和实参个数不匹配问题",a:"函数形参和实参个数不匹配问题"},"30.8":{t:"函数的返回值\r",p:`有的时候，我们会希望函数将值返回给调用者，此时通过使用 return 语句就可以实现。
语法格式
// 声明函数
function 函数名（）{
    ...
    return  需要返回的值； ...`,l:"frontEnd/JavaScript/base/function.html#函数的返回值",a:"函数的返回值"},"30.9":{t:"break、continue、return 的区别\r",p:`
break：结束当前的循环体（如 for、while）
continue：跳出本次循环，继续执行下次循环（如 for、while）
return：不仅可以退出循环，还能够返回 return 语句中的 ...`,l:"frontEnd/JavaScript/base/function.html#break、continue、return-的区别",a:"break、continue、return-的区别"},"30.10":{t:"匿名函数\r",p:`函数可以分为具名函数和匿名函数
匿名函数：没有名字的函数,无法直接使用。
`,l:"frontEnd/JavaScript/base/function.html#匿名函数",a:"匿名函数"},"30.11":{t:"函数表达式\r",p:`// 声明
let fn = function () {
  console.log('函数表达式')
}
// 调用
fn()

`,l:"frontEnd/JavaScript/base/function.html#函数表达式",a:"函数表达式"},"30.12":{t:"立即执行函数\r",p:`(function(){ xxx  })();
(function(){ xxxx }());

::: tip
无需调用，立即执行，其实本质已经调用了
多个立即执行函数之间用分号隔开
:::
`,l:"frontEnd/JavaScript/base/function.html#立即执行函数",a:"立即执行函数"},"31.0":{t:"# JavaScript 基本语法\r",p:`JavaScript 是一种脚本语言，通常用于在 Web 浏览器中编写交互式前端代码。它也可以在服务器端运行，用于编写后端代码。
JavaScript 的语法类似于 C 语言，但它是一种解释性语言，不 ...`,l:"frontEnd/JavaScript/base/index.html",a:"javascript-基本语法"},"31.1":{t:"输出语句\r",p:`以下是一个简单的 JavaScript 示例：
// 输出Hello, World!
console.log('Hello, World!')

document.write('Hello World ...`,l:"frontEnd/JavaScript/base/index.html#输出语句",a:"输出语句"},"31.2":{t:"引入方式\r",p:`
JavaScript 程序不能独立运行，它需要被嵌入 HTML 中，然后浏览器才能执行 JavaScript 代码。通过 script 标签将 JavaScript 代码引入到 HTML 中，有两种 ...`,l:"frontEnd/JavaScript/base/index.html#引入方式",a:"引入方式"},"31.3":{t:"内部方式\r",p:`通过 script 标签包裹 JavaScript 代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
  ...`,l:"frontEnd/JavaScript/base/index.html#内部方式",a:"内部方式"},"31.4":{t:"外部方式\r",p:`
一般将 JavaScript 代码写在独立的以 .js 结尾的文件中，然后通过 script 标签的 src 属性引入
script标签如果带src属性，那么内部的 js 代码没有作用



`,l:"frontEnd/JavaScript/base/index.html#外部方式",a:"外部方式"},"31.5":{t:"注释\r",p:"\r",l:"frontEnd/JavaScript/base/index.html#注释",a:"注释"},"31.6":{t:"单行注释\r",p:`使用 //  注释单行代码， 快捷键 Ctrl + /


`,l:"frontEnd/JavaScript/base/index.html#单行注释",a:"单行注释"},"31.7":{t:"多行注释\r",p:`使用/* */注释多行代码，快捷键 Shift+Alt+A


`,l:"frontEnd/JavaScript/base/index.html#多行注释",a:"多行注释"},"32.0":{t:"# JavaScript 对象\r",p:"\r",l:"frontEnd/JavaScript/base/object.html",a:"javascript-对象"},"32.1":{t:"概述\r",p:"\r",l:"frontEnd/JavaScript/base/object.html#概述",a:"概述"},"32.2":{t:"生成方法\r",p:`对象（object）是 JavaScript 语言的核心概念，也是最重要的数据类型。
什么是对象？简单说，对象就是一组“键值对”（key-value）的集合，是一种无序的复合数据集合。
var obj ...`,l:"frontEnd/JavaScript/base/object.html#生成方法",a:"生成方法"},"32.3":{t:"键名\r",p:`对象的所有键名都是字符串（ES6 又引入了 Symbol 值也可以作为键名），所以加不加引号都可以。上面的代码也可以写成下面这样。
var obj = {
  foo: 'Hello',
  bar: ...`,l:"frontEnd/JavaScript/base/object.html#键名",a:"键名"},"32.4":{t:"对象的引用\r",p:`如果不同的变量名指向同一个对象，那么它们都是这个对象的引用，也就是说指向同一个内存地址。修改其中一个变量，会影响到其他所有变量。
var o1 = {}
var o2 = o1

o1.a = 1
o ...`,l:"frontEnd/JavaScript/base/object.html#对象的引用",a:"对象的引用"},"32.5":{t:"表达式还是语句？\r",p:`对象采用大括号表示，这导致了一个问题：如果行首是一个大括号，它到底是表达式还是语句？
{
  foo: 123
}

JavaScript 引擎读到上面这行代码，会发现可能有两种含义。第一种可能是，这 ...`,l:"frontEnd/JavaScript/base/object.html#表达式还是语句",a:"表达式还是语句"},"32.6":{t:"属性的操作\r",p:"\r",l:"frontEnd/JavaScript/base/object.html#属性的操作",a:"属性的操作"},"32.7":{t:"属性的读取\r",p:`读取对象的属性，有两种方法，一种是使用点运算符，还有一种是使用方括号运算符。
var obj = {
  p: 'Hello World'
}

obj.p // &quot;Hello World& ...`,l:"frontEnd/JavaScript/base/object.html#属性的读取",a:"属性的读取"},"32.8":{t:"属性的赋值\r",p:`点运算符和方括号运算符，不仅可以用来读取值，还可以用来赋值。
var obj = {}

obj.foo = 'Hello'
obj['bar'] = 'World'

上面代码中，分别使用点运算符和 ...`,l:"frontEnd/JavaScript/base/object.html#属性的赋值",a:"属性的赋值"},"32.9":{t:"属性的查看\r",p:`查看一个对象本身的所有属性，可以使用Object.keys方法。
var obj = {
  key1: 1,
  key2: 2
}

Object.keys(obj)
// ['key1', 'k ...`,l:"frontEnd/JavaScript/base/object.html#属性的查看",a:"属性的查看"},"32.10":{t:"属性的删除：delete 命令\r",p:`delete命令用于删除对象的属性，删除成功后返回true。
var obj = { p: 1 }
Object.keys(obj) // [&quot;p&quot;]

delete obj.p  ...`,l:"frontEnd/JavaScript/base/object.html#属性的删除-delete-命令",a:"属性的删除-delete-命令"},"32.11":{t:"属性是否存在：in 运算符\r",p:`in运算符用于检查对象是否包含某个属性（注意，检查的是键名，不是键值），如果包含就返回true，否则返回false。它的左边是一个字符串，表示属性名，右边是一个对象。
var obj = { p: 1 ...`,l:"frontEnd/JavaScript/base/object.html#属性是否存在-in-运算符",a:"属性是否存在-in-运算符"},"32.12":{t:"属性的遍历：for...in 循环\r",p:`for...in循环用来遍历一个对象的全部属性。
var obj = { a: 1, b: 2, c: 3 }

for (var i in obj) {
  console.log('键名：', i ...`,l:"frontEnd/JavaScript/base/object.html#属性的遍历-for-in-循环",a:"属性的遍历-for-in-循环"},"32.13":{t:"with 语句\r",p:`with语句的格式如下：
with (对象) {
  语句
}

它的作用是操作同一个对象的多个属性时，提供一些书写的方便。
// 例一
var obj = {
  p1: 1,
  p2: 2
}
 ...`,l:"frontEnd/JavaScript/base/object.html#with-语句",a:"with-语句"},"33.0":{t:"# JavaScript 运算符\r",p:"\r",l:"frontEnd/JavaScript/base/operator.html",a:"javascript-运算符"},"33.1":{t:"运算符\r",p:`运算符也被称为操作符，是用于实现赋值、比较和执行算数运算等动能的符号。
JavaScript 中常用的运算符有：

算数运算符
递增和递减运算符
比较运算符
逻辑运算符
赋值运算符

`,l:"frontEnd/JavaScript/base/operator.html#运算符",a:"运算符"},"33.2":{t:"算数运算符\r",p:`


运算符
描述
实例




+
加
1 + 2 = 3


-
减
3 - 2 = 1


*
乘
2 * 4 = 8


/
除
10 / 2 = 5


**
幂运算
2 ** 4 = 16 ...`,l:"frontEnd/JavaScript/base/operator.html#算数运算符",a:"算数运算符"},"33.3":{t:"赋值运算符\r",p:`


运算符名称
描述
实例




=
赋值
let a = 10


??=
空赋值&lt;br /&gt;只有当变量的值为 null 或 undefined 时才会对变量进行赋值
3 - 2 = ...`,l:"frontEnd/JavaScript/base/operator.html#赋值运算符",a:"赋值运算符"},"33.4":{t:"自增和自减\r",p:"\r",l:"frontEnd/JavaScript/base/operator.html#自增和自减",a:"自增和自减"},"33.5":{t:"++ 自增运算符\r",p:`
++ 使用后会使得原来的变量立刻增加 1
自增分为前自增(++a)和后自增(a++)
无论是++a 还是 a++都会使原变量立刻增加 1
不同的是++a 和 a++所返回的值不同
a++ 是自增前的 ...`,l:"frontEnd/JavaScript/base/operator.html#自增运算符",a:"自增运算符"},"33.6":{t:"-- 自减运算符\r",p:`
使用后会使得原来的变量立刻减小 1
自减分为前自减(--a)和后自减(a--)
无论是--a 还是 a--都会使原变量立刻减少 1
不同的是--a 和 a--的值不同
--a 是新值
a-- 是旧值 ...`,l:"frontEnd/JavaScript/base/operator.html#自减运算符",a:"自减运算符"},"33.7":{t:"比较运行符\r",p:`


运算符名称
描述
案列
结果




&lt;
小于号
1 &lt; 2
true


&gt;
大于号
1 &gt; 2
false


&lt;=
小于等于号
2 &lt;= 2
true
 ...`,l:"frontEnd/JavaScript/base/operator.html#比较运行符",a:"比较运行符"},"33.8":{t:"逻辑运算符\r",p:"\r",l:"frontEnd/JavaScript/base/operator.html#逻辑运算符",a:"逻辑运算符"},"33.9":{t:"逻辑与 `&&`\r",p:`一假即假


可以对两个值进行与运算


当&amp;&amp;左右都为 true 时，则返回 true，否则返回 false


与运算是短路的与，如果第一个值为 false，则不看第二个值


与 ...`,l:"frontEnd/JavaScript/base/operator.html#逻辑与",a:"逻辑与"},"33.10":{t:"逻辑或 `||`\r",p:`一真即真


可以对两个值进行或运算


当||左右有 true 时，则返回 true，否则返回 false


或运算也是短路的或，如果第一个值为 true，则不看第二个值


或运算是找 true ...`,l:"frontEnd/JavaScript/base/operator.html#逻辑或",a:"逻辑或"},"33.11":{t:"逻辑非 `!`\r",p:`console.log(!false) // true

`,l:"frontEnd/JavaScript/base/operator.html#逻辑非",a:"逻辑非"},"33.12":{t:"条件运算符\r",p:`
条件表达式 ? 表达式 1 : 表达式 2

::: tip 执行顺序：
条件运算符在执行时，会先对条件表达式进行求值判断

如果结果为 true，则执行表达式 1
如果结果为 false，则执行表 ...`,l:"frontEnd/JavaScript/base/operator.html#条件运算符",a:"条件运算符"},"33.13":{t:" 运算符的优先级\r",p:`JavaScript 各种运算符的优先级别（Operator Precedence）是不一样的。优先级高的运算符先执行，优先级低的运算符后执行。
4 + 5 * 6 // 34

圆括号（()）可以用 ...`,l:"frontEnd/JavaScript/base/operator.html#运算符的优先级",a:"运算符的优先级"},"34.0":{t:"# JavaScript 数据类型\r",p:"\r",l:"frontEnd/JavaScript/base/types.html",a:"javascript-数据类型"},"34.1":{t:"一、基本类型\r",p:`基本类型主要为以下 6 种：

Number
String
Boolean
Undefined
null
symbol

`,l:"frontEnd/JavaScript/base/types.html#一、基本类型",a:"一、基本类型"},"34.2":{t:"Number\r",p:`数值最常见的整数类型格式则为十进制，还可以设置八进制（零开头）、十六进制（0x 开头）
let intNum = 55 // 10进制的55
let num1 = 070 // 8进制的56
let  ...`,l:"frontEnd/JavaScript/base/types.html#number",a:"number"},"34.3":{t:"Undefined\r",p:`Undefined 类型只有一个值，就是特殊值 undefined。当使用 var 或 let 声明了变量但没有初始化时，就相当于给变量赋予了 undefined 值
let message
cons ...`,l:"frontEnd/JavaScript/base/types.html#undefined",a:"undefined"},"34.4":{t:"String\r",p:`字符串可以使用双引号（&quot;）、单引号（'）或反引号（\`）标示
let firstName = 'John'
let lastName = 'Jacob'
let lastName = \`Jin ...`,l:"frontEnd/JavaScript/base/types.html#string",a:"string"},"34.5":{t:"Null\r",p:`Null 类型同样只有一个值，即特殊值 null
逻辑上讲， null 值表示一个空对象指针，这也是给typeof 传一个 null 会返回 &quot;object&quot; 的原因
let ca ...`,l:"frontEnd/JavaScript/base/types.html#null",a:"null"},"34.6":{t:"Boolean\r",p:`Boolean （布尔值）类型有两个字面值： true 和 false
通过Boolean可以将其他类型的数据转化成布尔值
规则如下：
数据类型      				转换为 true 的值      	 ...`,l:"frontEnd/JavaScript/base/types.html#boolean",a:"boolean"},"34.7":{t:"Symbol\r",p:`Symbol （符号）是原始值，且符号实例是唯一、不可变的。符号的用途是确保对象属性使用唯一标识符，不会发生属性冲突的危险
let genericSymbol = Symbol()
let other ...`,l:"frontEnd/JavaScript/base/types.html#symbol",a:"symbol"},"34.8":{t:"二、引用类型\r",p:`复杂类型统称为Object，我们这里主要讲述下面三种：

Object
Array
Function

`,l:"frontEnd/JavaScript/base/types.html#二、引用类型",a:"二、引用类型"},"34.9":{t:"Object\r",p:`创建object常用方式为对象字面量表示法，属性名可以是字符串或数值
let person = {
  name: 'Nicholas',
  age: 29,
  5: true
}

`,l:"frontEnd/JavaScript/base/types.html#object",a:"object"},"34.10":{t:"Array\r",p:`JavaScript数组是一组有序的数据，但跟其他语言不同的是，数组中每个槽位可以存储任意类型的数据。并且，数组也是动态大小的，会随着数据添加而自动增长
let colors = ['red', 2, ...`,l:"frontEnd/JavaScript/base/types.html#array",a:"array"},"34.11":{t:"Function\r",p:`函数实际上是对象，每个函数都是 Function类型的实例，而 Function 也有属性和方法，跟其他引用类型一样
函数存在三种常见的表达方式：

函数声明

// 函数声明
function su ...`,l:"frontEnd/JavaScript/base/types.html#function",a:"function"},"34.12":{t:"其他引用类型\r",p:`除了上述说的三种之外，还包括Date、RegExp、Map、Set等......
`,l:"frontEnd/JavaScript/base/types.html#其他引用类型",a:"其他引用类型"},"34.13":{t:"三、类型转换\r",p:`类型转换指将一种数据类型转换为其他类型
`,l:"frontEnd/JavaScript/base/types.html#三、类型转换",a:"三、类型转换"},"34.14":{t:"转换为字符串\r",p:`// 1. 把数字转换为字符串型 变量.toString()
var num = 10
var str = num.toString()
console.log(typeof str, str) // ...`,l:"frontEnd/JavaScript/base/types.html#转换为字符串",a:"转换为字符串"},"34.15":{t:"转换为数字型\r",p:`
将其他的数据类型转换为数值

使用 Number()函数来将其他类型转换为数值
转换的情况：

字符串：

如果字符串是一个合法的数字，则会自动转换为对应的数字
如果字符串不是合法数字，则转换为 N ...`,l:"frontEnd/JavaScript/base/types.html#转换为数字型",a:"转换为数字型"},"34.16":{t:"转换为布尔型\r",p:`使用 Boolean()函数来将其他类型转换为布尔值


转换的情况：
数字：

0 和 NaN 转换为 false
其余是 true

字符串：

空串 转换为 false
其余是 true

nu ...`,l:"frontEnd/JavaScript/base/types.html#转换为布尔型",a:"转换为布尔型"},"34.17":{t:"四、存储区别\r",p:`基本数据类型和引用数据类型存储在内存中的位置不同：


基本数据类型存储在栈中


引用类型的对象存储于堆中


当我们把变量赋值给一个变量时，解析器首先要确认的就是这个值是基本类型值还是引用类型值
 ...`,l:"frontEnd/JavaScript/base/types.html#四、存储区别",a:"四、存储区别"},"34.18":{t:"基本类型\r",p:`let a = 10
let b = a // 赋值操作
b = 20
console.log(a) // 10值

a的值为一个基本类型，是存储在栈中，将a的值赋给b，虽然两个变量的值相等，但是两个 ...`,l:"frontEnd/JavaScript/base/types.html#基本类型",a:"基本类型"},"34.19":{t:"引用类型\r",p:`var obj1 = {}
var obj2 = obj1
obj2.name = 'zs'
console.log(obj1.name) // zs

引用类型数据存放在堆中，每个堆内存对象都有对应 ...`,l:"frontEnd/JavaScript/base/types.html#引用类型",a:"引用类型"},"34.20":{t:"小结\r",p:`
声明变量时不同的内存地址分配：

简单类型的值存放在栈中，在栈中存放的是对应的值
引用类型对应的值存储在堆中，在栈中存放的是指向堆内存的地址


不同的类型数据导致赋值变量时的不同：

简单类型赋值 ...`,l:"frontEnd/JavaScript/base/types.html#小结",a:"小结"},"35.0":{t:"# JavaScript 变量\r",p:"\r",l:"frontEnd/JavaScript/base/variable.html",a:"javascript-变量"},"35.1":{t:"var 关键字\r",p:`var msg // 默认 undefined

声明后可以改变类型，但不推荐
var msg = 'hi'
msg = 100 // 合法，但不推荐

var 声明作用域，一个函数内部定义一个变量， ...`,l:"frontEnd/JavaScript/base/variable.html#var-关键字",a:"var-关键字"},"35.2":{t:"let 声明\r",p:`let 声明的范围是块作用域：
if (true) {
  var name = 'zhangsan'
  console.log(name) // zhangsan
}
console.log(na ...`,l:"frontEnd/JavaScript/base/variable.html#let-声明",a:"let-声明"},"35.3":{t:"暂时性死区\r",p:`// name 会被提升
console.log(name) // undefined
var name = 'zhangsan'
// age 不会被提升
console.log(age) // R ...`,l:"frontEnd/JavaScript/base/variable.html#暂时性死区",a:"暂时性死区"},"35.4":{t:"全局声明\r",p:`let 在全局作用域中声明的变量不会成为 window 对象的属性（var 声明的变量则会）
var name = 'zhangsan'
console.log(window.name) // 'zh ...`,l:"frontEnd/JavaScript/base/variable.html#全局声明",a:"全局声明"},"35.5":{t:"条件声明\r",p:`


JavaScript 引擎会自动将多余的声明在作用域顶部合并为一个声明。但是 let 是块级作用域，所以检查不到之前是否声明过。



try/catch 语句或 typeof 操作符也不能解决 ...`,l:"frontEnd/JavaScript/base/variable.html#条件声明",a:"条件声明"},"35.6":{t:"for 循环中的 let 声明\r",p:`使用 var 时变量会渗透到外面
for (var i = 0; i &lt; 5; ++i) {
  // 循环逻辑
}
console.log(i) // 5

let 之后则不会，因为遇到 {} ...`,l:"frontEnd/JavaScript/base/variable.html#for-循环中的-let-声明",a:"for-循环中的-let-声明"},"35.7":{t:"const 声明\r",p:`const 的行为与 let 基本相同，但是他是常量，声明之后不能修改，尝试修改 const 声明的变量会导致运行时错误。
const age = 18
age = 30 // TypeError:  ...`,l:"frontEnd/JavaScript/base/variable.html#const-声明",a:"const-声明"},"35.8":{t:"函数声明提升与 var 声明提升\r",p:`var a = 'Tom'
function a() {}

console.log(a) // 'Tom'

function与var都存在变量提升，但function比var优先级高。上面的代码就 ...`,l:"frontEnd/JavaScript/base/variable.html#函数声明提升与-var-声明提升",a:"函数声明提升与-var-声明提升"},"36.0":{t:"# BOM document 对象\r",p:`Document 对象代表当前窗口或标签页中加载的文档。它提供了对文档内容进行访问和操作的方法和属性。
`,l:"frontEnd/JavaScript/BOM/document.html",a:"bom-document-对象"},"36.1":{t:"常见操作\r",p:`
获取元素：可以使用document.getElementById(id)获取具有指定 id 的元素。
修改文档结构：可以使用document.createElement(tagName)创建新元素， ...`,l:"frontEnd/JavaScript/BOM/document.html#常见操作",a:"常见操作"},"36.2":{t:"示例\r",p:`// 获取具有id为&quot;myElement&quot;的元素
var element = document.getElementById('myElement')

// 创建一个新的段落元素 ...`,l:"frontEnd/JavaScript/BOM/document.html#示例",a:"示例"},"37.0":{t:"# BOM history 对象\r",p:`History 对象提供了对浏览器历史记录的操作。可以使用它向前或向后导航，加载历史记录中的不同页面。
`,l:"frontEnd/JavaScript/BOM/history.html",a:"bom-history-对象"},"37.1":{t:"常见方法\r",p:`
history.back()：导航到上一个页面。
history.forward()：导航到下一个页面。
history.go(delta)：导航到相对于当前页面的偏移量为delta的页面。

`,l:"frontEnd/JavaScript/BOM/history.html#常见方法",a:"常见方法"},"37.2":{t:"示例\r",p:`// 导航到上一个页面
history.back()

// 导航到下一个页面
history.forward()

// 导航到相对于当前页面的偏移量为2的页面
history.go(2)

`,l:"frontEnd/JavaScript/BOM/history.html#示例",a:"示例"},"38.0":{t:"# JavaScript BOM\r",p:`BOM（Browser Object Model）是 JavaScript 中用于与浏览器交互的一组对象和方法集合。它提供了访问和控制浏览器窗口及其内容的功能。以下是一些常见的 BOM 对象：


w ...`,l:"frontEnd/JavaScript/BOM/index.html",a:"javascript-bom"},"39.0":{t:"# BOM location 对象\r",p:`Location 对象提供了与当前窗口的 URL 相关的信息和操作。它包含了 URL 的各个部分，如协议、主机名、路径和查询参数等。
`,l:"frontEnd/JavaScript/BOM/location.html",a:"bom-location-对象"},"39.1":{t:"常见属性和方法\r",p:`
location.href：当前窗口的完整 URL。
location.protocol：URL 的协议部分。
location.hostname：URL 的主机名部分。
location.path ...`,l:"frontEnd/JavaScript/BOM/location.html#常见属性和方法",a:"常见属性和方法"},"39.2":{t:"示例\r",p:`// 获取当前窗口的URL
console.log(location.href)

// 获取URL的协议
console.log(location.protocol)

// 将页面重定向到新的UR ...`,l:"frontEnd/JavaScript/BOM/location.html#示例",a:"示例"},"40.0":{t:"# BOM navigator 对象\r",p:`Navigator 对象提供了关于浏览器的信息，如浏览器的名称、版本、用户代理字符串等。它还可以用于检测浏览器的功能和特性。
`,l:"frontEnd/JavaScript/BOM/navigator.html",a:"bom-navigator-对象"},"40.1":{t:"常见属性\r",p:`
navigator.userAgent：包含用户代理字符串，用于识别浏览器和操作系统。
navigator.appName：浏览器的名称。
navigator.appVersion：浏览器的版本。
 ...`,l:"frontEnd/JavaScript/BOM/navigator.html#常见属性",a:"常见属性"},"40.2":{t:"示例\r",p:`// 获取用户代理字符串
console.log(navigator.userAgent)

// 获取浏览器的名称
console.log(navigator.appName)

// 获取浏览器的 ...`,l:"frontEnd/JavaScript/BOM/navigator.html#示例",a:"示例"},"41.0":{t:"# BOM screen 对象\r",p:`Screen 对象提供了关于用户屏幕的信息，如屏幕的尺寸、分辨率等。可以使用它来调整页面在不同屏幕上的显示。
`,l:"frontEnd/JavaScript/BOM/screen.html",a:"bom-screen-对象"},"41.1":{t:"常见属性\r",p:`
screen.width：屏幕的宽度。
screen.height：屏幕的高度。
screen.availWidth：屏幕的可用宽度，不包括系统任务栏或工具栏。
screen.availHeight ...`,l:"frontEnd/JavaScript/BOM/screen.html#常见属性",a:"常见属性"},"41.2":{t:"示例\r",p:`// 获取屏幕的宽度
console.log('屏幕宽度：' + screen.width + ' 像素')

// 获取屏幕的高度
console.log('屏幕高度：' + screen.heig ...`,l:"frontEnd/JavaScript/BOM/screen.html#示例",a:"示例"},"42.0":{t:"# BOM window 对象\r",p:`Window 对象是 BOM 的顶级对象，表示浏览器窗口或标签页。它提供了操作浏览器窗口的方法和属性，以及与窗口内容交互的功能。
`,l:"frontEnd/JavaScript/BOM/window.html",a:"bom-window-对象"},"42.1":{t:"常见属性和方法\r",p:`
window.open(url, name, specs)：打开一个新的浏览器窗口或标签页。
window.close()：关闭当前窗口。
window.resizeTo(width, height ...`,l:"frontEnd/JavaScript/BOM/window.html#常见属性和方法",a:"常见属性和方法"},"42.2":{t:"示例\r",p:`// 打开一个新窗口
window.open('https://www.example.com', '_blank')

// 关闭当前窗口
window.close()

// 调整窗口大小
win ...`,l:"frontEnd/JavaScript/BOM/window.html#示例",a:"示例"},"43.0":{t:"# JavaScript Ajax\r",p:"\r",l:"frontEnd/JavaScript/core/ajax.html",a:"javascript-ajax"},"43.1":{t:"Ajax简介\r",p:`AJAX 全称(Async Javascript and XML)
即异步的 JavaScript 和 XML，是一种创建交互式网页应用的网页开发技术，可以在不重新加载整个网页的情况下，与服务器交换数 ...`,l:"frontEnd/JavaScript/core/ajax.html#ajax简介",a:"ajax简介"},"43.2":{t:"二、实现过程\r",p:`实现 Ajax 异步交互需要服务器逻辑进行配合，需要完成以下步骤：


创建 Ajax 的核心对象 XMLHttpRequest 对象


通过 XMLHttpRequest 对象的 open() 方 ...`,l:"frontEnd/JavaScript/core/ajax.html#二、实现过程",a:"二、实现过程"},"43.3":{t:"1. 创建 XMLHttpRequest 对象\r",p:`通过XMLHttpRequest() 构造函数用于初始化一个 XMLHttpRequest 实例对象
const xhr = new XMLHttpRequest()

`,l:"frontEnd/JavaScript/core/ajax.html#_1-创建-xmlhttprequest-对象",a:"_1-创建-xmlhttprequest-对象"},"43.4":{t:"2. 与服务器建立连接\r",p:`通过 XMLHttpRequest 对象的 open() 方法与服务器建立连接
xhr.open(method, url, [async][, user][, password])

参数说明：


 ...`,l:"frontEnd/JavaScript/core/ajax.html#_2-与服务器建立连接",a:"_2-与服务器建立连接"},"43.5":{t:"3. 给服务端发送数据\r",p:`通过 XMLHttpRequest 对象的 send() 方法，将客户端页面的数据发送给服务端
xhr.send([body])

body: 在 XHR 请求中要发送的数据体，如果不传递数据则为 n ...`,l:"frontEnd/JavaScript/core/ajax.html#_3-给服务端发送数据",a:"_3-给服务端发送数据"},"43.6":{t:"4. 绑定 onreadystatechange 事件\r",p:`onreadystatechange 事件用于监听服务器端的通信状态，主要监听的属性为XMLHttpRequest.readyState ,
关于XMLHttpRequest.readyState属性 ...`,l:"frontEnd/JavaScript/core/ajax.html#_4-绑定-onreadystatechange-事件",a:"_4-绑定-onreadystatechange-事件"},"43.7":{t:"三、封装与使用\r",p:"\r",l:"frontEnd/JavaScript/core/ajax.html#三、封装与使用",a:"三、封装与使用"},"43.8":{t:"封装\r",p:`通过上面对XMLHttpRequest 对象的了解，下面来封装一个简单的ajax请求
//封装一个ajax请求
function ajax(options) {
    //创建XMLHttpRequ ...`,l:"frontEnd/JavaScript/core/ajax.html#封装",a:"封装"},"43.9":{t:"使用\r",p:`使用方式如下
ajax({
  type: 'post',
  dataType: 'json',
  data: {},
  url: 'https://xxxx',
  success: func ...`,l:"frontEnd/JavaScript/core/ajax.html#使用",a:"使用"},"44.0":{t:"# 轮播图\r",p:"\r",l:"frontEnd/JavaScript/core/carousel.html",a:"轮播图"},"44.1":{t:"代码实现\r",p:`:::code-group
:::
`,l:"frontEnd/JavaScript/core/carousel.html#代码实现",a:"代码实现"},"45.0":{t:"# JavaScript 闭包\r",p:`
闭包（Closure）是 JavaScript 中一种强大且常用的特性。它允许内部函数访问其外部函数的作用域，即使外部函数已经执行完毕，也可以继续访问。闭包可以捕获外部函数的变量和参数，并将其保存在 ...`,l:"frontEnd/JavaScript/core/closure.html",a:"javascript-闭包"},"45.1":{t:"创建闭包\r",p:`要创建一个闭包，通常需要在一个函数内部定义另一个函数，并将其返回。返回的函数就是闭包，它可以访问其外部函数中的变量和参数。
function outerFunction() {
  var outer ...`,l:"frontEnd/JavaScript/core/closure.html#创建闭包",a:"创建闭包"},"45.2":{t:"捕获外部变量\r",p:`闭包可以捕获并访问其外部函数的变量，即使外部函数已经执行完毕。这使得闭包可以在不同的上下文中使用和保留外部变量的状态。
function counter() {
  var count = 0

   ...`,l:"frontEnd/JavaScript/core/closure.html#捕获外部变量",a:"捕获外部变量"},"45.3":{t:"保护数据\r",p:`通过使用闭包，可以创建私有变量，这些变量无法从外部访问，只能通过内部函数提供的公共接口访问和修改。
function createPerson(name) {
  var age = 0

  fun ...`,l:"frontEnd/JavaScript/core/closure.html#保护数据",a:"保护数据"},"45.4":{t:"实际用途\r",p:`

封装私有变量和方法：通过使用闭包，可以创建私有变量和方法，将其封装在函数内部，只暴露公共接口给外部。这种方式可以避免全局命名冲突，并提供了一种模块化的封装方式。


创建工厂函数：通过使用闭包，可 ...`,l:"frontEnd/JavaScript/core/closure.html#实际用途",a:"实际用途"},"45.5":{t:"注意事项\r",p:`

闭包会导致内存占用增加，因为外部函数的变量和作用域在闭包中被保留，即使外部函数执行完毕也不会被释放。因此，在使用闭包时要注意内存管理，避免过度使用闭包导致内存泄漏。


闭包中的变量是引用传递的， ...`,l:"frontEnd/JavaScript/core/closure.html#注意事项",a:"注意事项"},"46.0":{t:"# JavaScript 深浅拷贝\r",p:"\r",l:"frontEnd/JavaScript/core/copy.html",a:"javascript-深浅拷贝"},"46.1":{t:"浅拷贝\r",p:`浅拷贝是创建一个新对象，新对象的属性值是原始对象属性值的引用。也就是说，新对象和原始对象共享相同的引用类型属性，对其中一个对象的修改会影响到另一个对象。
在 JavaScript 中，可以使用一些简单 ...`,l:"frontEnd/JavaScript/core/copy.html#浅拷贝",a:"浅拷贝"},"46.2":{t:"深拷贝\r",p:`深拷贝是创建一个新对象，新对象的属性值与原始对象的属性值完全独立，二者互不影响。
在 JavaScript 中，由于对象的属性可能是引用类型，所以需要递归复制对象的所有属性，包括嵌套的对象和数组。以下 ...`,l:"frontEnd/JavaScript/core/copy.html#深拷贝",a:"深拷贝"},"47.0":{t:"# JavaScript 函数柯里化\r",p:"\r",l:"frontEnd/JavaScript/core/currying.html",a:"javascript-函数柯里化"},"47.1":{t:"什么是函数柯里化\r",p:"JavaScript 函数柯里化是一种将多个参数的函数转化为一系列接受单个参数的函数的过程。通过函数柯里化，可以将原始函数分解为多个嵌套的函数，每个函数都接收一个参数，并返回一个新函数等待接收下一个参 ...",l:"frontEnd/JavaScript/core/currying.html#什么是函数柯里化",a:"什么是函数柯里化"},"47.2":{t:"函数柯里化的优点和应用场景\r",p:`

参数复用和定制：通过柯里化，可以将函数的一部分参数预先设置，然后在后续调用时只传递剩余的参数。这使得函数的复用和定制变得更加灵活和方便。


延迟执行：通过柯里化，可以将函数的执行延迟到后续的调用 ...`,l:"frontEnd/JavaScript/core/currying.html#函数柯里化的优点和应用场景",a:"函数柯里化的优点和应用场景"},"47.3":{t:"实现函数柯里化的方法\r",p:`在 JavaScript 中实现柯里化函数的方法有多种。下面是几种常见的实现方式：
`,l:"frontEnd/JavaScript/core/currying.html#实现函数柯里化的方法",a:"实现函数柯里化的方法"},"47.4":{t:"1. 使用闭包递归\r",p:`function curry(func) {
  return function curried(...args) {
    if (args.length &gt;= func.length) { ...`,l:"frontEnd/JavaScript/core/currying.html#_1-使用闭包递归",a:"_1-使用闭包递归"},"47.5":{t:"2. 使用递归和占位符\r",p:`function curry(func) {
  return function curried(...args) {
    if (args.includes(curry.placeholder) ...`,l:"frontEnd/JavaScript/core/currying.html#_2-使用递归和占位符",a:"_2-使用递归和占位符"},"47.6":{t:"3. 使用箭头函数和递归\r",p:`const curry = (func) =&gt; {
  const curried = (...args) =&gt;
    args.length &gt;= func.length ? f ...`,l:"frontEnd/JavaScript/core/currying.html#_3-使用箭头函数和递归",a:"_3-使用箭头函数和递归"},"48.0":{t:"# JavaScript 节流和防抖\r",p:`
在 JavaScript 中，节流（Throttling）和防抖（Debouncing）是两种常见的性能优化技术，用于限制函数的执行频率。它们可以帮助控制事件处理函数的触发次数，以减少资源消耗和提升 ...`,l:"frontEnd/JavaScript/core/debounce.html",a:"javascript-节流和防抖"},"48.1":{t:"节流\r",p:`节流函数适用事件：

window 的 resize、scroll
mousedown、mousemove
keyup、keydown ...

`,l:"frontEnd/JavaScript/core/debounce.html#节流",a:"节流"},"48.2":{t:"定义\r",p:`节流是一种控制函数执行频率的技术。当一个函数被频繁调用时，节流可以限制函数在一定时间间隔内只执行一次。
节流的实现思路是设置一个定时器，在函数被调用时先检查定时器是否存在。如果定时器不存在，则立即执行 ...`,l:"frontEnd/JavaScript/core/debounce.html#定义",a:"定义"},"48.3":{t:"其他写法\r",p:`
使用时间戳写法，事件会立即执行，停止触发后没有办法再次执行

function throttled1(fn, delay = 500) {
  let oldtime = Date.now()
   ...`,l:"frontEnd/JavaScript/core/debounce.html#其他写法",a:"其他写法"},"48.4":{t:"防抖\r",p:`防抖函数适用事件：

window 的 resize、scroll
mousedown、mousemove、keyup、keydown
表单事件 ...

`,l:"frontEnd/JavaScript/core/debounce.html#防抖",a:"防抖"},"48.5":{t:"定义\r",p:`防抖是一种控制函数执行频率的技术。当一个函数被频繁调用时，防抖可以延迟函数的执行，直到某个连续的时间段内没有新的函数调用发生。
防抖的实现思路是设置一个定时器，在函数被调用时先清除之前的定时器，并设置 ...`,l:"frontEnd/JavaScript/core/debounce.html#定义",a:"定义"},"48.6":{t:"立即执行\r",p:`防抖如果需要立即执行，可加入第三个参数用于判断，实现如下：
function debounce(func, wait, immediate) {
  let timeout

  return fun ...`,l:"frontEnd/JavaScript/core/debounce.html#立即执行",a:"立即执行"},"48.7":{t:"用法\r",p:`
导入或定义防抖|节流函数

function debounce(func, delay) {
  let timerId
  return function (...args) {
    clea ...`,l:"frontEnd/JavaScript/core/debounce.html#用法",a:"用法"},"49.0":{t:"# 数组去重\r",p:`const arr = [1, 1, '1', 17, true, true, false, false, 'true', 'a', {}, {}]
// =&gt; [1, '1', 17, tru ...`,l:"frontEnd/JavaScript/core/duplicate.html",a:"数组去重"},"49.1":{t:"1. 使用 set\r",p:`const array = [1, 2, 2, 3, 3, 4, 5, 5]

const uniqueArray = [...new Set(array)]

console.log(uniqueA ...`,l:"frontEnd/JavaScript/core/duplicate.html#_1-使用-set",a:"_1-使用-set"},"49.2":{t:"2. for 循环\r",p:`const unique = (arr) =&gt; {
  let len = arr.length
  for (let i = 0; i &lt; len; i++) {
    for (le ...`,l:"frontEnd/JavaScript/core/duplicate.html#_2-for-循环",a:"_2-for-循环"},"49.3":{t:"3. 使用 indexOf\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (re ...`,l:"frontEnd/JavaScript/core/duplicate.html#_3-使用-indexof",a:"_3-使用-indexof"},"49.4":{t:"4. 使用 include\r",p:`const unique = (arr) =&gt; {
  const res = []
  for (let i = 0; i &lt; arr.length; i++) {
    if (!r ...`,l:"frontEnd/JavaScript/core/duplicate.html#_4-使用-include",a:"_4-使用-include"},"49.5":{t:"5. 使用 filter\r",p:`const unique = (arr) =&gt; {
  return arr.filter((item, index) =&gt; {
    return arr.indexOf(item)  ...`,l:"frontEnd/JavaScript/core/duplicate.html#_5-使用-filter",a:"_5-使用-filter"},"49.6":{t:"6. 使用 Map\r",p:`const unique = (arr) =&gt; {
  const map = new Map()
  const res = []
  for (let i = 0; i &lt; arr.l ...`,l:"frontEnd/JavaScript/core/duplicate.html#_6-使用-map",a:"_6-使用-map"},"50.0":{t:"# Event Loop 事件循环机制\r",p:"\r",l:"frontEnd/JavaScript/core/eventLoop.html",a:"event-loop-事件循环机制"},"50.1":{t:"js 事件执行机制的过程\r",p:`javaScript 是一门单线程语言，js 在执行代码时会按照代码语句的顺序执行形成一个执行栈，默认会从上到下依次执行，执行过程中会将任务分成两类。

同步任务：需要执行的任务在主线程上排队，一次执 ...`,l:"frontEnd/JavaScript/core/eventLoop.html#js-事件执行机制的过程",a:"js-事件执行机制的过程"},"50.2":{t:"异步任务分为：宏任务和微任务\r",p:`同步和异步分别进入到不同的执行场所，同步进入到主线程，异步的进入到任务队列（event table） 并注册函数，异步任务又可以分为宏任务和微任务。

微任务： process.nextTick（no ...`,l:"frontEnd/JavaScript/core/eventLoop.html#异步任务分为-宏任务和微任务",a:"异步任务分为-宏任务和微任务"},"50.3":{t:"事件循环顺序\r",p:`

js 在执行上下文栈的同步任务执行完后


首先会去执行微任务队列，按照队列先进先出的原则，一次执行完所有 Microtask 微任务队列任务


当前微任务执行完后，判断是否有 UI 渲染如果有 ...`,l:"frontEnd/JavaScript/core/eventLoop.html#事件循环顺序",a:"事件循环顺序"},"50.4":{t:" ",p:"",l:"frontEnd/JavaScript/core/eventLoop.html#",a:""},"50.5":{t:"例子 -->",p:"",l:"frontEnd/JavaScript/core/eventLoop.html#例子",a:"例子"},"51.0":{t:"# 数组扁平化\r",p:`
数组扁平化是指将一个多维数组变为一个一维数组

const arr = [1, [2, [3, [4, 5]]], 6]
// =&gt; [1, 2, 3, 4, 5, 6]

`,l:"frontEnd/JavaScript/core/flattening.html",a:"数组扁平化"},"51.1":{t:"1. 使用 flat()\r",p:`const res1 = arr.flat()
// 使用Infinity，无论多少层都将扁平化为一维数组。
const res1 = arr.flat(Infinity)

`,l:"frontEnd/JavaScript/core/flattening.html#_1-使用-flat",a:"_1-使用-flat"},"51.2":{t:"2. 利用正则\r",p:`const res2 = JSON.stringify(arr).replace(/\\[|\\]/g, '').split(',')

// 优化
const res3 = JSON.parse('[' ...`,l:"frontEnd/JavaScript/core/flattening.html#_2-利用正则",a:"_2-利用正则"},"51.3":{t:"3. 使用 reduce\r",p:`const flatten = (arr) =&gt; {
  return arr.reduce((pre, cur) =&gt; {
    return pre.concat(Array.isA ...`,l:"frontEnd/JavaScript/core/flattening.html#_3-使用-reduce",a:"_3-使用-reduce"},"51.4":{t:"4. 函数递归\r",p:`const res5 = []
const fn = (arr) =&gt; {
  for (let i = 0; i &lt; arr.length; i++) {
    if (Array.i ...`,l:"frontEnd/JavaScript/core/flattening.html#_4-函数递归",a:"_4-函数递归"},"52.0":{t:"# JavaScript Promise\r",p:`Promise是一种异步编程的解决方案，它可以避免回调地狱，使代码更加简洁易读。Promise对象代表一个异步操作的最终完成或失败，并返回一个值。
在 JavaScript 中，Promise有三种状 ...`,l:"frontEnd/JavaScript/core/promise.html",a:"javascript-promise"},"52.1":{t:"创建 Promise\r",p:`Promise 可以通过 new Promise() 构造函数来创建。它接收一个带有两个参数的回调函数，回调函数包含两个参数：resolve 和 reject。
const promise = new ...`,l:"frontEnd/JavaScript/core/promise.html#创建-promise",a:"创建-promise"},"52.2":{t:"处理 Promise 结果\r",p:`通过调用 Promise 实例的 .then() 方法可以处理异步操作成功的结果，通过调用 .catch() 方法可以处理异步操作失败的结果。
promise
  .then((value) =&gt ...`,l:"frontEnd/JavaScript/core/promise.html#处理-promise-结果",a:"处理-promise-结果"},"52.3":{t:"Promise 链式调用\r",p:`Promise 的一个重要特性是可以通过链式调用来串联多个异步操作。通过在 .then() 方法中返回新的 Promise 实例，可以将多个异步操作连接起来。
promise
  .then((val ...`,l:"frontEnd/JavaScript/core/promise.html#promise-链式调用",a:"promise-链式调用"},"52.4":{t:"Promise.all()\r",p:"Promise.all() 方法接收一个 Promise 实例数组，返回一个新的 Promise 实例。该新实例在数组中的所有 Promise 实例都成功完成时才会成功，并将所有 Promise 实例 ...",l:"frontEnd/JavaScript/core/promise.html#promise-all",a:"promise-all"},"52.5":{t:"使用 `Promise` 封装一个 Ajax\r",p:`下面是一个使用 Promise 封装的基本 Ajax 请求的示例：
function ajax(url, method, data) {
  return new Promise((resolve,  ...`,l:"frontEnd/JavaScript/core/promise.html#使用-promise-封装一个-ajax",a:"使用-promise-封装一个-ajax"},"53.0":{t:"# JavaScript 原型\r",p:"\r",l:"frontEnd/JavaScript/core/prototype.html",a:"javascript-原型"},"53.1":{t:"原型\r",p:`原型是 JavaScript 中每个对象的基础。每个 JavaScript 对象都有一个原型对象，它是一个包含属性和方法的对象。这个原型对象可以被其他对象继承，从而实现属性和方法的共享。
在 Java ...`,l:"frontEnd/JavaScript/core/prototype.html#原型",a:"原型"},"53.2":{t:"原型链\r",p:`原型链是一个对象和它的原型对象之间的连接。当你访问一个对象的属性或方法时，JavaScript 会首先查找该对象本身是否有这个属性或方法，如果没有，它会沿着原型链向上查找，直到找到为止。
functi ...`,l:"frontEnd/JavaScript/core/prototype.html#原型链",a:"原型链"},"53.3":{t:"原型对象\r",p:`每个 JavaScript 对象都有一个关联的原型对象。你可以通过 __proto__ 属性来访问对象的原型对象。例如：
const person = { name: 'John' }
console ...`,l:"frontEnd/JavaScript/core/prototype.html#原型对象",a:"原型对象"},"53.4":{t:"原型继承\r",p:`原型继承是 JavaScript 中对象之间共享属性和方法的一种方式。当一个对象继承了另一个对象的原型时，它可以访问该原型对象上的属性和方法。
让我们再次看一个例子：
function Animal( ...`,l:"frontEnd/JavaScript/core/prototype.html#原型继承",a:"原型继承"},"53.5":{t:"JavaScript 中的原型继承方式\r",p:`JavaScript 中有多种方式来实现原型继承，让我们一一了解这些方式。
`,l:"frontEnd/JavaScript/core/prototype.html#javascript-中的原型继承方式",a:"javascript-中的原型继承方式"},"53.6":{t:"1. 构造函数和原型链\r",p:`这是最常见的原型继承方式。它使用构造函数来创建对象属性，同时使用原型链来共享方法。在前面的例子中，我们已经看到了这种方式的示例。
function Animal(name) {
  this.name ...`,l:"frontEnd/JavaScript/core/prototype.html#_1-构造函数和原型链",a:"_1-构造函数和原型链"},"53.7":{t:"2. Object.create()\r",p:`Object.create() 方法是一种更简单的方式来创建一个对象并指定其原型。它接受一个原型对象作为参数，然后返回一个新对象，该对象的原型就是传入的原型对象。
const animal = {
  ...`,l:"frontEnd/JavaScript/core/prototype.html#_2-object-create",a:"_2-object-create"},"53.8":{t:"3. 类继承\r",p:`ES6 引入了类（class）的概念，它提供了一种更简单的方式来实现原型继承。类可以使用 extends 关键字继承另一个类的属性和方法。
class Animal {
  constructor(n ...`,l:"frontEnd/JavaScript/core/prototype.html#_3-类继承",a:"_3-类继承"},"53.9":{t:"4. Object.setPrototypeOf()\r",p:`Object.setPrototypeOf() 方法允许你在运行时更改对象的原型。这个方法接受两个参数：要更改原型的对象和新的原型对象。
const animal = {
  eat: functio ...`,l:"frontEnd/JavaScript/core/prototype.html#_4-object-setprototypeof",a:"_4-object-setprototypeof"},"53.10":{t:"原型继承与传统继承的区别\r",p:`JavaScript 中的原型继承与传统面向对象编程语言中的继承有一些重要区别。以下是一些主要区别：
`,l:"frontEnd/JavaScript/core/prototype.html#原型继承与传统继承的区别",a:"原型继承与传统继承的区别"},"53.11":{t:"1. 动态性\r",p:`JavaScript 的原型继承是动态的，这意味着你可以在运行时更改对象的原型。这种灵活性可以带来很多优势，但也需要小心使用，以避免不必要的复杂性。
`,l:"frontEnd/JavaScript/core/prototype.html#_1-动态性",a:"_1-动态性"},"53.12":{t:"2. 原型链\r",p:`JavaScript 中的继承是通过原型链来实现的，这意味着一个对象可以继承多个原型对象的属性和方法。这种多重继承的能力是传统继承中不常见的。
`,l:"frontEnd/JavaScript/core/prototype.html#_2-原型链",a:"_2-原型链"},"53.13":{t:"3. 对象与类\r",p:`传统面向对象编程语言通常使用类来定义对象的结构和行为，而 JavaScript 使用构造函数和原型对象。这种不同的方式可以导致不同的编程风格和理念。
`,l:"frontEnd/JavaScript/core/prototype.html#_3-对象与类",a:"_3-对象与类"},"53.14":{t:"使用原型的最佳实践\r",p:`在使用原型时，有一些最佳实践可以帮助你编写更清晰、更可维护的代码：
`,l:"frontEnd/JavaScript/core/prototype.html#使用原型的最佳实践",a:"使用原型的最佳实践"},"53.15":{t:"1. 避免直接修改内建对象的原型\r",p:`虽然你可以修改内建对象的原型，但最好不要这样做，因为它可能会导致意外的行为和不稳定性。如果需要扩展内建对象的功能，可以创建一个自定义的工具函数或对象，而不是修改原型。
`,l:"frontEnd/JavaScript/core/prototype.html#_1-避免直接修改内建对象的原型",a:"_1-避免直接修改内建对象的原型"},"53.16":{t:"2. 将方法添加到原型上\r",p:`将方法添加到原型上而不是在构造函数内部定义方法，可以节省内存，因为所有对象实例共享同一个方法。这样可以降低内存使用，特别是当有大量对象实例时。
`,l:"frontEnd/JavaScript/core/prototype.html#_2-将方法添加到原型上",a:"_2-将方法添加到原型上"},"53.17":{t:"3. 注意原型链中的属性和方法覆盖\r",p:`当在子对象上定义与父对象相同名称的属性或方法时，它会覆盖父对象上的属性或方法。因此，在命名属性和方法时要小心，以避免不必要的覆盖。
`,l:"frontEnd/JavaScript/core/prototype.html#_3-注意原型链中的属性和方法覆盖",a:"_3-注意原型链中的属性和方法覆盖"},"53.18":{t:"4. 使用 Object.create()来创建对象\r",p:`Object.create() 方法提供了一种更灵活的方式来创建对象，并指定其原型。它可以帮助你更清晰地定义对象之间的继承关系。
`,l:"frontEnd/JavaScript/core/prototype.html#_4-使用-object-create-来创建对象",a:"_4-使用-object-create-来创建对象"},"54.0":{t:"# 详解数组中的 reduce 方法\r",p:`reduce()是 JavaScript 数组的一个高阶函数，它用于对数组中的元素进行累积操作，将数组缩减为单个值。
通过reduce()方法，我们可以对数组中的每个元素进行自定义的累积运算，最终得到 ...`,l:"frontEnd/JavaScript/core/reduce.html",a:"详解数组中的-reduce-方法"},"54.1":{t:"语法如下\r",p:`array.reduce(callbackfn, initialValue)


callbackfn 是回调函数，它接受四个参数：前一个值（prev）、当前值（currentValue）、当前索引（ ...`,l:"frontEnd/JavaScript/core/reduce.html#语法如下",a:"语法如下"},"54.2":{t:"示例\r",p:"\r",l:"frontEnd/JavaScript/core/reduce.html#示例",a:"示例"},"54.3":{t:"（1）计算数组累积结果\r",p:`
演示如何使用reduce()方法来计算数组中所有元素的和：

const numbers = [1, 2, 3, 4]

const sum = numbers.reduce((prev, cur) ...`,l:"frontEnd/JavaScript/core/reduce.html#_1-计算数组累积结果",a:"_1-计算数组累积结果"},"54.4":{t:"（2）计算数组中每个元素出现的次数\r",p:`var arr = ['one', 'two', 'two', 'three', 'two', 'six', 'four', 'five', 'four', 'six']

var newArr =  ...`,l:"frontEnd/JavaScript/core/reduce.html#_2-计算数组中每个元素出现的次数",a:"_2-计算数组中每个元素出现的次数"},"54.5":{t:"（3）数组去重\r",p:`let arr = [1, 2, 3, 4, 4, 1]
let newArr = arr.reduce((pre, cur) =&gt; {
  if (!pre.includes(cur)) {
 ...`,l:"frontEnd/JavaScript/core/reduce.html#_3-数组去重",a:"_3-数组去重"},"54.6":{t:"（4）数组扁平化 二维转一维\r",p:`let arr = [
  [0, 1],
  [2, 3],
  [4, 5]
]
let newArr = arr.reduce((pre, cur) =&gt; {
  return pre.c ...`,l:"frontEnd/JavaScript/core/reduce.html#_4-数组扁平化-二维转一维",a:"_4-数组扁平化-二维转一维"},"54.7":{t:"（5）数组扁平化 多维转一维\r",p:`let arr = [
  [0, 1],
  [2, 3],
  [4, [5, 6, 7]]
]
const newArr = function (arr) {
  return arr.redu ...`,l:"frontEnd/JavaScript/core/reduce.html#_5-数组扁平化-多维转一维",a:"_5-数组扁平化-多维转一维"},"54.8":{t:"（6）对象属性求和\r",p:`var result = [
  {
    subject: 'math',
    score: 10
  },
  {
    subject: 'chinese',
    score: 20 ...`,l:"frontEnd/JavaScript/core/reduce.html#_6-对象属性求和",a:"_6-对象属性求和"},"54.9":{t:"注意事项\r",p:`::: tip 注意


reduce()方法适用于对数组的每个元素执行同一个累积操作，并将结果返回为单个值的情况。


在使用reduce()方法时，建议始终提供initialValue来明确指定累 ...`,l:"frontEnd/JavaScript/core/reduce.html#注意事项",a:"注意事项"},"55.0":{t:"# JavaScript 作用域\r",p:`作用域是指变量和函数在代码中可访问的范围。JavaScript 中有两种主要的作用域类型：全局作用域和局部作用域。
`,l:"frontEnd/JavaScript/core/scope.html",a:"javascript-作用域"},"55.1":{t:"全局作用域\r",p:`全局作用域是指在代码的任何地方都可访问的变量和函数。在全局作用域中声明的变量和函数可以被代码中的任何地方访问。
var globalVariable = 'Global'

function glob ...`,l:"frontEnd/JavaScript/core/scope.html#全局作用域",a:"全局作用域"},"55.2":{t:"局部作用域\r",p:`局部作用域是指在特定代码块（如函数、循环或条件语句）内部声明的变量和函数。这些变量和函数只能在其声明的代码块内部访问。
function outerFunction() {
  var outerVa ...`,l:"frontEnd/JavaScript/core/scope.html#局部作用域",a:"局部作用域"},"55.3":{t:"作用域链\r",p:"作用域链是指 JavaScript 引擎在查找变量时的嵌套作用域链条。当访问一个变量时，JavaScript 引擎首先在当前作用域的变量对象中查找，如果找不到，就会向上一级作用域继续查找，直到找到该变 ...",l:"frontEnd/JavaScript/core/scope.html#作用域链",a:"作用域链"},"55.4":{t:"词法作用域\r",p:`JavaScript 中的作用域是通过代码的结构和位置来确定的，而不是通过运行时的状态。这被称为词法作用域。函数在定义时就确定了自己的作用域，而不是在调用时。
var variable = 'Glob ...`,l:"frontEnd/JavaScript/core/scope.html#词法作用域",a:"词法作用域"},"56.0":{t:"# DOM 节点\r",p:"\r",l:"frontEnd/JavaScript/DOM/DOM节点.html",a:"dom-节点"},"56.1":{t:"插入节点\r",p:`在已有的 DOM 节点中插入新的 DOM 节点时，需要关注两个关键因素：首先要得到新的 DOM 节点，其次在哪个位置插入这个节点。


createElement 动态创建任意 DOM 节点


cl ...`,l:"frontEnd/JavaScript/DOM/DOM节点.html#插入节点",a:"插入节点"},"56.2":{t:"删除节点\r",p:`删除现有的 DOM 节点，也需要关注两个因素：首先由父节点删除子节点，其次是要删除哪个子节点。
removeChild 删除节点时一定是由父子关系。
&lt;body&gt;
  &lt;!-- 点击 ...`,l:"frontEnd/JavaScript/DOM/DOM节点.html#删除节点",a:"删除节点"},"56.3":{t:"查找节点\r",p:`DOM 树中的任意节点都不是孤立存在的，它们要么是父子关系，要么是兄弟关系，不仅如此，我们可以依据节点之间的关系查找节点。
`,l:"frontEnd/JavaScript/DOM/DOM节点.html#查找节点",a:"查找节点"},"56.4":{t:"父子关系\r",p:`
childNodes 获取全部的子节点，回车换行会被认为是空白文本节点
children 只获取元素类型节点

&lt;body&gt;
  &lt;button class=&quot;btn1& ...`,l:"frontEnd/JavaScript/DOM/DOM节点.html#父子关系",a:"父子关系"},"56.5":{t:"兄弟关系\r",p:`
previousSibling 获取前一个节点，以相对位置查找节点，实际应用中非常灵活。
nextSibling 获取后一个节点，以相对位置查找节点，实际应用中非常灵活。

&lt;body&gt; ...`,l:"frontEnd/JavaScript/DOM/DOM节点.html#兄弟关系",a:"兄弟关系"},"57.0":{t:"# JavaScript DOM\r",p:"\r",l:"frontEnd/JavaScript/DOM/index.html",a:"javascript-dom"},"57.1":{t:"概念\r",p:"DOM（Document Object Model）是一种用于表示和操作 HTML、XML 等文档结构的编程接口。它将文档表示为一个树状结构，每个节点都是文档中的一个元素、属性、文本或其他类型的内容。 ...",l:"frontEnd/JavaScript/DOM/index.html#概念",a:"概念"},"57.2":{t:"DOM 树\r",p:`&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF ...`,l:"frontEnd/JavaScript/DOM/index.html#dom-树",a:"dom-树"},"57.3":{t:"DOM 节点\r",p:`节点是文档树的组成部分，每一个节点都是一个 DOM 对象，主要分为元素节点、属性节点、文本节点等。

【元素节点】其实就是 HTML 标签，如上图中 head、div、body 等都属于元素节点。
【 ...`,l:"frontEnd/JavaScript/DOM/index.html#dom-节点",a:"dom-节点"},"57.4":{t:"document\r",p:`document 是 JavaScript 内置的专门用于 DOM 的对象，该对象包含了若干的属性和方法，document 是学习 DOM 的核心。


::: tip
DOM 提供了丰富的功能和方法 ...`,l:"frontEnd/JavaScript/DOM/index.html#document",a:"document"},"58.0":{t:"# DOM 事件处理\r",p:`DOM 事件处理是 JavaScript 中常用的一项功能，它允许你监听和响应用户与网页元素之间的交互。下面是一些常见的方法和技巧来处理 DOM 事件：
`,l:"frontEnd/JavaScript/DOM/事件处理.html",a:"dom-事件处理"},"58.1":{t:"事件\r",p:`事件是编程语言中的术语，它是用来描述程序的行为或状态的，一旦行为或状态发生改变，便立即调用一个函数。
例如：用户使用【鼠标点击】网页中的一个按钮、用户使用【鼠标拖拽】网页中的一张图片
`,l:"frontEnd/JavaScript/DOM/事件处理.html#事件",a:"事件"},"58.2":{t:"事件监听\r",p:`::: tip
结合 DOM 使用事件时，需要为 DOM 对象添加事件监听，等待事件发生（触发）时，便立即调用一个函数。
addEventListener 是 DOM 对象专门用来添加事件监听的方法， ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#事件监听",a:"事件监听"},"58.3":{t:"事件移除\r",p:`当我们不再需要一个事件监听器时，应该将其从元素上移除，以避免不必要的事件处理。可以使用以下方法来移除事件监听器：
element.removeEventListener('eventName', ev ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#事件移除",a:"事件移除"},"58.4":{t:"事件类型\r",p:"\r",l:"frontEnd/JavaScript/DOM/事件处理.html#事件类型",a:"事件类型"},"58.5":{t:"鼠标事件\r",p:`鼠标事件是指跟鼠标操作相关的事件，如单击、双击、移动等。



事件名
作用




click
当用户点击鼠标左键时触发。


dblclick
当用户双击鼠标左键时触发。


mousedown
 ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#鼠标事件",a:"鼠标事件"},"58.6":{t:"键盘事件\r",p:`const input = document.querySelector('input')
// 1. 键盘事件
// input.addEventListener('keydown', functi ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#键盘事件",a:"键盘事件"},"58.7":{t:"焦点事件\r",p:`const input = document.querySelector('input')
input.addEventListener('focus', function () {
  consol ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#焦点事件",a:"焦点事件"},"58.8":{t:"文本框输入事件\r",p:`
input 事件：当用户在文本框中输入、删除或修改文本时触发。无论是键盘输入、粘贴、剪切还是使用其他输入方法，只要文本框内容发生变化，就会触发 input 事件。
change 事件：当文本框内容发 ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#文本框输入事件",a:"文本框输入事件"},"58.9":{t:"事件对象\r",p:`
事件处理程序的第一个参数是事件对象 event，它包含有关事件的信息，例如事件类型、目标元素等。你可以在事件处理程序中使用这些信息来执行逻辑操作。

const btn = document.que ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#事件对象",a:"事件对象"},"58.10":{t:"事件冒泡和事件捕获\r",p:`
事件冒泡：默认情况下，事件会从触发它的元素向上冒泡到祖先元素。你可以使用 event.stopPropagation() 方法来停止事件冒泡。

&lt;body&gt;
  &lt;h3&gt;事 ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#事件冒泡和事件捕获",a:"事件冒泡和事件捕获"},"58.11":{t:"常见事件类型\r",p:`以下是一些常见的 DOM 事件类型：


鼠标事件：click、mouseover、mouseout、mousemove 等。


键盘事件：keyup、keydown、keypress 等。


表 ...`,l:"frontEnd/JavaScript/DOM/事件处理.html#常见事件类型",a:"常见事件类型"},"58.12":{t:"事件委托\r",p:"JavaScript 事件委托是一种利用事件冒泡原理来简化事件处理的技术。通过将事件监听器绑定到一个父元素上，然后利用事件冒泡机制，从父元素中捕获和处理子元素触发的事件。这样可以减少事件处理程序的数量 ...",l:"frontEnd/JavaScript/DOM/事件处理.html#事件委托",a:"事件委托"},"59.0":{t:"# DOM 创建和操作元素\r",p:`
createElement(): 创建新的元素节点。
appendChild(): 将一个节点添加为另一个节点的子节点。
removeChild(): 删除指定的子节点。
setAttribute( ...`,l:"frontEnd/JavaScript/DOM/创建和操作元素.html",a:"dom-创建和操作元素"},"59.1":{t:"创建元素\r",p:`使用 createElement 方法创建新元素：
const newElement = document.createElement('tagName')

其中 tagName 是你想要创建的元素 ...`,l:"frontEnd/JavaScript/DOM/创建和操作元素.html#创建元素",a:"创建元素"},"59.2":{t:"设置元素属性和内容\r",p:`设置元素的属性：使用 setAttribute 方法：
element.setAttribute('attributeName', 'attributeValue')

设置元素的文本内容：使用 te ...`,l:"frontEnd/JavaScript/DOM/创建和操作元素.html#设置元素属性和内容",a:"设置元素属性和内容"},"59.3":{t:"操作元素的父子关系\r",p:`将新元素添加到父元素中：使用 appendChild 方法：
parentElement.appendChild(newElement)

这将把 newElement 添加为 parentEleme ...`,l:"frontEnd/JavaScript/DOM/创建和操作元素.html#操作元素的父子关系",a:"操作元素的父子关系"},"60.0":{t:"# DOM 样式和类操作\r",p:`在 JavaScript 中，可以使用 DOM（文档对象模型）来操作元素的样式和类。以下是一些常用的方法和技巧：
`,l:"frontEnd/JavaScript/DOM/样式和类操作.html",a:"dom-样式和类操作"},"60.1":{t:"样式操作\r",p:`

修改元素的内联样式：使用 style 对象来访问和修改元素的样式属性。
element.style.backgroundColor = 'red'

这里的 backgroundColor 是你要 ...`,l:"frontEnd/JavaScript/DOM/样式和类操作.html#样式操作",a:"样式操作"},"60.2":{t:"类操作\r",p:`

添加类名：使用 classList 属性的 add 方法。
element.classList.add('className')



移除类名：使用 classList 属性的 remove 方 ...`,l:"frontEnd/JavaScript/DOM/样式和类操作.html#类操作",a:"类操作"},"61.0":{t:"# DOM 获取和修改元素\r",p:`
getElementById(): 根据元素的 ID 获取元素节点。
getElementsByClassName(): 根据类名获取元素节点集合。
getElementsByTagName():  ...`,l:"frontEnd/JavaScript/DOM/获取和修改元素.html",a:"dom-获取和修改元素"},"61.1":{t:"获取元素\r",p:`通过 ID 获取元素：使用 getElementById 方法，传入元素的 ID。
const element = document.getElementById('elementId')

通过类名 ...`,l:"frontEnd/JavaScript/DOM/获取和修改元素.html#获取元素",a:"获取元素"},"61.2":{t:"修改元素\r",p:`修改元素的文本内容：使用 textContent 属性或 innerText 属性。
element.textContent = 'New content'

// 或者
element.innerT ...`,l:"frontEnd/JavaScript/DOM/获取和修改元素.html#修改元素",a:"修改元素"},"62.0":{t:"# JavaScript Cookie\r",p:"Cookie 是一种在客户端浏览器上存储数据的机制，允许开发者在用户计算机中存储和检索有关网站的信息。Cookie 是由服务器发送到浏览器的小型文本文件，然后浏览器会将 Cookie 存储在用户的计算 ...",l:"frontEnd/JavaScript/storage/cookie.html",a:"javascript-cookie"},"62.1":{t:"设置 Cookie\r",p:`可以使用 document.cookie 属性来设置 Cookie。document.cookie 属性是一个字符串，包含一个或多个以分号分隔的键值对。
document.cookie = 'user ...`,l:"frontEnd/JavaScript/storage/cookie.html#设置-cookie",a:"设置-cookie"},"62.2":{t:"获取 Cookie\r",p:`可以使用 document.cookie 属性来获取存储在浏览器中的所有 Cookie。
var cookies = document.cookie
console.log(cookies)

doc ...`,l:"frontEnd/JavaScript/storage/cookie.html#获取-cookie",a:"获取-cookie"},"62.3":{t:"删除 Cookie\r",p:`可以通过将 Cookie 的过期时间设置为过去的时间来删除 Cookie。
document.cookie = 'username=; expires=Thu, 01 Jan 1970 00:00:0 ...`,l:"frontEnd/JavaScript/storage/cookie.html#删除-cookie",a:"删除-cookie"},"62.4":{t:"注意事项\r",p:`

每个域名下的 Cookie 是相互独立的，不同域名之间的 Cookie 是隔离的。


document.cookie 返回的是一个字符串，包含当前域名下的所有 Cookie。需要自行解析和处理字 ...`,l:"frontEnd/JavaScript/storage/cookie.html#注意事项",a:"注意事项"},"63.0":{t:"# JavaScript localStorage\r",p:"localStorage 是 Web Storage API 提供的一种本地存储机制，允许开发者在浏览器中存储和检索持久化的键值对数据。与 sessionStorage 不同，localStorage ...",l:"frontEnd/JavaScript/storage/localStorage.html",a:"javascript-localstorage"},"63.1":{t:"存储数据\r",p:"可以使用 localStorage.setItem(key, value) 方法将数据存储到 localStorage 中。其中，key 是要存储的数据的键，value 是对应的值。存储的值必须是字符 ...",l:"frontEnd/JavaScript/storage/localStorage.html#存储数据",a:"存储数据"},"63.2":{t:"获取数据\r",p:`可以使用 localStorage.getItem(key) 方法根据键从 localStorage 中检索数据。如果键不存在，返回 null。
var username = localStorage ...`,l:"frontEnd/JavaScript/storage/localStorage.html#获取数据",a:"获取数据"},"63.3":{t:"更新数据\r",p:`可以通过重新设置相同的键来更新 localStorage 中的数据。
localStorage.setItem('age', '26')

`,l:"frontEnd/JavaScript/storage/localStorage.html#更新数据",a:"更新数据"},"63.4":{t:"删除数据\r",p:`可以使用 localStorage.removeItem(key) 方法来删除指定键的数据。
localStorage.removeItem('age')

`,l:"frontEnd/JavaScript/storage/localStorage.html#删除数据",a:"删除数据"},"63.5":{t:"清除所有数据\r",p:`可以使用 localStorage.clear() 方法来删除 localStorage 中的所有数据。
localStorage.clear()

`,l:"frontEnd/JavaScript/storage/localStorage.html#清除所有数据",a:"清除所有数据"},"63.6":{t:"注意事项\r",p:`
localStorage 存储的值必须是字符串类型。如果需要存储其他数据类型（如对象或数组），可以使用 JSON.stringify() 方法将其转换为字符串存储，然后在需要时使用 JSON.par ...`,l:"frontEnd/JavaScript/storage/localStorage.html#注意事项",a:"注意事项"},"64.0":{t:"# JavaScript sessionStorage\r",p:"sessionStorage 是 Web Storage API 提供的一种本地存储机制，允许开发者在浏览器中存储和检索会话级别的键值对数据。与 localStorage 不同，sessionStor ...",l:"frontEnd/JavaScript/storage/sessionStorage.html",a:"javascript-sessionstorage"},"64.1":{t:"存储数据\r",p:"可以使用 sessionStorage.setItem(key, value) 方法将数据存储到 sessionStorage 中。其中，key 是要存储的数据的键，value 是对应的值。存储的值必 ...",l:"frontEnd/JavaScript/storage/sessionStorage.html#存储数据",a:"存储数据"},"64.2":{t:"获取数据\r",p:`可以使用 sessionStorage.getItem(key) 方法根据键从 sessionStorage 中检索数据。如果键不存在，返回 null。
var username = sessionS ...`,l:"frontEnd/JavaScript/storage/sessionStorage.html#获取数据",a:"获取数据"},"64.3":{t:"更新数据\r",p:`可以通过重新设置相同的键来更新 sessionStorage 中的数据。
sessionStorage.setItem('age', '26')

`,l:"frontEnd/JavaScript/storage/sessionStorage.html#更新数据",a:"更新数据"},"64.4":{t:"删除数据\r",p:`可以使用 sessionStorage.removeItem(key) 方法来删除指定键的数据。
sessionStorage.removeItem('age')

`,l:"frontEnd/JavaScript/storage/sessionStorage.html#删除数据",a:"删除数据"},"64.5":{t:"清除所有数据\r",p:`可以使用 sessionStorage.clear() 方法来删除 sessionStorage 中的所有数据。
sessionStorage.clear()

`,l:"frontEnd/JavaScript/storage/sessionStorage.html#清除所有数据",a:"清除所有数据"},"64.6":{t:"注意事项\r",p:`
sessionStorage 存储的值必须是字符串类型。如果需要存储其他数据类型（如对象或数组），可以使用 JSON.stringify() 方法将其转换为字符串存储，然后在需要时使用 JSON.p ...`,l:"frontEnd/JavaScript/storage/sessionStorage.html#注意事项",a:"注意事项"},"65.0":{t:"# 内置对象 Date\r",p:"\r",l:"frontEnd/JavaScript/内置对象/Date.html",a:"内置对象-date"},"65.1":{t:"Date 方法\r",p:`


方法
描述




getDate()
获取日期（月份中的日期），返回值为 1 到 31 之间的整数。


getDay()
获取星期几，返回值为 0（表示星期日）到 6（表示星期六）之间的整数 ...`,l:"frontEnd/JavaScript/内置对象/Date.html#date-方法",a:"date-方法"},"65.2":{t:"创建日期\r",p:`Date 对象用于处理日期和时间。
可以通过 new 关键词来定义 Date 对象。以下代码定义了名为 myDate 的 Date 对象：
有四种方式初始化日期:
new Date();
new Da ...`,l:"frontEnd/JavaScript/内置对象/Date.html#创建日期",a:"创建日期"},"65.3":{t:"设置日期\r",p:`通过使用针对日期对象的方法，我们可以很容易地对日期进行操作。
在下面的例子中，我们为日期对象设置了一个特定的日期 (2050 年 1 月 10 日)：
var myDate = new Date()
 ...`,l:"frontEnd/JavaScript/内置对象/Date.html#设置日期",a:"设置日期"},"65.4":{t:"时间戳\r",p:`时间戳是指 1970 年 01 月 01 日 00 时 00 分 00 秒起至现在的总秒数或毫秒数，它是一种特殊的计量时间的方式。

注：ECMAScript 中时间戳是以毫秒计的。

获取时间戳的方 ...`,l:"frontEnd/JavaScript/内置对象/Date.html#时间戳",a:"时间戳"},"65.5":{t:"两个日期比较\r",p:`var x = new Date()
x.setFullYear(2100, 0, 14)
var today = new Date()

if (x &gt; today) {
  alert('今 ...`,l:"frontEnd/JavaScript/内置对象/Date.html#两个日期比较",a:"两个日期比较"},"66.0":{t:"# JavaScript 内置对象\r",p:`内置对象：就是指这个语言自带的一些对象，供开发者使用，这些对象提供了一些常用或者基本而必要的功能（属性和方法），用于处理各种不同类型的数据和操作。
::: tip 简介
JavaScript 的内置对 ...`,l:"frontEnd/JavaScript/内置对象/index.html",a:"javascript-内置对象"},"66.1":{t:"JavaScript 的内置对象：\r",p:`


内置对象
对象说明




Object
基础对象


Array
数组


String
字符串对象


Number
数值对象


Boolean
布尔对象


Date
日期时间


Ma ...`,l:"frontEnd/JavaScript/内置对象/index.html#javascript-的内置对象",a:"javascript-的内置对象"},"66.2":{t:"Object\r",p:`Object 是 JavaScript 的基础对象，其他对象都继承自它。Object 提供了一系列通用的方法，如对象的创建、属性的设置和获取等。它是构建其他对象的基石。
`,l:"frontEnd/JavaScript/内置对象/index.html#object",a:"object"},"66.3":{t:"Array\r",p:`Array 是用于表示和操作数组的对象。它提供了一系列的方法来操作和处理数据集合，如添加、删除、查询、排序等。Array 的灵活性使得它在处理列表和集合数据时非常便利。
`,l:"frontEnd/JavaScript/内置对象/index.html#array",a:"array"},"66.4":{t:"String\r",p:`String 是用于表示和操作字符串的对象。它提供了许多字符串相关的方法，如拼接、查找、替换等。这些方法可以帮助我们处理文本数据，进行字符串操作和处理。
`,l:"frontEnd/JavaScript/内置对象/index.html#string",a:"string"},"66.5":{t:"Number\r",p:`Number 是用于表示和操作数字的对象。它提供了一系列数字相关的方法，如四舍五入、转换为字符串、计算等。Number 可以进行基本的数学计算，还可以用于日期和时间处理。
`,l:"frontEnd/JavaScript/内置对象/index.html#number",a:"number"},"66.6":{t:"Boolean\r",p:`Boolean 是表示和操作布尔值的对象，包括 true 和 false 两个值。它提供了逻辑运算和条件判断的功能，用于控制流程和决策。
`,l:"frontEnd/JavaScript/内置对象/index.html#boolean",a:"boolean"},"66.7":{t:"Date\r",p:`Date 是用于表示日期和时间的对象。它提供了一系列的方法来操作日期和时间，如获取当前时间、设置时间、格式化等。Date 可以用于处理时间相关的任务，如计算时间差、添加或减去日期等。
`,l:"frontEnd/JavaScript/内置对象/index.html#date",a:"date"},"66.8":{t:"Math\r",p:`Math 是用于进行数学计算的对象。它提供了一系列数学运算方法，如求绝对值、计算平方根、生成随机数等。Math 可以用于复杂的数值计算和处理。
`,l:"frontEnd/JavaScript/内置对象/index.html#math",a:"math"},"66.9":{t:"RegExp\r",p:`RegExp 是用于进行正则表达式匹配的对象。它提供了一系列与正则表达式相关的方法，如匹配、替换等。RegExp 可以用于文本匹配、分割、替换等复杂的文本处理任务。
除了上述常用的内置对象外，还有一些 ...`,l:"frontEnd/JavaScript/内置对象/index.html#regexp",a:"regexp"},"67.0":{t:"# 内置对象 Math\r",p:"Math是JavaScript的一个内置对象，它提供了一些数学属性和方法，可以对数字进行计算（用于 Number 类型）。 Math和其他全局对象不同，它不是一个构造器，Math的所有方法和属性都是静 ...",l:"frontEnd/JavaScript/内置对象/Math.html",a:"内置对象-math"},"67.1":{t:"属性\r",p:`
Math.PI，获取圆周率

// 圆周率
console.log(Math.PI)

`,l:"frontEnd/JavaScript/内置对象/Math.html#属性",a:"属性"},"67.2":{t:"方法\r",p:"\r",l:"frontEnd/JavaScript/内置对象/Math.html#方法",a:"方法"},"67.3":{t:"Math.abs()\r",p:`Math.abs()函数，返回一个数的绝对值
Math.abs(-10)
// 10

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-abs",a:"math-abs"},"67.4":{t:"Math.random()\r",p:`Math.random()函数，返回一个浮点，伪随机数范围从 0 到小于 1，从 0 往上不包括 1。
// 0 ~ 1 之间的随机数, 包含 0 不包含 1
Math.random()

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-random",a:"math-random"},"67.5":{t:"Math.ceil()\r",p:`Math.ceil()函数，返回大于或等于一个给定数的最小整数。
// 舍弃小数部分，整数部分加1
Math.ceil(3.4)

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-ceil",a:"math-ceil"},"67.6":{t:"Math.floor()\r",p:`Math.floor()方法，返回小于或等于一个给定数字的最大整数
// 舍弃小数部分，整数部分不变
Math.floor(4.68)

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-floor",a:"math-floor"},"67.7":{t:"Math.round()\r",p:`Math.round()，返回的是一个数字四舍五入的整数。
// 取整，四舍五入原则
Math.round(5.46539)
Math.round(4.849)

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-round",a:"math-round"},"67.8":{t:"Math.min()\r",p:`Math.min()方法，是可以返回指定一组数据中最小值。
// 找出最小值
Math.min(24, 18, 6, 19, 21)

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-min",a:"math-min"},"67.9":{t:"Math.max()\r",p:`Math.max()方法，是可以返回指定一组数据中最大值。
// 找出最大值
Math.max(10, 21, 7, 24, 13)

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-max",a:"math-max"},"67.10":{t:"Math.pow()\r",p:`Math.pow()方法，返回基数(base)的指数(exponent)次幂。
// 求某个数的多少次方
Math.pow(4, 2) // 求 4 的 2 次方
Math.pow(2, 3) //  ...`,l:"frontEnd/JavaScript/内置对象/Math.html#math-pow",a:"math-pow"},"67.11":{t:"Math.sqrt()\r",p:`Math.sqrt()方法，返回的是一个数的平方根。
// 求某数的平方根
Math.sqrt(16) // 4

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-sqrt",a:"math-sqrt"},"67.12":{t:"Math.sin()\r",p:`Math.sin()函数，返回一个值的正弦值。
Math.sin((90 Math.PI) / 180)
// 1

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-sin",a:"math-sin"},"67.13":{t:"Math.cos()\r",p:`Math.cos()函数，返回一个值的余弦值。
Math.cos((360 Math.PI) / 180) // 1

Math.cos(0) // 1

`,l:"frontEnd/JavaScript/内置对象/Math.html#math-cos",a:"math-cos"},"67.14":{t:"Math.trunc()\r",p:`Math.trunc()函数，返回的是一个数的整数部分，不管正数还是负数，直接去掉小数点及之后的部分。
Math.trunc(13.37)
// 13
Math.trunc(42.84)
// 42
 ...`,l:"frontEnd/JavaScript/内置对象/Math.html#math-trunc",a:"math-trunc"},"68.0":{t:"# 内置对象 Number\r",p:"\r",l:"frontEnd/JavaScript/内置对象/Number.html",a:"内置对象-number"},"68.1":{t:"属性\r",p:`
Number.MAX_VALUE：表示 JavaScript 中能表示的最大数值，约为 1.79 × 10^308。
Number.MIN_VALUE：表示 JavaScript 中能表示的最小正数 ...`,l:"frontEnd/JavaScript/内置对象/Number.html#属性",a:"属性"},"68.2":{t:"方法\r",p:`

Number.isNaN(num)：判断给定的值是否为NaN（非数值）。如果是NaN，则返回true，否则返回false。


Number.isFinite(num)：判断给定的值是否为有限数值 ...`,l:"frontEnd/JavaScript/内置对象/Number.html#方法",a:"方法"},"69.0":{t:"# 内置对象 RegExp\r",p:"\r",l:"frontEnd/JavaScript/内置对象/RegExp.html",a:"内置对象-regexp"},"69.1":{t:"什么是 RegExp？\r",p:"RegExp（正则表达式）是一种用于匹配和操作字符串模式的强大工具。它是一种模式匹配的语法，可以用来搜索、替换和提取字符串中的特定部分。在 JavaScript 中，RegExp 是一个内置的对象类型 ...",l:"frontEnd/JavaScript/内置对象/RegExp.html#什么是-regexp",a:"什么是-regexp"},"69.2":{t:"正则表达式基础语法\r",p:`在 JavaScript 中，正则表达式可以使用字面量形式或构造函数形式来创建。
`,l:"frontEnd/JavaScript/内置对象/RegExp.html#正则表达式基础语法",a:"正则表达式基础语法"},"69.3":{t:"字面量形式\r",p:`使用斜杠（/）将正则表达式模式包围起来，后面可以跟上一些修饰符（如 g、i、m）。
const pattern = /abc/

`,l:"frontEnd/JavaScript/内置对象/RegExp.html#字面量形式",a:"字面量形式"},"69.4":{t:"构造函数形式\r",p:`使用 RegExp 构造函数创建正则表达式，它接收两个参数：模式字符串和可选的修饰符字符串。
const pattern = new RegExp('abc')

`,l:"frontEnd/JavaScript/内置对象/RegExp.html#构造函数形式",a:"构造函数形式"},"69.5":{t:"元字符\r",p:`
.：匹配除换行符之外的任何单个字符。
^：匹配字符串的开头。
$：匹配字符串的结尾。
\\*：匹配前面的元素零次或多次。
+：匹配前面的元素一次或多次。
?：匹配前面的元素零次或一次。
[]：定义字符 ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#元字符",a:"元字符"},"69.6":{t:"正则表达式修饰符\r",p:`修饰符用于在正则表达式中添加额外的规则，影响匹配的行为。以下是常用的修饰符：

g：全局匹配，找到所有匹配项而不仅仅是第一个。
i：不区分大小写匹配。
m：多行匹配，允许 ^ 和 $ 来匹配字符串的开 ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#正则表达式修饰符",a:"正则表达式修饰符"},"69.7":{t:"常用的正则表达式模式\r",p:`以下是一些常用的正则表达式模式示例：

匹配字母或数字字符：/[a-zA-Z0-9]/
匹配多个字母或数字字符：/[a-zA-Z0-9]+/
匹配数字：/\\d/
匹配非数字：/\\D/
匹配空格字符：/ ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#常用的正则表达式模式",a:"常用的正则表达式模式"},"69.8":{t:"正则表达式方法\r",p:`JavaScript 的字符串对象提供了一些与正则表达式相关的方法来执行匹配、搜索和替换操作。
以下是一些常用的方法：

match()：在字符串中搜索匹配正则表达式的结果，并返回一个数组或 null ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#正则表达式方法",a:"正则表达式方法"},"69.9":{t:"正则表达式的分组和捕获\r",p:`正则表达式还支持使用圆括号进行分组和捕获。通过使用圆括号将模式的一部分括起来，可以创建子模式，并将匹配到的子串捕获到一个分组中。
以下是一些常用的分组和捕获的示例：

使用括号进行分组：(abc)+  ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#正则表达式的分组和捕获",a:"正则表达式的分组和捕获"},"69.10":{t:"正则表达式标志\r",p:`除了修饰符外，JavaScript 正则表达式还支持标志（Flags），用于提供更多的匹配选项。
以下是常用的正则表达式标志：

g：全局匹配，找到所有匹配项而不仅仅是第一个。
i：不区分大小写匹配。 ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#正则表达式标志",a:"正则表达式标志"},"69.11":{t:"应用场景\r",p:`正则表达式在 JavaScript 中具有广泛的应用场景，例如：

表单验证：使用正则表达式验证用户输入的表单数据，如邮箱、电话号码、密码等。
字符串替换：使用正则表达式进行文本替换、格式化或删除特定 ...`,l:"frontEnd/JavaScript/内置对象/RegExp.html#应用场景",a:"应用场景"},"70.0":{t:"# 继承、封装和多态\r",p:"\r",l:"frontEnd/JavaScript/面向对象/char.html",a:"继承、封装和多态"},"70.1":{t:"继承（Inheritance）：\r",p:`继承是一种对象间的关系，它允许一个对象（称为子类或派生类）继承另一个对象（称为父类或基类）的属性和方法。子类继承了父类的特性，可以通过继承来复用代码，减少重复编写。
在 JavaScript 中，可以 ...`,l:"frontEnd/JavaScript/面向对象/char.html#继承-inheritance",a:"继承-inheritance"},"70.2":{t:"封装（Encapsulation）：\r",p:`封装是一种将数据和方法包裹在一个单一实体中的概念，使得外部无法直接访问对象的内部实现细节。这样的设计有助于隐藏对象的复杂性，只暴露必要的接口，提高代码的可维护性和安全性。
在 JavaScript 中 ...`,l:"frontEnd/JavaScript/面向对象/char.html#封装-encapsulation",a:"封装-encapsulation"},"70.3":{t:"多态（Polymorphism）：\r",p:`多态是一种允许不同对象对同一方法做出不同响应的特性。这意味着可以使用相同的方法名，但针对不同对象实现不同的行为。多态有助于实现代码的灵活性和可扩展性。
在 JavaScript 中，由于其动态类型特性 ...`,l:"frontEnd/JavaScript/面向对象/char.html#多态-polymorphism",a:"多态-polymorphism"},"71.0":{t:"# 类和构造函数\r",p:"在 JavaScript 中，类是一种用于创建对象的模板或蓝图，而构造函数是用于创建类的实例的特殊函数。它们是面向对象编程的两种不同方式，但在 ES6（ECMAScript 6）之后，JavaScri ...",l:"frontEnd/JavaScript/面向对象/class.html",a:"类和构造函数"},"71.1":{t:"构造函数\r",p:"在 ES5 及其之前的版本中，JavaScript 使用构造函数来创建对象。构造函数本质上是一个普通的函数，但通常使用new关键字来实例化对象。构造函数内部使用this关键字来引用新创建的对象，并定义 ...",l:"frontEnd/JavaScript/面向对象/class.html#构造函数",a:"构造函数"},"71.2":{t:"类\r",p:`在 ES6 及以上的版本中，JavaScript 引入了class关键字，使得类的定义更加简洁明了。类定义了对象的结构和行为，而对象则是类的实例。类的方法在原型上定义，因此实例共享相同的方法。
示例： ...`,l:"frontEnd/JavaScript/面向对象/class.html#类",a:"类"},"72.0":{t:"# JavaScript 面向对象\r",p:"\r",l:"frontEnd/JavaScript/面向对象/index.html",a:"javascript-面向对象"},"72.1":{t:"是什么？\r",p:`JavaScript 面向对象是一种编程范式，其中程序被组织为一组对象，每个对象都有自己的状态和行为。在面向对象编程中，对象是数据和操作数据的方法的封装单元，它们通过相互之间的交互来完成特定的任务。
`,l:"frontEnd/JavaScript/面向对象/index.html#是什么",a:"是什么"},"72.2":{t:"特点：\r",p:`

对象： 对象是面向对象编程的核心概念。对象是一个复合的数据类型，它可以包含属性（也称为数据成员）和方法（也称为函数成员）。


类： 类是对象的模板或蓝图，它定义了对象将具有的属性和方法。类是一种 ...`,l:"frontEnd/JavaScript/面向对象/index.html#特点",a:"特点"},"73.0":{t:"# 实例对象与方法\r",p:"\r",l:"frontEnd/JavaScript/面向对象/new.html",a:"实例对象与方法"},"73.1":{t:"创建对象\r",p:"\r",l:"frontEnd/JavaScript/面向对象/new.html#创建对象",a:"创建对象"},"73.2":{t:"利用 `new Object` 创建对象\r",p:`var person = new Person()
person.name = '张三'
person.age = 18
person.sex = '男'
person.sayHi = functio ...`,l:"frontEnd/JavaScript/面向对象/new.html#利用-new-object-创建对象",a:"利用-new-object-创建对象"},"73.3":{t:"利用字面量创建对象\r",p:`var person = {
  name: '张三',
  age: 18,
  sex: '男',
  sayHi: function () {
    alert('大家好啊~')
  }
}
 ...`,l:"frontEnd/JavaScript/面向对象/new.html#利用字面量创建对象",a:"利用字面量创建对象"},"73.4":{t:"利用构造函数创建对象\r",p:`构造函数：是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 运算符一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。
::: tip 注意
 ...`,l:"frontEnd/JavaScript/面向对象/new.html#利用构造函数创建对象",a:"利用构造函数创建对象"},"73.5":{t:"常用方法\r",p:`
Object.assign(target, …sources)：复制一个或多个对象的属性到目标对象。
Object.create(proto, [propertiesObject])：创建一个新对象 ...`,l:"frontEnd/JavaScript/面向对象/new.html#常用方法",a:"常用方法"},"73.6":{t:"Object.assign(target, …sources)\r",p:`const obj1 = { a: 1 }
const obj2 = { b: 2 }
const obj3 = { c: 3 }
const mergedObj = Object.assign(ob ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-assign-target-sources",a:"object-assign-target-sources"},"73.7":{t:"Object.create(proto, [propertiesObject])\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(newObj.greet ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-create-proto-propertiesobject",a:"object-create-proto-propertiesobject"},"73.8":{t:"Object.entries(obj)\r",p:`const obj = { a: 1, b: 2, c: 3 }
const entries = Object.entries(obj)
console.log(entries) // [[&quot ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-entries-obj",a:"object-entries-obj"},"73.9":{t:"Object.freeze(obj)\r",p:`const obj = { name: 'John' }

`,l:"frontEnd/JavaScript/面向对象/new.html#object-freeze-obj",a:"object-freeze-obj"},"73.10":{t:"Object.freeze(obj)\r",p:`obj.name = 'Jane' // 修改无效，不会影响原对象
console.log(obj.name) // John

`,l:"frontEnd/JavaScript/面向对象/new.html#object-freeze-obj",a:"object-freeze-obj"},"73.11":{t:"Object.getOwnPropertyDescriptor(obj, prop)\r",p:`const obj = { name: 'John' }
const descriptor = Object.getOwnPropertyDescriptor(obj, 'name')
console ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-getownpropertydescriptor-obj-prop",a:"object-getownpropertydescriptor-obj-prop"},"73.12":{t:"Object.getOwnPropertyNames(obj)\r",p:`const obj = { name: 'John', age: 30 }
const propNames = Object.getOwnPropertyNames(obj)
console.log( ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-getownpropertynames-obj",a:"object-getownpropertynames-obj"},"73.13":{t:"Object.getOwnPropertySymbols(obj)\r",p:`const sym = Symbol('mySymbol')
const obj = { [sym]: 'value' }
const symbols = Object.getOwnPropertyS ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-getownpropertysymbols-obj",a:"object-getownpropertysymbols-obj"},"73.14":{t:"Object.getPrototypeOf(obj)\r",p:`const myProto = { greeting: 'Hello' }
const newObj = Object.create(myProto)
console.log(Object.getPr ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"73.15":{t:"Object.is(value1, value2)\r",p:`console.log(Object.is(5, 5)) // true
console.log(Object.is(0, -0)) // false
console.log(Object.is(Na ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-is-value1-value2",a:"object-is-value1-value2"},"73.16":{t:"Object.keys(obj)\r",p:`const obj = { name: 'John', age: 30 }
const keys = Object.keys(obj)
console.log(keys) // [&quot;name ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-keys-obj",a:"object-keys-obj"},"73.17":{t:"Object.seal(obj)\r",p:`const obj = { name: 'John' }

`,l:"frontEnd/JavaScript/面向对象/new.html#object-seal-obj",a:"object-seal-obj"},"73.18":{t:"Object.seal(obj)\r",p:`obj.age = 30 // 添加属性无效，不会影响原对象
delete obj.name // 删除属性无效，不会影响原对象
console.log(obj.name) // John
conso ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-seal-obj",a:"object-seal-obj"},"73.19":{t:"Object.values(obj)\r",p:`const obj = { name: 'John', age: 30 }
const values = Object.values(obj)
console.log(values) // [&quo ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-values-obj",a:"object-values-obj"},"73.20":{t:"Object.hasOwnProperty(prop)\r",p:`const obj = { name: 'John' }
console.log(obj.hasOwnProperty('name')) // true
console.log(obj.hasOwnP ...`,l:"frontEnd/JavaScript/面向对象/new.html#object-hasownproperty-prop",a:"object-hasownproperty-prop"},"74.0":{t:"# JavaScript 原型和原型链\r",p:`
JavaScript 原型和原型链是面向对象编程中的重要概念，用于实现继承和共享属性和方法。

`,l:"frontEnd/JavaScript/面向对象/prototype.html",a:"javascript-原型和原型链"},"74.1":{t:"原型（Prototype）\r",p:"在 JavaScript 中，每个对象都有一个特殊的属性__proto__（在 ES6 及以上版本中，可以使用Object.getPrototypeOf()来访问原型），它指向该对象的原型对象。原型对 ...",l:"frontEnd/JavaScript/面向对象/prototype.html#原型-prototype",a:"原型-prototype"},"74.2":{t:"原型链（Prototype Chain）\r",p:"原型链是由对象的原型对象构成的链式结构。当我们访问对象的属性或方法时，如果对象本身没有找到，则会继续在原型链上查找，直到找到为止。原型链的最终节点是Object.prototype，它是所有对象的根原 ...",l:"frontEnd/JavaScript/面向对象/prototype.html#原型链-prototype-chain",a:"原型链-prototype-chain"},"74.3":{t:"使用原型的好处\r",p:`

共享属性和方法： 原型允许多个对象共享相同的属性和方法，这样可以节省内存空间。


继承： 通过原型链，我们可以实现继承，子对象可以继承父对象的属性和方法。


动态更新： 原型上的属性和方法是动 ...`,l:"frontEnd/JavaScript/面向对象/prototype.html#使用原型的好处",a:"使用原型的好处"},"74.4":{t:"注意事项\r",p:`
尽量避免直接修改原型对象，以免对其他对象产生意外的影响。
使用Object.create()和Object.setPrototypeOf()等方法来设置对象的原型，而不是直接修改__proto__属 ...`,l:"frontEnd/JavaScript/面向对象/prototype.html#注意事项",a:"注意事项"},"75.0":{t:"# JavaScript 严格模式\r",p:"JavaScript 严格模式（Strict Mode）是一种在 JavaScript 中启用更严格解析和错误处理的模式。它旨在帮助开发者编写更安全、规范、优化和可靠的代码，并避免一些常见的错误。严格 ...",l:"frontEnd/JavaScript/面向对象/strict.html",a:"javascript-严格模式"},"76.0":{t:"# this 关键字\r",p:"\r",l:"frontEnd/JavaScript/面向对象/this.html",a:"this-关键字"},"76.1":{t:"执行期上下文\r",p:`当函数执行时（准确来说，是在函数发生预编译的前一刻），会创建一个执行期上下文的内部对象。一个执行期上下文定义了一个函数执行时的环境。
每调用一次函数，就会创建一个新的上下文对象，他们之间是相互独立且独 ...`,l:"frontEnd/JavaScript/面向对象/this.html#执行期上下文",a:"执行期上下文"},"76.2":{t:"this 指向\r",p:`解析器在调用函数每次都会向函数内部传递进一个隐含的参数，这个隐含的参数就是 this，this 指向的是一个对象，这个对象我们称为函数执行的 上下文对象。
`,l:"frontEnd/JavaScript/面向对象/this.html#this-指向",a:"this-指向"},"76.3":{t:"ES5 函数内 this 的指向【非常重要】\r",p:`在 ES5 语法中，根据函数的调用方式的不同，this 会指向不同的对象：

1、以函数的形式（包括普通函数、定时器函数、立即执行函数）调用时，this 的指向永远都是 window。比如fun(); ...`,l:"frontEnd/JavaScript/面向对象/this.html#es5-函数内-this-的指向【非常重要】",a:"es5-函数内-this-的指向【非常重要】"},"76.4":{t:"ES6 箭头函数中 this 的指向\r",p:`ES6 中的箭头函数并不使用上面的准则，而是会继承外层函数调用的 this 绑定（无论 this 绑定到什么）。
var obj = {
  foo: function () {
    var ar ...`,l:"frontEnd/JavaScript/面向对象/this.html#es6-箭头函数中-this-的指向",a:"es6-箭头函数中-this-的指向"},"76.5":{t:"改变函数内部的 this 指向\r",p:`JS 专门为我们提供了一些方法来改变函数内部的 this 指向。常见的方法有 call()、apply()、bind() 方法。
`,l:"frontEnd/JavaScript/面向对象/this.html#改变函数内部的-this-指向",a:"改变函数内部的-this-指向"},"76.6":{t:"call()\r",p:"\r",l:"frontEnd/JavaScript/面向对象/this.html#call",a:"call"},"76.7":{t:"call() 方法的作用\r",p:`call() 方法的作用：可以调用一个函数，与此同时，它还可以改变这个函数内部的 this 指向。
call() 方法的另一个应用：可以实现继承。之所以能实现继承，其实是利用了上面的作用。
语法：
f ...`,l:"frontEnd/JavaScript/面向对象/this.html#call-方法的作用",a:"call-方法的作用"},"76.8":{t:"call() 方法举例\r",p:`举例 1、通过 call() 调用函数：
const obj1 = {
  nickName: 'zhangsan',
  age: 28
}
function fn1() {
  console.l ...`,l:"frontEnd/JavaScript/面向对象/this.html#call-方法举例",a:"call-方法举例"},"76.9":{t:"apply() 方法\r",p:"\r",l:"frontEnd/JavaScript/面向对象/this.html#apply-方法",a:"apply-方法"},"76.10":{t:"apply() 方法的作用\r",p:`apply() 方法的作用：可以调用一个函数，与此同时，它还可以改变这个函数内部的 this 指向。这一点，和 call()类似。
apply() 方法的应用： 由于 apply()需要传递数组，所以 ...`,l:"frontEnd/JavaScript/面向对象/this.html#apply-方法的作用",a:"apply-方法的作用"},"76.11":{t:"apply() 方法举例\r",p:`举例、通过 apply() 改变 this 指向：
var obj1 = {
  nickName: 'zhangsan',
  age: 28
}

function fn1(a) {
  cons ...`,l:"frontEnd/JavaScript/面向对象/this.html#apply-方法举例",a:"apply-方法举例"},"76.12":{t:"apply() 方法的巧妙应用：求数组的最大值\r",p:`我们知道，如果想要求数组中元素的最大值，数组本身是没有自带方法的。那怎么办呢？
虽然数组里没有获取最大值的方法，但是数值里有 Math.max(数字1，数字2，数字3) 方法，可以获取多个数值中的最大 ...`,l:"frontEnd/JavaScript/面向对象/this.html#apply-方法的巧妙应用-求数组的最大值",a:"apply-方法的巧妙应用-求数组的最大值"},"76.13":{t:"bind() 方法\r",p:"\r",l:"frontEnd/JavaScript/面向对象/this.html#bind-方法",a:"bind-方法"},"76.14":{t:"bind() 方法的作用\r",p:`bind() 方法不会调用函数，但是可以改变函数内部的 this 指向。
把 call()、apply()、bind()这三个方法做一下对比，你会发现：实际开发中， bind() 方法使用得最为频繁。 ...`,l:"frontEnd/JavaScript/面向对象/this.html#bind-方法的作用",a:"bind-方法的作用"},"77.0":{t:"# React - 用于构建现代 Web 应用程序的 JavaScript 库\r",p:`
官方网址

`,l:"frontEnd/react/index.html",a:"react-用于构建现代-web-应用程序的-javascript-库"},"77.1":{t:"简介\r",p:"React 是由 Facebook 开源的 JavaScript 库，用于构建用户界面。它专注于构建高性能、可维护且可复用的 UI 组件，使开发者能够轻松构建交互性的用户界面。React 是单向数据流 ...",l:"frontEnd/react/index.html#简介",a:"简介"},"77.2":{t:"React 的特点\r",p:"\r",l:"frontEnd/react/index.html#react-的特点",a:"react-的特点"},"77.3":{t:"1. 组件化开发\r",p:"React 引入了组件化开发的概念，将复杂的用户界面划分为独立的组件，每个组件具有自己的状态和行为。这种组件化的开发模式使得代码更易于维护、复用和测试。开发者可以将大型应用程序拆分为小的、独立的组件， ...",l:"frontEnd/react/index.html#_1-组件化开发",a:"_1-组件化开发"},"77.4":{t:"2. 虚拟 DOM\r",p:"React 采用了虚拟 DOM 技术，它在内存中维护了一个虚拟的 DOM 树，用于表示真实 DOM 的结构。当组件的状态发生变化时，React 会通过比较新旧虚拟 DOM 树的差异，找出需要更新的部分 ...",l:"frontEnd/react/index.html#_2-虚拟-dom",a:"_2-虚拟-dom"},"77.5":{t:"3. 单向数据流\r",p:"React 采用了单向数据流的数据管理模式，即数据只能从父组件流向子组件，子组件无法直接修改父组件的数据。这种单向数据流的模式使得数据流动更加可控，减少了数据的混乱和不一致，从而提高了应用程序的可维护 ...",l:"frontEnd/react/index.html#_3-单向数据流",a:"_3-单向数据流"},"77.6":{t:"4. 生态系统丰富\r",p:"React 拥有一个庞大的生态系统，有众多优秀的第三方库和工具，可以帮助开发者更高效地构建 Web 应用程序。比如 React Router 用于实现前端路由，Redux 用于管理应用程序的状态，Ax ...",l:"frontEnd/react/index.html#_4-生态系统丰富",a:"_4-生态系统丰富"},"77.7":{t:"核心概念\r",p:`在学习 React 时，我们需要掌握以下几个核心概念：
`,l:"frontEnd/react/index.html#核心概念",a:"核心概念"},"77.8":{t:"1. 组件（Components）\r",p:"组件是 React 中最重要的概念之一，它是构建用户界面的基本单元。每个组件封装了特定的功能和状态，可以在其他组件中重复使用。组件可以是函数组件或类组件，函数组件是一种简单的声明式组件，类组件具有更多 ...",l:"frontEnd/react/index.html#_1-组件-components",a:"_1-组件-components"},"77.9":{t:"2. JSX（JavaScript XML）\r",p:"JSX 是一种类似 HTML 的语法扩展，允许在 JavaScript 代码中编写类似 HTML 的标记。通过 JSX，我们可以以一种更直观的方式描述组件的结构和样式，使得代码更易读和理解。在 Rea ...",l:"frontEnd/react/index.html#_2-jsx-javascript-xml",a:"_2-jsx-javascript-xml"},"77.10":{t:"3. Props（属性）\r",p:"Props 是 React 中用于组件之间通信的机制。通过 props，父组件可以向子组件传递数据或方法。这种单向数据流的机制使得 React 组件更加可预测和易于维护。在子组件中，我们可以通过 pr ...",l:"frontEnd/react/index.html#_3-props-属性",a:"_3-props-属性"},"77.11":{t:"4. State（状态）\r",p:"State 是 React 组件内部管理的可变数据。当组件的状态发生变化时，React 会自动重新渲染组件以反映最新的状态。状态是类组件中的一个特殊对象，可以通过 this.state 来访问和更新。 ...",l:"frontEnd/react/index.html#_4-state-状态",a:"_4-state-状态"},"77.12":{t:"5. 生命周期\r",p:"React 组件具有不同的生命周期阶段，包括组件的挂载、更新和卸载阶段。在这些生命周期方法中，我们可以执行特定的操作，如初始化组件、发送网络请求、清理资源等。生命周期方法允许我们在组件不同阶段执行相应 ...",l:"frontEnd/react/index.html#_5-生命周期",a:"_5-生命周期"},"77.13":{t:"6. 事件处理\r",p:"React 允许处理用户的交互事件，如点击、输入等，并对其进行响应。通过事件处理函数，我们可以执行特定的操作，如更新组件的状态、发送网络请求、处理用户输入等。在 React 中，事件处理和原生 DOM ...",l:"frontEnd/react/index.html#_6-事件处理",a:"_6-事件处理"},"77.14":{t:"7. 条件渲染\r",p:`条件渲染是根据条件来决定是否渲染组件或显示不同的内容。通过条件语句（如 if 和三元表达式）来控制组件的渲染逻辑。条件渲染使得我们可以根据不同的情况展示不同的 UI，实现动态和灵活的界面展示。
`,l:"frontEnd/react/index.html#_7-条件渲染",a:"_7-条件渲染"},"77.15":{t:"8. 列表渲染\r",p:"在 React 中，我们可以使用 map 方法遍历数组，并将数组的每个元素渲染成相应的组件。列表渲染允许动态地渲染多个相同类型的组件，实现列表展示的功能。通过列表渲染，我们可以轻松地展示数据列表，如商 ...",l:"frontEnd/react/index.html#_8-列表渲染",a:"_8-列表渲染"},"77.16":{t:"9. 表单处理\r",p:"处理用户输入的表单数据是常见的任务。在 React 中，我们可以通过对表单元素的事件监听和状态更新，来收集用户的输入并实时更新组件的状态。React 提供了一些方便的组件来处理表单数据，如 input ...",l:"frontEnd/react/index.html#_9-表单处理",a:"_9-表单处理"},"77.17":{t:"10. 状态提升\r",p:`状态提升是一种在 React 中共享状态的技术，允许将共享的状态提升到共同的父组件，实现组件之间的数据共享。通过状态提升，我们可以在多个组件之间共享数据和状态，并保持数据的一致性和同步性。
`,l:"frontEnd/react/index.html#_10-状态提升",a:"_10-状态提升"},"77.18":{t:"11. 高阶组件（HOC）\r",p:"高阶组件是一个函数，用于在 React 中实现组件的复用逻辑。HOC 可以增强组件的功能，使得代码更具可复用性和灵活性。通过 HOC，我们可以将通用的逻辑封装成函数，然后将该函数应用到多个组件中，从而 ...",l:"frontEnd/react/index.html#_11-高阶组件-hoc",a:"_11-高阶组件-hoc"},"77.19":{t:"12. 上下文（Context）\r",p:"React 的上下文允许在组件树中共享数据，而不必通过 props 一层层传递。上下文提供了一种便捷的方式来在组件之间共享数据，尤其对于跨多层级的组件共享数据非常有用。然而，上下文的使用需要谨慎，避免 ...",l:"frontEnd/react/index.html#_12-上下文-context",a:"_12-上下文-context"},"77.20":{t:"13. Hooks\r",p:"Hooks 是 React 16.8 引入的新特性，用于在函数组件中添加状态、副作用和其他 React 特性。通过 Hooks，我们可以在函数组件中使用类组件的功能，如状态管理、生命周期方法等，从而使 ...",l:"frontEnd/react/index.html#_13-hooks",a:"_13-hooks"},"77.21":{t:"React 环境搭建\r",p:`利用 React 来写一个 Hello World
`,l:"frontEnd/react/index.html#react-环境搭建",a:"react-环境搭建"},"77.22":{t:"react.js 和 react-dom.js\r",p:`为了通过 React 写一个 Hello World 程序，我们需要先安装几个包：


react.js: React 的核心库。这个包，是专门用来创建 React 组件、组件生命周期等。


rea ...`,l:"frontEnd/react/index.html#react-js-和-react-dom-js",a:"react-js-和-react-dom-js"},"77.23":{t:"方式一：本地引入相关的 js 库\r",p:`入门的时候，我们建议采取方式一。
如果是本地引入的话，可以这样写：
&lt;!-- 引入React相关的js库 --&gt;




如果是通过 CDN 的方式引入的话，可以使用网站 https:// ...`,l:"frontEnd/react/index.html#方式一-本地引入相关的-js-库",a:"方式一-本地引入相关的-js-库"},"77.24":{t:"方式二：脚手架\r",p:`
使用 vite 创建， 选择 React

npm init vite@latest

main.jsx:
import React from 'react'
import ReactDOM fro ...`,l:"frontEnd/react/index.html#方式二-脚手架",a:"方式二-脚手架"},"78.0":{t:"# React JSX 语法 - 构建动态 UI 的魔法\r",p:"\r",l:"frontEnd/react/JSX.html",a:"react-jsx-语法-构建动态-ui-的魔法"},"78.1":{t:"简介\r",p:"JSX（JavaScript XML）是 React 的一种特殊语法扩展，它允许我们在 JavaScript 代码中编写类似于 HTML 的标记，从而使得构建动态 UI 变得更加直观和简洁。JSX 在 ...",l:"frontEnd/react/JSX.html#简介",a:"简介"},"78.2":{t:"JSX 原理\r",p:"JSX 并不是直接由浏览器理解的语法，而是通过 Babel 等工具进行转换后，再变成普通的 JavaScript 代码。这个转换过程将 JSX 转换为React.createElement()函数的调 ...",l:"frontEnd/react/JSX.html#jsx-原理",a:"jsx-原理"},"78.3":{t:"基本语法规则\r",p:"\r",l:"frontEnd/react/JSX.html#基本语法规则",a:"基本语法规则"},"78.4":{t:"1. 标签\r",p:`在 JSX 中，我们可以像写 HTML 标签一样写 React 组件的标签。标签可以是 HTML 标签，也可以是自定义的 React 组件。
const element = &lt;div&gt;JS ...`,l:"frontEnd/react/JSX.html#_1-标签",a:"_1-标签"},"78.5":{t:"2. 属性\r",p:`在 JSX 中，可以通过属性来传递数据给组件。属性的写法与 HTML 标签类似，使用key=value的形式。
const element = &lt;input type=&quot;text&qu ...`,l:"frontEnd/react/JSX.html#_2-属性",a:"_2-属性"},"78.6":{t:"3. 嵌套\r",p:`JSX 支持标签的嵌套，可以将多个标签组合在一起形成复杂的 UI 结构。
const element = (
  &lt;div&gt;
    &lt;h1&gt;JSX Syntax&lt;/h1 ...`,l:"frontEnd/react/JSX.html#_3-嵌套",a:"_3-嵌套"},"78.7":{t:"4. 表达式\r",p:`在 JSX 中，可以在大括号内使用 JavaScript 表达式。这样可以在 UI 中插入动态的内容。
const name = 'John'
const element = &lt;p&gt;Hel ...`,l:"frontEnd/react/JSX.html#_4-表达式",a:"_4-表达式"},"78.8":{t:"5. 注释\r",p:`JSX 支持在大括号内使用 JavaScript 注释。
const element = (
  &lt;div&gt;
    {/This is a comment/}
    &lt;h1&gt ...`,l:"frontEnd/react/JSX.html#_5-注释",a:"_5-注释"},"78.9":{t:"JSX 中的组件化开发\r",p:"JSX 在 React 中的最大价值在于支持组件化开发。通过组件化开发，我们可以将 UI 拆分成独立的、可复用的组件，从而使得代码结构更加清晰和易于维护。组件是 React 中最基本的概念之一，也是构 ...",l:"frontEnd/react/JSX.html#jsx-中的组件化开发",a:"jsx-中的组件化开发"},"78.10":{t:"函数组件\r",p:`函数组件是一种简单的声明式组件，它是一个纯函数，接受一个 props 对象作为参数，并返回一个描述 UI 的 React 元素。
function Welcome(props) {
  return  ...`,l:"frontEnd/react/JSX.html#函数组件",a:"函数组件"},"78.11":{t:"类组件\r",p:`类组件是一种功能更强大的组件，它是一个 ES6 类，继承自React.Component，并且具有状态和生命周期方法。
class Welcome extends React.Component {
 ...`,l:"frontEnd/react/JSX.html#类组件",a:"类组件"},"78.12":{t:"组件的使用\r",p:`使用组件时，我们可以像使用 HTML 标签一样使用组件的标签。将属性传递给组件，可以在组件中获取这些属性并进行相应的渲染。
const element = &lt;Welcome name=&quot ...`,l:"frontEnd/react/JSX.html#组件的使用",a:"组件的使用"},"78.13":{t:"JSX 中的条件渲染\r",p:`JSX 支持条件渲染，即根据条件来决定是否渲染组件或显示不同的内容。可以使用 JavaScript 的条件语句（如 if 和三元表达式）来控制组件的渲染逻辑。
`,l:"frontEnd/react/JSX.html#jsx-中的条件渲染",a:"jsx-中的条件渲染"},"78.14":{t:"使用 if 语句\r",p:`function Greeting(props) {
  if (props.isLoggedIn) {
    return &lt;h1&gt;Welcome back!&lt;/h1&gt;
  ...`,l:"frontEnd/react/JSX.html#使用-if-语句",a:"使用-if-语句"},"78.15":{t:"使用三元表达式\r",p:`function Greeting(props) {
  return props.isLoggedIn ? &lt;h1&gt;Welcome back!&lt;/h1&gt; : &lt;h1&g ...`,l:"frontEnd/react/JSX.html#使用三元表达式",a:"使用三元表达式"},"78.16":{t:"JSX 中的列表渲染\r",p:`在 React 中，我们经常需要渲染数据列表，比如商品列表、评论列表等。JSX 提供了方便的方式来实现列表渲染。
`,l:"frontEnd/react/JSX.html#jsx-中的列表渲染",a:"jsx-中的列表渲染"},"78.17":{t:"使用 map 方法\r",p:`function ProductList(props) {
  const products = props.products
  return (
    &lt;ul&gt;
      {pro ...`,l:"frontEnd/react/JSX.html#使用-map-方法",a:"使用-map-方法"},"78.18":{t:"JSX 中的表单处理\r",p:`处理用户输入的表单数据是 Web 应用程序中的常见任务。在 React 中，我们可以通过对表单元素的事件监听和状态更新，来收集用户的输入并实时更新组件的状态。
class FormExample ex ...`,l:"frontEnd/react/JSX.html#jsx-中的表单处理",a:"jsx-中的表单处理"},"78.19":{t:"JSX 中的状态提升\r",p:`状态提升是一种在 React 中共享状态的技术，允许将共享的状态提升到共同的父组件，实现组件之间的数据共享。
function TemperatureConverter() {
  const [ce ...`,l:"frontEnd/react/JSX.html#jsx-中的状态提升",a:"jsx-中的状态提升"},"78.20":{t:"JSX 中的高阶组件（HOC）\r",p:`高阶组件（HOC）是一种在 React 中实现组件的复用逻辑的技术。HOC 是一个函数，接受一个组件作为参数，并返回一个新的组件。
function withLogger(WrappedCompone ...`,l:"frontEnd/react/JSX.html#jsx-中的高阶组件-hoc",a:"jsx-中的高阶组件-hoc"},"78.21":{t:"JSX 中的上下文（Context）\r",p:`React 的上下文允许在组件树中共享数据，而不必通过 props 一层层传递。上下文提供了一种便捷的方式来在组件之间共享数据，尤其对于跨多层级的组件共享数据非常有用。
const ThemeCont ...`,l:"frontEnd/react/JSX.html#jsx-中的上下文-context",a:"jsx-中的上下文-context"},"78.22":{t:"JSX 中的 Hooks\r",p:`Hooks 是 React 16.8 引入的新特性，用于在函数组件中添加状态、副作用和其他 React 特性。通过 Hooks，我们可以在函数组件中使用类组件的功能，如状态管理、生命周期方法等。
fu ...`,l:"frontEnd/react/JSX.html#jsx-中的-hooks",a:"jsx-中的-hooks"},"79.0":{t:"# React 组件 — 生命周期\r",p:"React 生命周期是指组件在不同阶段经历的一系列方法调用，这些方法允许我们在特定时间点执行代码，控制组件的行为，并进行必要的操作。理解 React 生命周期对于优化性能、处理副作用以及在开发过程中更 ...",l:"frontEnd/react/lifecycle.html",a:"react-组件-—-生命周期"},"79.1":{t:"生命周期阶段\r",p:`React 生命周期可以分为三个阶段：组件创建、组件更新和组件销毁。


组件创建阶段：

constructor：组件被创建时调用，用于初始化状态和绑定方法。
static getDerivedSt ...`,l:"frontEnd/react/lifecycle.html#生命周期阶段",a:"生命周期阶段"},"79.2":{t:"组件创建阶段\r",p:"\r",l:"frontEnd/react/lifecycle.html#组件创建阶段",a:"组件创建阶段"},"79.3":{t:"constructor\r",p:`constructor 是组件创建阶段的第一个方法，它在组件实例被创建时调用。在 constructor 中，我们可以初始化组件的状态（state）和绑定方法。
class MyComponent e ...`,l:"frontEnd/react/lifecycle.html#constructor",a:"constructor"},"79.4":{t:"static getDerivedStateFromProps\r",p:"static getDerivedStateFromProps 是组件创建和更新阶段的一个静态方法，在组件每次渲染之前都会被调用。它接收 props 和 state 作为参数，并返回一个对象来更新 s ...",l:"frontEnd/react/lifecycle.html#static-getderivedstatefromprops",a:"static-getderivedstatefromprops"},"79.5":{t:"render\r",p:`render 是组件创建阶段的第三个方法，它用于渲染组件的内容。在 render 方法中，我们应该返回一个 React 元素，用于描述组件的 UI 结构。
class MyComponent exte ...`,l:"frontEnd/react/lifecycle.html#render",a:"render"},"79.6":{t:"componentDidMount\r",p:"componentDidMount 是组件创建阶段的最后一个方法，它在组件挂载到 DOM 后调用。在 componentDidMount 中，我们可以进行一些副作用操作，比如发送网络请求、订阅事件、操 ...",l:"frontEnd/react/lifecycle.html#componentdidmount",a:"componentdidmount"},"79.7":{t:"组件更新阶段\r",p:"\r",l:"frontEnd/react/lifecycle.html#组件更新阶段",a:"组件更新阶段"},"79.8":{t:"static getDerivedStateFromProps\r",p:`在组件更新阶段，static getDerivedStateFromProps 的作用和在组件创建阶段是一样的，用于根据 props 更新 state。
class MyComponent exten ...`,l:"frontEnd/react/lifecycle.html#static-getderivedstatefromprops",a:"static-getderivedstatefromprops"},"79.9":{t:"shouldComponentUpdate\r",p:"shouldComponentUpdate 是组件更新阶段的第二个方法，它在组件更新之前调用。在 shouldComponentUpdate 中，我们可以根据新的 props 或 state 判断是否 ...",l:"frontEnd/react/lifecycle.html#shouldcomponentupdate",a:"shouldcomponentupdate"},"79.10":{t:"getSnapshotBeforeUpdate\r",p:"getSnapshotBeforeUpdate 是组件更新阶段的第四个方法，它在 render 之后、更新之前调用。它接收 prevProps 和 prevState 作为参数，并返回一个值，该值将作 ...",l:"frontEnd/react/lifecycle.html#getsnapshotbeforeupdate",a:"getsnapshotbeforeupdate"},"79.11":{t:"componentDidUpdate\r",p:"componentDidUpdate 是组件更新阶段的最后一个方法，它在组件更新之后调用。在 componentDidUpdate 中，我们可以进行一些副作用操作，比如发送网络请求、订阅事件、操作 D ...",l:"frontEnd/react/lifecycle.html#componentdidupdate",a:"componentdidupdate"},"79.12":{t:"组件销毁阶段\r",p:"\r",l:"frontEnd/react/lifecycle.html#组件销毁阶段",a:"组件销毁阶段"},"79.13":{t:"componentWillUnmount\r",p:"componentWillUnmount 是组件销毁阶段的唯一一个方法，在组件即将被销毁时调用。在 componentWillUnmount 中，我们应该进行一些清理操作，比如取消订阅、清除定时器、释 ...",l:"frontEnd/react/lifecycle.html#componentwillunmount",a:"componentwillunmount"},"80.0":{t:"# React Props（属性）\r",p:"在 React 中，组件是构建用户界面的基本单位。每个组件可以接收外部传入的数据，这些数据被称为 Props（属性）。Props 允许我们向组件传递信息，使组件能够根据外部数据的变化进行渲染和展示不同 ...",l:"frontEnd/react/props.html",a:"react-props-属性"},"80.1":{t:"什么是 Props？\r",p:"Props 是 React 中用于向组件传递数据的一种机制。它是“Properties”的缩写，意为属性。每个 React 组件都可以通过 Props 接收数据，这些数据可以来自组件的父组件或者外部环 ...",l:"frontEnd/react/props.html#什么是-props",a:"什么是-props"},"80.2":{t:"Props 的使用\r",p:"\r",l:"frontEnd/react/props.html#props-的使用",a:"props-的使用"},"80.3":{t:"1. 传递 Props\r",p:`在父组件中，可以通过在子组件上设置属性来传递 Props。例如：
// 父组件
class ParentComponent extends React.Component {
  render() { ...`,l:"frontEnd/react/props.html#_1-传递-props",a:"_1-传递-props"},"80.4":{t:"2. 默认 Props\r",p:`有时候，我们希望在未传递某个 Props 时，组件能够使用一个默认值。这时可以通过设置组件的 defaultProps 来实现。
class MyComponent extends React.Com ...`,l:"frontEnd/react/props.html#_2-默认-props",a:"_2-默认-props"},"80.5":{t:"3. 使用解构赋值简化 Props\r",p:`在组件中访问 Props 时，可以使用解构赋值来简化代码。
class MyComponent extends React.Component {
  render() {
    const { n ...`,l:"frontEnd/react/props.html#_3-使用解构赋值简化-props",a:"_3-使用解构赋值简化-props"},"80.6":{t:"Props 的值类型\r",p:`Props 可以接收各种类型的数据，包括字符串、数字、布尔值、数组、对象等。React 组件会根据传递的 Props 的值类型进行相应的渲染。
`,l:"frontEnd/react/props.html#props-的值类型",a:"props-的值类型"},"80.7":{t:"1. 字符串类型\r",p:`class MyComponent extends React.Component {
  render() {
    return &lt;p&gt;Hello, {this.props.name ...`,l:"frontEnd/react/props.html#_1-字符串类型",a:"_1-字符串类型"},"80.8":{t:"2. 数字类型\r",p:`class MyComponent extends React.Component {
  render() {
    return &lt;p&gt;Age: {this.props.age}&l ...`,l:"frontEnd/react/props.html#_2-数字类型",a:"_2-数字类型"},"80.9":{t:"3. 布尔值类型\r",p:`class MyComponent extends React.Component {
  render() {
    return &lt;p&gt;Is Active: {this.props. ...`,l:"frontEnd/react/props.html#_3-布尔值类型",a:"_3-布尔值类型"},"80.10":{t:"4. 数组类型\r",p:`class MyComponent extends React.Component {
  render() {
    return (
      &lt;ul&gt;
        {this ...`,l:"frontEnd/react/props.html#_4-数组类型",a:"_4-数组类型"},"80.11":{t:"5. 对象类型\r",p:`class MyComponent extends React.Component {
  render() {
    return (
      &lt;div&gt;
        &lt; ...`,l:"frontEnd/react/props.html#_5-对象类型",a:"_5-对象类型"},"80.12":{t:"Props 的传递规则\r",p:`在 React 中，Props 的传递是自上而下的，即数据只能从父组件传递到子组件，而不能从子组件传递到父组件或者兄弟组件之间传递。这样的设计有助于保持组件之间的独立性和可预测性。
`,l:"frontEnd/react/props.html#props-的传递规则",a:"props-的传递规则"},"80.13":{t:"Props 的不可变性\r",p:`在 React 中，Props 是只读的，组件本身无法修改 Props 的值。这样的设计有助于维护组件的数据流向，避免对 Props 进行意外的修改，从而使组件行为更加可预测和稳定。
`,l:"frontEnd/react/props.html#props-的不可变性",a:"props-的不可变性"},"80.14":{t:"Props 验证\r",p:"为了确保组件接收到正确的 Props，我们可以使用 PropTypes 来对 Props 进行验证。PropTypes 是 React 提供的一种机制，用于对组件的 Props 进行类型检查。在开发过 ...",l:"frontEnd/react/props.html#props-验证",a:"props-验证"},"80.15":{t:"默认 Props\r",p:`有时候，我们希望在未传递某个 Props 时，组件能够使用一个默认值。这时可以通过设置组件的 defaultProps 来实现。
import PropTypes from 'prop-types'
 ...`,l:"frontEnd/react/props.html#默认-props",a:"默认-props"},"81.0":{t:"# React 路由 - 实现单页应用的导航\r",p:"\r",l:"frontEnd/react/router.html",a:"react-路由-实现单页应用的导航"},"81.1":{t:"什么是 React 路由？\r",p:"React 路由是指在 React 应用中实现页面之间导航的技术。它允许我们在单页应用中切换不同的页面视图，而无需重新加载整个页面。相比传统多页应用，单页应用（Single Page Applicat ...",l:"frontEnd/react/router.html#什么是-react-路由",a:"什么是-react-路由"},"81.2":{t:"React Router 的基本概念\r",p:"\r",l:"frontEnd/react/router.html#react-router-的基本概念",a:"react-router-的基本概念"},"81.3":{t:"1. 路由\r",p:`路由是 React Router 中的核心概念之一。它表示一个特定的 URL 路径和对应的页面组件。当用户访问该路径时，React Router 会渲染对应的页面组件。
React Router 使用 ...`,l:"frontEnd/react/router.html#_1-路由",a:"_1-路由"},"81.4":{t:"2. 嵌套路由\r",p:`嵌套路由是指在一个页面组件中嵌套另一个页面组件，并且这些页面组件具有各自的 URL 路径。
React Router 允许我们在一个页面组件中使用嵌套的 &lt;Route&gt; 组件，从而实现页面 ...`,l:"frontEnd/react/router.html#_2-嵌套路由",a:"_2-嵌套路由"},"81.5":{t:"3. 路由参数\r",p:`路由参数允许我们在 URL 路径中传递参数，并将参数传递给页面组件进行处理。例如，我们可以通过路由参数在 URL 中传递一个特定的 ID，然后在页面组件中根据 ID 加载对应的数据。
React Ro ...`,l:"frontEnd/react/router.html#_3-路由参数",a:"_3-路由参数"},"81.6":{t:"4. 路由链接\r",p:`路由链接是用于在页面中生成导航链接的组件。它允许用户点击链接来切换不同的页面视图，而无需进行页面的完全刷新。
React Router 提供了 &lt;Link&gt; 组件来创建路由链接，通过 to ...`,l:"frontEnd/react/router.html#_4-路由链接",a:"_4-路由链接"},"81.7":{t:"5. 编程式导航\r",p:`除了使用路由链接进行页面导航外，还可以通过编程式导航的方式实现页面切换。编程式导航允许我们在组件中使用 JavaScript 来手动触发页面的切换。
React Router 提供了 history  ...`,l:"frontEnd/react/router.html#_5-编程式导航",a:"_5-编程式导航"},"81.8":{t:"安装 React Router\r",p:`要开始使用 React Router，首先需要在项目中安装 React Router 的依赖。可以使用 npm 或 yarn 进行安装：
npm install react-router-dom

或 ...`,l:"frontEnd/react/router.html#安装-react-router",a:"安装-react-router"},"81.9":{t:"使用 React Router\r",p:`一旦安装了 React Router 的依赖，我们就可以在项目中开始使用它了。以下是使用 React Router 实现导航的基本步骤：
`,l:"frontEnd/react/router.html#使用-react-router",a:"使用-react-router"},"81.10":{t:"1. 创建路由组件\r",p:`首先，我们需要创建几个页面组件，它们将用于显示不同的页面视图。在 React 中，每个页面都是一个独立的组件，可以使用函数组件或类组件来定义。
// Home.js
import React from ...`,l:"frontEnd/react/router.html#_1-创建路由组件",a:"_1-创建路由组件"},"81.11":{t:"2. 定义路由\r",p:`接下来，我们需要在应用中定义路由。可以在顶层组件（通常是 App.js）中使用 &lt;Route&gt; 组件来定义路由。
// App.js
import React from 'react'
i ...`,l:"frontEnd/react/router.html#_2-定义路由",a:"_2-定义路由"},"81.12":{t:"3. 渲染页面\r",p:`最后，在顶层组件中渲染 &lt;Route&gt; 组件，从而实现页面导航。
// index.js
import React from 'react'
import ReactDOM from 'r ...`,l:"frontEnd/react/router.html#_3-渲染页面",a:"_3-渲染页面"},"81.13":{t:"嵌套路由\r",p:`有时候，我们希望在一个页面中显示其他页面的内容，这就需要使用嵌套路由。React Router 允许我们在一个页面组件中定义嵌套的 &lt;Route&gt; 组件。
// App.js
import ...`,l:"frontEnd/react/router.html#嵌套路由",a:"嵌套路由"},"81.14":{t:"路由参数\r",p:`在实际开发中，我们经常需要从 URL 中获取参数来加载不同的数据或进行页面的定向。React Router 允许我们在 URL 路径中定义参数，并将参数传递给页面组件。
// App.js
impor ...`,l:"frontEnd/react/router.html#路由参数",a:"路由参数"},"81.15":{t:"路由链接和导航\r",p:`React Router 提供了 &lt;Link&gt; 组件和编程式导航来实现页面之间的导航。
// App.js
import React from 'react'
import { Brows ...`,l:"frontEnd/react/router.html#路由链接和导航",a:"路由链接和导航"},"82.0":{t:"# React State（状态）\r",p:"在 React 中，State（状态）是组件用于存储和管理可变数据的一种机制。State 允许我们在组件内部保存数据，并在数据发生变化时重新渲染组件。通过使用 State，我们可以创建交互性和动态性的 ...",l:"frontEnd/react/state.html",a:"react-state-状态"},"82.1":{t:"什么是 State？\r",p:"在 React 中，State 是组件内部的一种特殊变量，用于存储组件的可变数据。每个 React 组件都可以拥有自己的 State，并在需要时对其进行更新。State 是 React 组件的一部分， ...",l:"frontEnd/react/state.html#什么是-state",a:"什么是-state"},"82.2":{t:"State 的使用\r",p:"\r",l:"frontEnd/react/state.html#state-的使用",a:"state-的使用"},"82.3":{t:"1. 初始化 State\r",p:`在 React 中，通常在组件的构造函数中初始化 State。可以通过this.state属性来定义组件的 State。
class MyComponent extends React.Compone ...`,l:"frontEnd/react/state.html#_1-初始化-state",a:"_1-初始化-state"},"82.4":{t:"2. 更新 State\r",p:`要更新 State 的值，可以使用this.setState()方法。这样做的原因是为了确保组件在更新 State 后能够重新渲染，并显示更新后的数据。
class MyComponent exten ...`,l:"frontEnd/react/state.html#_2-更新-state",a:"_2-更新-state"},"82.5":{t:"3. 异步更新 State\r",p:"需要注意的是，this.setState()方法是异步的。这意味着在调用this.setState()后，并不会立即更新 State 的值，而是会放入一个更新队列中，等待 React 合并更新后再进行 ...",l:"frontEnd/react/state.html#_3-异步更新-state",a:"_3-异步更新-state"},"82.6":{t:"State 的不可变性\r",p:"在 React 中，State 是不可变的，意味着我们不应该直接修改 State 的值。如果直接修改 State 的值，React 无法检测到 State 的变化，并进行重新渲染。为了正确地更新 St ...",l:"frontEnd/react/state.html#state-的不可变性",a:"state-的不可变性"},"82.7":{t:"State 的传递\r",p:"在 React 中，State 通常是在组件的父组件中定义的，并通过 Props 传递给子组件。这样的设计有助于保持组件之间的独立性和可预测性。当 State 需要在多个组件中共享时，可以将 Stat ...",l:"frontEnd/react/state.html#state-的传递",a:"state-的传递"},"83.0":{t:"# React 列表渲染\r",p:`在 React 中，列表渲染是一种常见的技术，用于动态地生成列表元素。列表渲染使我们能够根据数据数组来动态生成多个相似的元素，并将它们渲染到用户界面上。
`,l:"frontEnd/react/列表渲染.html",a:"react-列表渲染"},"83.1":{t:"什么是列表渲染？\r",p:"列表渲染是指根据数据数组来动态生成多个相似的元素，并将它们渲染到用户界面上。在 React 中，我们通常使用 JavaScript 的数组和 map() 方法来实现列表渲染。通过列表渲染，我们可以轻松 ...",l:"frontEnd/react/列表渲染.html#什么是列表渲染",a:"什么是列表渲染"},"83.2":{t:"使用 map() 方法实现列表渲染\r",p:"在 React 中，使用数组的 map() 方法是实现列表渲染的常见方式。map() 方法可以遍历数组的每个元素，并根据每个元素生成一个新的元素。下面是一个简单的示例，演示了如何使用 map() 方法 ...",l:"frontEnd/react/列表渲染.html#使用-map-方法实现列表渲染",a:"使用-map-方法实现列表渲染"},"83.3":{t:"条件渲染列表元素\r",p:`在实际应用中，我们可能需要根据特定条件来渲染列表元素。在 React 中，我们可以在 map() 方法中使用条件语句来实现条件渲染。下面是一个示例，演示了如何根据数字的奇偶性来渲染不同样式的列表项：
 ...`,l:"frontEnd/react/列表渲染.html#条件渲染列表元素",a:"条件渲染列表元素"},"83.4":{t:"列表渲染和数据来源\r",p:"在实际应用中，数据通常来自于父组件的状态或从外部 API 获取。在 React 中，我们可以通过 props 将数据传递给子组件，然后在子组件中使用 map() 方法来实现列表渲染。下面是一个示例，演 ...",l:"frontEnd/react/列表渲染.html#列表渲染和数据来源",a:"列表渲染和数据来源"},"83.5":{t:"添加列表项\r",p:`在实际应用中，我们可能需要通过用户的交互来添加新的列表项。在 React 中，我们可以通过修改数据数组的方式来实现添加列表项。下面是一个示例，演示了如何通过按钮点击来添加新的列表项：
import R ...`,l:"frontEnd/react/列表渲染.html#添加列表项",a:"添加列表项"},"83.6":{t:"列表渲染的最佳实践\r",p:`

使用 key 属性：在使用 map() 方法渲染列表项时，每个列表项都应该有一个唯一的 key 属性。key 属性帮助 React 正确地更新 DOM，并提高列表渲染的性能。


使用 Fragm ...`,l:"frontEnd/react/列表渲染.html#列表渲染的最佳实践",a:"列表渲染的最佳实践"},"84.0":{t:"# React 条件渲染\r",p:`在 React 中，条件渲染是一种根据特定条件决定是否渲染组件或组件的一部分的技术。条件渲染使我们能够根据不同的状态或数据来展示不同的内容，从而实现动态和交互性的用户界面。
`,l:"frontEnd/react/条件渲染.html",a:"react-条件渲染"},"84.1":{t:"什么是条件渲染？\r",p:"条件渲染是指根据特定条件来决定是否渲染组件或组件的一部分。在 React 中，我们可以使用 JavaScript 的条件语句（如 if、else、switch）或三元表达式来实现条件渲染。条件渲染允许 ...",l:"frontEnd/react/条件渲染.html#什么是条件渲染",a:"什么是条件渲染"},"84.2":{t:"使用 if...else 实现条件渲染\r",p:`在 React 中，我们可以使用 JavaScript 的 if...else 语句来实现条件渲染。下面是一个简单的示例，演示了如何根据条件来渲染不同的内容：
import React from 'r ...`,l:"frontEnd/react/条件渲染.html#使用-if-else-实现条件渲染",a:"使用-if-else-实现条件渲染"},"84.3":{t:"使用三元表达式实现条件渲染\r",p:"除了使用 if...else，我们还可以使用 JavaScript 的三元表达式（ternary operator）来实现条件渲染。三元表达式是一种简洁的写法，用于在一行代码中根据条件返回不同的值。下 ...",l:"frontEnd/react/条件渲染.html#使用三元表达式实现条件渲染",a:"使用三元表达式实现条件渲染"},"84.4":{t:"使用逻辑与（&&）实现条件渲染\r",p:"除了 if...else 和三元表达式，我们还可以使用逻辑与（&amp;&amp;）来实现条件渲染。逻辑与在 JavaScript 中是一种短路逻辑，当第一个条件为真时，会返回第二个条件；否则，返回第 ...",l:"frontEnd/react/条件渲染.html#使用逻辑与-实现条件渲染",a:"使用逻辑与-实现条件渲染"},"84.5":{t:"使用条件运算符实现条件渲染\r",p:"除了上述方法，我们还可以使用条件运算符（也称为逻辑或 nullish coalescing 运算符）来实现条件渲染。条件运算符是 ES2020 中的新特性，用于简化条件判断。下面是一个使用条件运算符的 ...",l:"frontEnd/react/条件渲染.html#使用条件运算符实现条件渲染",a:"使用条件运算符实现条件渲染"},"84.6":{t:"条件渲染的最佳实践\r",p:`

使用适合场景的条件渲染方法：根据具体的场景和需求选择合适的条件渲染方法，例如使用 if...else、三元表达式、逻辑与、条件运算符等。


抽象逻辑：如果条件渲染逻辑较复杂，建议将其抽象成函数或 ...`,l:"frontEnd/react/条件渲染.html#条件渲染的最佳实践",a:"条件渲染的最佳实践"},"85.0":{t:"# Vue.js\r",p:"\r",l:"frontEnd/vue/base/index.html",a:"vue-js"},"85.1":{t:"简介\r",p:`Vue.js 是一套用于构建用户界面的渐进式 JavaScript 框架。它允许您将应用程序划分为可复用的组件，并以声明式的方式构建数据驱动的 UI。
`,l:"frontEnd/vue/base/index.html#简介",a:"简介"},"85.2":{t:"开始\r",p:"\r",l:"frontEnd/vue/base/index.html#开始",a:"开始"},"85.3":{t:"安装 Vue.js\r",p:`您可以通过直接引入 Vue.js 脚本文件或使用 npm（Node Package Manager）安装 Vue.js。
&lt;!-- 直接引入Vue.js脚本 --&gt;


或者
# 使用np ...`,l:"frontEnd/vue/base/index.html#安装-vue-js",a:"安装-vue-js"},"85.4":{t:"第一个 Vue.js 应用\r",p:`&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;My First Vue App&lt;/title&gt;
   ...`,l:"frontEnd/vue/base/index.html#第一个-vue-js-应用",a:"第一个-vue-js-应用"},"85.5":{t:"数据绑定\r",p:"\r",l:"frontEnd/vue/base/index.html#数据绑定",a:"数据绑定"},"85.6":{t:"插值表达式\r",p:`使用双花括号（Mustache 语法）进行数据插值，将数据绑定到 HTML 模板中。
&lt;div&gt;
  &lt;p&gt;{{ message }}&lt;/p&gt;
&lt;/div&g ...`,l:"frontEnd/vue/base/index.html#插值表达式",a:"插值表达式"},"85.7":{t:"指令\r",p:`Vue.js 提供了一些指令，用于在模板中实现特定的行为。

v-bind：将元素属性与 Vue 实例的数据绑定。

&lt;img v-bind:src=&quot;imageSrc&quot; / ...`,l:"frontEnd/vue/base/index.html#指令",a:"指令"},"85.8":{t:"条件渲染\r",p:"\r",l:"frontEnd/vue/base/index.html#条件渲染",a:"条件渲染"},"85.9":{t:"`v-if` 和 `v-else`\r",p:`根据条件渲染元素。
&lt;div v-if=&quot;isVisible&quot;&gt;This is visible.&lt;/div&gt;
&lt;div v-else&gt;This  ...`,l:"frontEnd/vue/base/index.html#v-if-和-v-else",a:"v-if-和-v-else"},"85.10":{t:"`v-show`\r",p:`根据条件显示或隐藏元素。
&lt;div v-show=&quot;isVisible&quot;&gt;This is visible.&lt;/div&gt;

`,l:"frontEnd/vue/base/index.html#v-show",a:"v-show"},"85.11":{t:"列表渲染\r",p:"\r",l:"frontEnd/vue/base/index.html#列表渲染",a:"列表渲染"},"85.12":{t:"`v-for`\r",p:`循环渲染列表中的元素。
&lt;ul&gt;
  &lt;li v-for=&quot;item in items&quot; :key=&quot;item.id&quot;&gt;{{ item. ...`,l:"frontEnd/vue/base/index.html#v-for",a:"v-for"},"85.13":{t:"事件处理\r",p:`使用v-on指令监听 DOM 事件，并执行相应的方法。
&lt;button v-on:click=&quot;handleClick&quot;&gt;Click Me&lt;/button&gt; ...`,l:"frontEnd/vue/base/index.html#事件处理",a:"事件处理"},"85.14":{t:"表单输入绑定\r",p:`使用v-model指令实现表单输入和 Vue 实例数据的双向绑定。
&lt;input v-model=&quot;message&quot; type=&quot;text&quot; /&gt;
 ...`,l:"frontEnd/vue/base/index.html#表单输入绑定",a:"表单输入绑定"},"85.15":{t:"组件\r",p:"\r",l:"frontEnd/vue/base/index.html#组件",a:"组件"},"85.16":{t:"定义组件\r",p:`// 定义一个名为 'my-component' 的组件
Vue.component('my-component', {
  template: '&lt;div&gt;{{ message }}&l ...`,l:"frontEnd/vue/base/index.html#定义组件",a:"定义组件"},"85.17":{t:"使用组件\r",p:`&lt;div id=&quot;app&quot;&gt;
  &lt;my-component&gt;&lt;/my-component&gt;
&lt;/div&gt;

`,l:"frontEnd/vue/base/index.html#使用组件",a:"使用组件"},"85.18":{t:"生命周期钩子\r",p:`


钩子函数
阶段
描述




beforeCreate
创建前
在实例被创建之前调用。此时，组件的数据观察和事件还未初始化。


created
创建后
在实例创建完成后调用。可以在这里进行数据 ...`,l:"frontEnd/vue/base/index.html#生命周期钩子",a:"生命周期钩子"},"86.0":{t:"# Vue Router 学习指南\r",p:"\r",l:"frontEnd/vue/base/vue-router.html",a:"vue-router-学习指南"},"86.1":{t:"1. 简介\r",p:`
Vue Router 是 Vue.js 官方提供的路由管理器，用于实现单页面应用（SPA）的路由功能。
学习 Vue Router 之前，确保您对 Vue.js 有一定的了解。

`,l:"frontEnd/vue/base/vue-router.html#_1-简介",a:"_1-简介"},"86.2":{t:"2. 安装\r",p:`
使用 npm 或 yarn 安装 Vue Router 到您的 Vue.js 项目中。

# 使用npm
npm install vue-router

# 使用yarn
yarn add vue- ...`,l:"frontEnd/vue/base/vue-router.html#_2-安装",a:"_2-安装"},"86.3":{t:"3. 基本用法\r",p:`
创建一个 Vue Router 实例并将其与 Vue 应用关联。
定义路由表，包含不同路径与对应组件的映射。

import { createRouter, createWebHistory } f ...`,l:"frontEnd/vue/base/vue-router.html#_3-基本用法",a:"_3-基本用法"},"86.4":{t:"4. 路由视图\r",p:`
在 Vue 组件中使用 &lt;router-view&gt; 标签来渲染路由匹配到的组件。

&lt;template&gt;
  &lt;div&gt;
    &lt;router-view& ...`,l:"frontEnd/vue/base/vue-router.html#_4-路由视图",a:"_4-路由视图"},"86.5":{t:"5. 路由导航\r",p:`
使用&lt;router-link&gt;组件创建导航链接，以在单页面应用中切换不同的路由。

&lt;template&gt;
  &lt;div&gt;
    &lt;router-link  ...`,l:"frontEnd/vue/base/vue-router.html#_5-路由导航",a:"_5-路由导航"},"86.6":{t:"6. 路由传参\r",p:`
使用路由参数传递数据给组件。

const routes = [{ path: '/user/:id', component: User }]

&lt;router-link :to=&quot; ...`,l:"frontEnd/vue/base/vue-router.html#_6-路由传参",a:"_6-路由传参"},"86.7":{t:"7. 嵌套路由\r",p:`
在组件中定义嵌套的子路由。

const routes = [
  {
    path: '/parent',
    component: Parent,
    children: [{ pa ...`,l:"frontEnd/vue/base/vue-router.html#_7-嵌套路由",a:"_7-嵌套路由"},"86.8":{t:"8. 路由守卫\r",p:`
使用路由守卫来处理导航前后的逻辑，例如登录验证、权限控制等。

router.beforeEach((to, from, next) =&gt; {
  // 检查用户是否登录，进行相关逻辑处理
  ...`,l:"frontEnd/vue/base/vue-router.html#_8-路由守卫",a:"_8-路由守卫"},"86.9":{t:"9. 动态路由\r",p:`
使用动态路由来根据不同条件加载组件。

const routes = [{ path: '/category/:id', component: Category }]

`,l:"frontEnd/vue/base/vue-router.html#_9-动态路由",a:"_9-动态路由"},"86.10":{t:"10. 路由懒加载\r",p:`
使用路由懒加载来优化页面加载性能。

const routes = [
  {
    path: '/lazy',
    component: () =&gt; import('./compon ...`,l:"frontEnd/vue/base/vue-router.html#_10-路由懒加载",a:"_10-路由懒加载"},"86.11":{t:" ",p:"",l:"frontEnd/vue/base/vue-router.html#",a:""},"86.12":{t:"11. 更多配置\r",p:`
了解更多高级配置，如路由别名、重定向、404 页面等。
--&gt;

`,l:"frontEnd/vue/base/vue-router.html#_11-更多配置",a:"_11-更多配置"},"87.0":{t:"# vuex\r",p:`
Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。它是一个集中式的状态管理库，用于管理 Vue.js 应用中的共享状态（state）。在大型应用程序中，组件之间的数据共享和通信可能变得 ...`,l:"frontEnd/vue/base/vuex.html",a:"vuex"},"87.1":{t:"核心概念\r",p:`

State（状态）：在 Vuex 中，状态即应用程序中需要共享的数据。它类似于组件的 data，但是不限于某个组件，而是存储在 Vuex 的全局状态树中，使得不同组件可以共享和访问这些数据。


 ...`,l:"frontEnd/vue/base/vuex.html#核心概念",a:"核心概念"},"87.2":{t:"优点\r",p:`

集中式管理：所有的状态都集中在 Vuex 的 store 中，方便开发者进行状态的调试和追踪。


组件通信：可以轻松实现跨组件的状态共享和通信，避免了传统的 Props 和 Events 的繁琐 ...`,l:"frontEnd/vue/base/vuex.html#优点",a:"优点"},"87.3":{t:"使用\r",p:`

安装 Vuex：使用 npm 或 yarn 安装 Vuex 库。在终端中运行以下命令：
npm install vuex
或
yarn add vuex



创建一个 Vuex 的 store： ...`,l:"frontEnd/vue/base/vuex.html#使用",a:"使用"},"87.4":{t:"Mutations 的使用\r",p:`当使用 Vuex 时，通常会将状态的修改拆分为两个部分：mutations 和 actions。
Mutations 用于同步地修改状态。它们是唯一允许直接修改状态的地方，而且是一个纯函数（不应该有副 ...`,l:"frontEnd/vue/base/vuex.html#mutations-的使用",a:"mutations-的使用"},"87.5":{t:"Actions 的使用\r",p:"Actions 用于处理异步操作，并且可以包含任意异步代码。它们不直接修改状态，而是通过调用 mutations 来间接修改状态。通常，在组件中通过 dispatch 调用 actions 中的方法。 ...",l:"frontEnd/vue/base/vuex.html#actions-的使用",a:"actions-的使用"},"87.6":{t:"getters 的使用\r",p:"Getters 用于派生出 Vuex store 中的状态（state），类似于组件的计算属性（computed），但是 Getters 可以被多个组件共用，避免了重复逻辑代码。Getters 可以对 ...",l:"frontEnd/vue/base/vuex.html#getters-的使用",a:"getters-的使用"},"88.0":{t:"# Vue 响应式原理\r",p:"\r",l:"frontEnd/vue/principle/响应式原理.html",a:"vue-响应式原理"},"88.1":{t:"Vue2响应式原理\r",p:`Vue 2 的响应式原理主要是基于 Object.defineProperty 实现的。以下是 Vue 2 响应式系统的核心原理：


数据劫持（Data Observation）：

当你创建一个  ...`,l:"frontEnd/vue/principle/响应式原理.html#vue2响应式原理",a:"vue2响应式原理"},"88.2":{t:"Vue3响应式原理\r",p:`Vue 3 的响应式原理使用了 Proxy 对象，相比 Vue 2 使用的 Object.defineProperty 有一些重要的改进和性能优化。以下是 Vue 3 响应式系统的核心原理：


Pr ...`,l:"frontEnd/vue/principle/响应式原理.html#vue3响应式原理",a:"vue3响应式原理"},"89.0":{t:"# vue3 API\r",p:`
vue在线学习工具


在 vue3.2 中，我们只需在script标签中添加setup。就可以做到，组件只需引入不用注册，属性和方法也不用 return 才能于 template 中使用，也不用写 ...`,l:"frontEnd/vue/v3/api.html",a:"vue3-api"},"89.1":{t:"setup\r",p:`
理解：Vue3.0 中一个新的配置项，值为一个函数。
setup() 函数是 Vue3 新增的一个选项，它是组合式 API 的统一入口，简单来说，就是所有的 CompositionAPI 新特性都应 ...`,l:"frontEnd/vue/v3/api.html#setup",a:"setup"},"89.2":{t:"ref 和 reactive\r",p:`
ref() 函数用来根据给定的值创建一个响应式的数据对象，ref() 函数调用的返回值是一个对象，这个对象上只包含一个 value 属性, 只在setup函数内部访问ref函数需要加.value，其 ...`,l:"frontEnd/vue/v3/api.html#ref-和-reactive",a:"ref-和-reactive"},"89.3":{t:"ref全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#ref全家桶",a:"ref全家桶"},"89.4":{t:"isRef\r",p:`判断是不是一个ref对象
import { ref,isRef } from 'vue'
let message = ref(&quot;我是message&quot;)
let notRef:num ...`,l:"frontEnd/vue/v3/api.html#isref",a:"isref"},"89.5":{t:"shallowRef\r",p:`创建一个跟踪自身 .value 变化的 ref，但不会使其值也变成响应式的
修改其属性是非响应式的这样是不会改变的
&lt;template&gt;
  &lt;div&gt;
    &lt;but ...`,l:"frontEnd/vue/v3/api.html#shallowref",a:"shallowref"},"89.6":{t:"triggerRef\r",p:`强制更新页面DOM
import {Ref,shallowRef,triggerRef} from 'vue'
type Obj = {
    name:string
}
let message:R ...`,l:"frontEnd/vue/v3/api.html#triggerref",a:"triggerref"},"89.7":{t:"customRef\r",p:`自定义ref
customRef 是个工厂函数要求我们返回一个对象 并且实现 get 和 set  适合去做防抖之类的
&lt;template&gt;
  &lt;div ref=&quot;div ...`,l:"frontEnd/vue/v3/api.html#customref",a:"customref"},"89.8":{t:"reactive全家桶\r",p:`reactive是不可以绑定普通的数据类型这样是不允许 会给我们报错
import { reactive} from 'vue'
let person = reactive('zhangsan')
/ ...`,l:"frontEnd/vue/v3/api.html#reactive全家桶",a:"reactive全家桶"},"89.9":{t:"readonly\r",p:`readonly 接受一个对象 (不论是响应式还是普通的) 或是一个 ref，返回一个原值的只读代理。


`,l:"frontEnd/vue/v3/api.html#readonly",a:"readonly"},"89.10":{t:"shallowReactive\r",p:`只能对浅层的数据 如果是深层的数据只会改变值 不会改变视图
&lt;template&gt;
  &lt;div&gt;
    &lt;div&gt;{{ state }}&lt;/div&gt;
 ...`,l:"frontEnd/vue/v3/api.html#shallowreactive",a:"shallowreactive"},"89.11":{t:"to系列全家桶\r",p:"",l:"frontEnd/vue/v3/api.html#to系列全家桶",a:"to系列全家桶"},"89.12":{t:"toRef\r",p:`把一个响应式对象转换成普通对象，该普通对象的每个 property 都是一个 ref
如果原始对象是非响应式的，数据是会变的，但不会更新视图。
&lt;template&gt;
  &lt;div&g ...`,l:"frontEnd/vue/v3/api.html#toref",a:"toref"},"89.13":{t:"toRefs\r",p:`toRefs相当于对对象内每个属性调用toRef，toRefs返回的对象内的属性使用时需要加.value,主要是方便我们解构使用
&lt;template&gt;
  &lt;div&gt;
     ...`,l:"frontEnd/vue/v3/api.html#torefs",a:"torefs"},"89.14":{t:"toRaw\r",p:`将响应式对象修改为普通对象
&lt;template&gt;
  &lt;div&gt;
    &lt;button @click=&quot;change&quot;&gt;按钮&lt;/butt ...`,l:"frontEnd/vue/v3/api.html#toraw",a:"toraw"},"89.15":{t:"computed\r",p:`computed() 与 Vue2 中的 computed 作用基本一致，它可以接收一个函数或对象作为参数，会返回一个只读的 ref 对象。
&lt;template&gt;
  &lt;div&gt ...`,l:"frontEnd/vue/v3/api.html#computed",a:"computed"},"89.16":{t:"watch\r",p:`vue3 watch 的作用和 Vue2 中的 watch 作用是一样的，他们都是用来监听响应式状态发生变化的，当响应式状态发生变化时，就会触发一个回调函数。
watch(data,()=&gt;{} ...`,l:"frontEnd/vue/v3/api.html#watch",a:"watch"},"89.17":{t:"1、监听ref定义的一个响应式数据\r",p:`import { ref, watch } from 'vue'
let message = ref({
    nav:{
        bar:{
            name:&quot; ...`,l:"frontEnd/vue/v3/api.html#_1、监听ref定义的一个响应式数据",a:"_1、监听ref定义的一个响应式数据"},"89.18":{t:"2、监听多个ref\r",p:`写法变为数组的形式
import { ref, watch ,reactive} from 'vue'

let message = ref('')
let message2 = ref('')

w ...`,l:"frontEnd/vue/v3/api.html#_2、监听多个ref",a:"_2、监听多个ref"},"89.19":{t:"3、监听Reactive定义的响应式对象\r",p:`使用reactive监听深层对象开启和不开启deep 效果一样
import { ref, watch ,reactive} from 'vue'

let message = reactive({
 ...`,l:"frontEnd/vue/v3/api.html#_3、监听reactive定义的响应式对象",a:"_3、监听reactive定义的响应式对象"},"89.20":{t:"4、监听reactive 定义响应式对象的单一属性\r",p:`import { ref, watch ,reactive} from 'vue'
let message = reactive({
    name:&quot;&quot;,
    name2: ...`,l:"frontEnd/vue/v3/api.html#_4、监听reactive-定义响应式对象的单一属性",a:"_4、监听reactive-定义响应式对象的单一属性"},"89.21":{t:"WatchEffect\r",p:`
立即执行传入的一个函数，同时响应式追踪其依赖，并在其依赖变更时重新运行该函数。
不用直接指定要监视的数据, 回调函数中使用的哪些响应式数据就监视哪些响应式数据
默认初始时就会执行第一次, 从而可以收 ...`,l:"frontEnd/vue/v3/api.html#watcheffect",a:"watcheffect"},"89.22":{t:"清除副作用\r",p:`
watchEffect 的第一个参数——effect函数——可以接收一个参数：叫onInvalidate，也是一个函数，用于清除 effect 产生的副作用
就是在触发监听之前会调用一个函数可以处理 ...`,l:"frontEnd/vue/v3/api.html#清除副作用",a:"清除副作用"},"89.23":{t:"停止监听\r",p:`- 当 watchEffect 在组件的 setup() 函数或生命周期钩子被调用时，侦听器会被链接到该组件的生命周期，并在组件卸载时自动停止。
- 但是我们采用异步的方式创建了一个监听器，这个时候监 ...`,l:"frontEnd/vue/v3/api.html#停止监听",a:"停止监听"},"89.24":{t:"配置选项\r",p:`

watchEffect的第二个参数，用来定义副作用刷新时机，可以作为一个调试器来使用


flush （更新时机）：

pre：组件更新前执行
sync：强制效果始终同步触发
post：组件更新后 ...`,l:"frontEnd/vue/v3/api.html#配置选项",a:"配置选项"},"89.25":{t:"生命周期\r",p:`简单来说就是一个组件从创建 到 销毁的 过程 成为生命周期
在我们使用Vue3 组合式API 是没有 beforeCreate 和 created 这两个生命周期的
!img
`,l:"frontEnd/vue/v3/api.html#生命周期",a:"生命周期"},"89.26":{t:"自定义指令\r",p:"",l:"frontEnd/vue/v3/api.html#自定义指令",a:"自定义指令"},"89.27":{t:"Vue3指令的钩子函数\r",p:`
created 元素初始化的时候
beforeMount 指令绑定到元素后调用 只调用一次
mounted 元素插入父级dom调用
beforeUpdate 元素被更新之前调用
update 这个周 ...`,l:"frontEnd/vue/v3/api.html#vue3指令的钩子函数",a:"vue3指令的钩子函数"},"89.28":{t:"在setup内定义局部指令\r",p:`这里有一个需要注意的限制：必须以 vNameOfDirective 的形式来命名本地自定义指令，以使得它们可以直接在模板中使用。

const vMoveDirective: Directive =  ...`,l:"frontEnd/vue/v3/api.html#在setup内定义局部指令",a:"在setup内定义局部指令"},"89.29":{t:"生命周期钩子参数详解\r",p:`第一个 el  当前绑定的DOM 元素
第二个 binding

instance：使用指令的组件实例。
value：传递给指令的值。例如，在 v-my-directive=&quot;1 + 1&q ...`,l:"frontEnd/vue/v3/api.html#生命周期钩子参数详解",a:"生命周期钩子参数详解"},"89.30":{t:"案列 - 自定义拖拽指令\r",p:`&lt;template&gt;
  &lt;div v-move class=&quot;box&quot;&gt;
    &lt;div class=&quot;header&quot;&gt; ...`,l:"frontEnd/vue/v3/api.html#案列-自定义拖拽指令",a:"案列-自定义拖拽指令"},"89.31":{t:"自定义hooks\r",p:`在 vue2 中有个东西叫 mixins，他可以将多个组件中相同的逻辑抽离出来，实现一次写代码，多组件受益的效果。
但是 mixins 的副作用就是引用的多了变量的来源就不清晰了，而且还会有变量来源不 ...`,l:"frontEnd/vue/v3/api.html#自定义hooks",a:"自定义hooks"},"90.0":{t:"# vue3 组件通信方式\r",p:"\r",l:"frontEnd/vue/v3/communication.html",a:"vue3-组件通信方式"},"90.1":{t:"通信方式\r",p:`&lt;!-- 通信仓库地址:项目地址 --&gt;
不管是 vue2 还是 vue3,组件通信方式很重要,不管是项目还是面试都是经常用到的知识点。
比如:vue2 组件通信方式
**props:** ...`,l:"frontEnd/vue/v3/communication.html#通信方式",a:"通信方式"},"90.2":{t:"1、props\r",p:`props 可以实现父子组件通信,在 vue3 中我们可以通过 defineProps 获取父组件传递的数据。且在组件内部不需要引入 defineProps 方法可以直接使用！
父组件给子组件传递数据 ...`,l:"frontEnd/vue/v3/communication.html#_1、props",a:"_1、props"},"90.3":{t:"2、自定义事件\r",p:`在 vue 框架中事件分为两种:一种是原生的 DOM 事件，另外一种自定义事件。
原生 DOM 事件可以让用户与网页进行交互，比如 click、dbclick、change、mouseenter、mo ...`,l:"frontEnd/vue/v3/communication.html#_2、自定义事件",a:"_2、自定义事件"},"90.4":{t:"1. 原生 DOM 事件\r",p:`代码如下:
&lt;pre @click=&quot;handler&quot;&gt;
      我是祖国的老花骨朵
 &lt;/pre&gt;

当前代码级给 pre 标签绑定原生 DOM 事件 ...`,l:"frontEnd/vue/v3/communication.html#_1-原生-dom-事件",a:"_1-原生-dom-事件"},"90.5":{t:"2. 自定义事件\r",p:`自定义事件可以实现子组件给父组件传递数据.在项目中是比较常用的。
比如在父组件内部给子组件(Event2)绑定一个自定义事件
&lt;Event2 @xxx=&quot;handler3&quot;& ...`,l:"frontEnd/vue/v3/communication.html#_2-自定义事件",a:"_2-自定义事件"},"90.6":{t:"3、全局事件总线\r",p:`全局事件总线可以实现任意组件通信，在 vue2 中可以根据 VM 与 VC 关系推出全局事件总线。
但是在 vue3 中没有 Vue 构造函数，也就没有 Vue.prototype.以及组合式 API ...`,l:"frontEnd/vue/v3/communication.html#_3、全局事件总线",a:"_3、全局事件总线"},"90.7":{t:"4、v-model\r",p:`v-model 指令可是收集表单数据(数据双向绑定)，除此之外它也可以实现父子组件数据同步。
而 v-model 实指利用 props[modelValue]与自定义事件[update:modelVa ...`,l:"frontEnd/vue/v3/communication.html#_4、v-model",a:"_4、v-model"},"90.8":{t:"5、useAttrs\r",p:`在 Vue3 中可以利用 useAttrs 方法获取组件的属性与事件(包含:原生 DOM 事件或者自定义事件),次函数功能类似于 Vue2 框架中$attrs属性与$listeners 方法。
比如: ...`,l:"frontEnd/vue/v3/communication.html#_5、useattrs",a:"_5、useattrs"},"90.9":{t:"6、ref 与$parent\r",p:`ref,提及到 ref 可能会想到它可以获取元素的 DOM 或者获取子组件实例的 VC。既然可以在父组件内部通过 ref 获取子组件实例 VC，那么子组件内部的方法与响应式数据父组件可以使用的。
比如 ...`,l:"frontEnd/vue/v3/communication.html#_6、ref-与-parent",a:"_6、ref-与-parent"},"90.10":{t:"7、provide 与 inject\r",p:`provide[提供]
**inject[注入]vue3 提供两个方法 provide 与 inject,可以实现隔辈组件传递参数
组件组件提供数据:
provide 方法用于提供数据，此方法执需要传 ...`,l:"frontEnd/vue/v3/communication.html#_7、provide-与-inject",a:"_7、provide-与-inject"},"90.11":{t:"8、piniapinia 官网:https://pinia.web3doc.top/**\r",p:`pinia 也是集中式管理状态容器,类似于 vuex。但是核心概念没有 mutation、modules,使用方式参照官网
`,l:"frontEnd/vue/v3/communication.html#_8、piniapinia-官网-https-pinia-web3doc-top",a:"_8、piniapinia-官网-https-pinia-web3doc-top"},"90.12":{t:"9、slot\r",p:`插槽：默认插槽、具名插槽、作用域插槽可以实现父子组件通信.
默认插槽:
在子组件内部的模板中书写 slot 全局组件标签
&lt;template&gt;
  &lt;div&gt;
    &lt; ...`,l:"frontEnd/vue/v3/communication.html#_9、slot",a:"_9、slot"},"91.0":{t:"# Vue3 深入组件\r",p:"\r",l:"frontEnd/vue/v3/components.html",a:"vue3-深入组件"},"91.1":{t:"注册\r",p:"\r",l:"frontEnd/vue/v3/components.html#注册",a:"注册"},"91.2":{t:"全局组件\r",p:`在 main.ts 引入组件跟随在 createApp(App) 后面，切记不能放到 mount 后面
//main.js
import { createApp } from 'vue'
import ...`,l:"frontEnd/vue/v3/components.html#全局组件",a:"全局组件"},"91.3":{t:" ",p:"",l:"frontEnd/vue/v3/components.html#",a:""},"91.4":{t:"批量注册全局组件 -->\r",p:"\r",l:"frontEnd/vue/v3/components.html#批量注册全局组件",a:"批量注册全局组件"},"91.5":{t:"局部组件\r",p:`局部注册的组件需要在使用它的父组件中显式导入，并且只能在该父组件中使用。它的优点是使组件之间的依赖关系更加明确，并且对 tree-shaking 更加友好。
在使用 \`
&lt;template&gt ...`,l:"frontEnd/vue/v3/components.html#局部组件",a:"局部组件"},"91.6":{t:"父子组件传参\r",p:`
父组件通过 v-bind 绑定一个数据，然后子组件通过 defineProps 接受传过来的值
传递非字符串类型需要加 v-bind 简写 冒号

父组件
&lt;template&gt;
  &l ...`,l:"frontEnd/vue/v3/components.html#父子组件传参",a:"父子组件传参"},"91.7":{t:"插槽\r",p:"\r",l:"frontEnd/vue/v3/components.html#插槽",a:"插槽"},"91.8":{t:"匿名插槽\r",p:`在子组件放置一个插槽
// Child.vue
&lt;template&gt;
  &lt;div&gt;child&lt;/div&gt;
  &lt;slot&gt;&lt;/slot&gt;
 ...`,l:"frontEnd/vue/v3/components.html#匿名插槽",a:"匿名插槽"},"91.9":{t:"具名插槽\r",p:`具名插槽其实就是给插槽取个名字。一个子组件可以放多个插槽，而且可以放在不同的地方，而父组件填充内容时，可以根据这个名字把内容填充到对应插槽中
&lt;div&gt;
  &lt;slot name=& ...`,l:"frontEnd/vue/v3/components.html#具名插槽",a:"具名插槽"},"91.10":{t:"作用域插槽\r",p:`插槽内容可以访问到父组件的数据作用域，因为插槽内容本身是在父组件模板中定义的。
在子组件动态绑定参数 派发给父组件的 slot 去使用
&lt;span&gt;{{ message }}&lt;/sp ...`,l:"frontEnd/vue/v3/components.html#作用域插槽",a:"作用域插槽"},"91.11":{t:"动态插槽\r",p:`插槽可以是一个变量名
&lt;template&gt;
  &lt;div&gt;
    &lt;p&gt;父组件&lt;/p&gt;
    &lt;Child&gt;
      &lt;tem ...`,l:"frontEnd/vue/v3/components.html#动态插槽",a:"动态插槽"},"91.12":{t:"异步组件\r",p:`在大型应用中，需要将应用分割成小一些的代码块，并且减少主包的体积。
通过 defineAsyncComponent 异步加载
&lt;template&gt;
  &lt;Children :msg= ...`,l:"frontEnd/vue/v3/components.html#异步组件",a:"异步组件"},"91.13":{t:"Suspense\r",p:"Suspense 允许应用程序在等待异步组件时渲染一些其它内容,在 Vue2 中，必须使用条件判断(例如 v-if、 v-else等)来检查数据是否已加载并显示一些其它内容；但是，在 Vue3 新增了 ...",l:"frontEnd/vue/v3/components.html#suspense",a:"suspense"},"91.14":{t:"Teleport 传送组件\r",p:`Teleport 是一种能够将我们的模板渲染至指定DOM节点，不受父级style、v-show等属性影响，但data、prop数据依旧能够共用的技术；类似于 React 的 Portal。
主要解决的 ...`,l:"frontEnd/vue/v3/components.html#teleport-传送组件",a:"teleport-传送组件"},"91.15":{t:"Keep-alive 缓存组件\r",p:`
事件挂载的方法等，只执行一次的放在 onMounted中；组件每次进去执行的方法放在 onActivated中


作用和vue2一致，只是生命周期名称有所更改
初次进入时： onMounted&g ...`,l:"frontEnd/vue/v3/components.html#keep-alive-缓存组件",a:"keep-alive-缓存组件"},"91.16":{t:"provide/inject\r",p:`provide 可以在祖先组件中指定我们想要提供给后代组件的数据或方法，而在任何后代组件中，我们都可以使用 inject 来接收 provide 提供的数据或方法。
父组件
&lt;template& ...`,l:"frontEnd/vue/v3/components.html#provide-inject",a:"provide-inject"},"91.17":{t:"v-model 升级\r",p:`
在Vue3 v-model 是破坏性更新的
v-model 是props 和 emit 组合而成的语法糖,vue3中 v-model 有以下改动


变更：value =&gt; modelValu ...`,l:"frontEnd/vue/v3/components.html#v-model-升级",a:"v-model-升级"},"92.0":{t:"# 创建Vue3项目\r",p:"\r",l:"frontEnd/vue/v3/create.html",a:"创建vue3项目"},"92.1":{t:"一、 使用vue-cli创建\r",p:`
`,l:"frontEnd/vue/v3/create.html#一、-使用vue-cli创建",a:"一、-使用vue-cli创建"},"92.2":{t:"安装或者升级\r",p:`npm install -g @vue/cli
`,l:"frontEnd/vue/v3/create.html#安装或者升级",a:"安装或者升级"},"92.3":{t:"保证 vue cli 版本在 4.5.0 以上\r",p:`vue --version
`,l:"frontEnd/vue/v3/create.html#保证-vue-cli-版本在-4-5-0-以上",a:"保证-vue-cli-版本在-4-5-0-以上"},"92.4":{t:"创建项目\r",p:`vue create my-project
然后的步骤

- Please pick a preset - 选择 Manually select features
- Check the featur ...`,l:"frontEnd/vue/v3/create.html#创建项目",a:"创建项目"},"92.5":{t:"二、 使用vite创建(推荐)\r",p:`vite的优势

冷服务   默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入
HMR  速度快到惊人的 模块热更新（HMR）
Rollup打包  它使用 ...`,l:"frontEnd/vue/v3/create.html#二、-使用vite创建-推荐",a:"二、-使用vite创建-推荐"},"92.6":{t:"1. 使用vite初始化一个项目\r",p:`# npm
npm init vite@latest

# yarn
yarn create vite

这两种使用vite创建vue3项目的步骤一样
(1).运行命令 输入项目名称
!img
(2) ...`,l:"frontEnd/vue/v3/create.html#_1-使用vite初始化一个项目",a:"_1-使用vite初始化一个项目"},"92.7":{t:"2. npm init vue@latest\r",p:`!img
`,l:"frontEnd/vue/v3/create.html#_2-npm-init-vue-latest",a:"_2-npm-init-vue-latest"},"93.0":{t:"# 认识Vue3\r",p:"\r",l:"frontEnd/vue/v3/index.html",a:"认识vue3"},"93.1":{t:"一、了解相关信息\r",p:`
Vue.js 3.0 &quot;One Piece&quot; 正式版在今年9月份发布
2年多开发, 100+位贡献者, 2600+次提交, 600+次PR
Vue3支持vue2的大多数特性
更好 ...`,l:"frontEnd/vue/v3/index.html#一、了解相关信息",a:"一、了解相关信息"},"93.2":{t:"二、 性能提升:\r",p:`
打包大小减少41%
初次渲染快55%, 更新渲染快133%
内存减少54%
使用Proxy代替defineProperty实现数据响应式
重写虚拟DOM的实现和Tree-Shaking

`,l:"frontEnd/vue/v3/index.html#二、-性能提升",a:"二、-性能提升"},"93.3":{t:"三、 新增特性\r",p:`

Composition (组合) API


setup

ref 和 reactive
computed 和 watch
新的生命周期函数
provide与inject
...



新组件

 ...`,l:"frontEnd/vue/v3/index.html#三、-新增特性",a:"三、-新增特性"},"94.0":{t:"# vue3.3 新特性\r",p:"\r",l:"frontEnd/vue/v3/vue33.html",a:"vue3-3-新特性"},"94.1":{t:"defineProps\r",p:`
父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;h1&gt;Home&lt;/h1&gt;
    &lt;Child :name=&quot;['zhang ...`,l:"frontEnd/vue/v3/vue33.html#defineprops",a:"defineprops"},"94.2":{t:"defineEmits\r",p:`
父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;h1&gt;Home&lt;/h1&gt;
    &lt;Child @send=&quot;getName ...`,l:"frontEnd/vue/v3/vue33.html#defineemits",a:"defineemits"},"94.3":{t:"defineOptions\r",p:`
主要是用来定义 Options API 的选项



::: tip
常用的就是定义 name 在 seutp 语法糖模式发现 name 不好定义了需要在开启一个 script 自定义 name 现 ...`,l:"frontEnd/vue/v3/vue33.html#defineoptions",a:"defineoptions"},"94.4":{t:"defineSlots\r",p:`用来约束 slot

父组件

&lt;template&gt;
  &lt;div&gt;
    &lt;Child :data=&quot;list&quot;&gt;
      &lt;te ...`,l:"frontEnd/vue/v3/vue33.html#defineslots",a:"defineslots"},"96.0":{t:"# 前端导航\r",p:`&lt;!--
`,l:"nav/index.html",a:"前端导航"},"96.1":{t:" ",p:"",l:"nav/index.html#",a:""},"96.2":{t:"常用工具 -->\r",p:"&lt;NavLinks v-for=&quot;{title,items} in NAV_DATA&quot; :title='title' :items=&quot;items&quot;/&gt ...",l:"nav/index.html#常用工具",a:"常用工具"},"97.0":{t:"# Axios\r",p:"\r",l:"others/axios/index.html",a:"axios"},"97.1":{t:"什么是axios？\r",p:`Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。
`,l:"others/axios/index.html#什么是axios",a:"什么是axios"},"97.2":{t:"安装\r",p:`使用npm：
npm install axios

使用cdn：


`,l:"others/axios/index.html#安装",a:"安装"},"97.3":{t:"使用\r",p:`
执行GET请求

let name = 'zs'
axios.get(\`/api/xxxx?name=\${name}\`)
  .then(function (result) {
    consol ...`,l:"others/axios/index.html#使用",a:"使用"},"97.4":{t:"拦截器\r",p:`拦截器，我们大致可以分为两类， 一类是 请求接口前的统一处理（请求拦截） 、 一类是 请求接口后的统一处理（响应拦截）

请求拦截

请求调整
用户标识


响应拦截

网络错误处理
授权错误处理
普 ...`,l:"others/axios/index.html#拦截器",a:"拦截器"},"97.5":{t:"错误处理\r",p:`axios.get('/user/12345')
  .catch(function (error) {
    if (error.response) {
      // 发出请求后，服务器用状态 ...`,l:"others/axios/index.html#错误处理",a:"错误处理"},"98.0":{t:"# 封装 axios\r",p:"\r",l:"others/axios/封装axios.html",a:"封装-axios"},"98.1":{t:"1.封装目的\r",p:`实现一个简单的封装，主要实现以下目的：

实现请求、响应拦截器功能
api 集中式管理
请求头设置，一般可以在请求头中携带公共的参数：token
可以简化服务器返回的数据，处理 http 网络错误

`,l:"others/axios/封装axios.html#_1-封装目的",a:"_1-封装目的"},"98.2":{t:"2.初始化 axios 实例\r",p:`import axios from 'axios'
let apiBaseUrl = ''
const service = axios.create({
  baseURL: apiBaseUrl,  ...`,l:"others/axios/封装axios.html#_2-初始化-axios-实例",a:"_2-初始化-axios-实例"},"98.3":{t:"3.设置请求拦截\r",p:`// 创建请求拦截
service.interceptors.request.use(
  (config) =&gt; {
    // 如果开启 token 认证
    if (serverCo ...`,l:"others/axios/封装axios.html#_3-设置请求拦截",a:"_3-设置请求拦截"},"98.4":{t:"4.设置响应拦截\r",p:`// 创建响应拦截
service.interceptors.response.use(
  (res) =&gt; {
    let data = res.data
    // 处理自己的业务逻 ...`,l:"others/axios/封装axios.html#_4-设置响应拦截",a:"_4-设置响应拦截"},"98.5":{t:"5.封装常见的方法\r",p:`//get
export function getAction(url, parameter) {
  return service({
    url: url,
    method: 'get' ...`,l:"others/axios/封装axios.html#_5-封装常见的方法",a:"_5-封装常见的方法"},"98.6":{t:"6.使用\r",p:`示例：
let param = {
    username:'zs',
    password:'123456'
}

// 定义接口方法
const login = (params)=&gt;p ...`,l:"others/axios/封装axios.html#_6-使用",a:"_6-使用"},"98.7":{t:" ",p:"",l:"others/axios/封装axios.html#",a:""},"98.8":{t:"相关文章\r",p:`关于 Axios 的再再再封装，总是会有所不一样
十分钟封装一个好用的 axios，省时又省力他不香吗
前端架构带你 封装 axios，一次封装终身受益「美团后端连连点赞」 --&gt;
`,l:"others/axios/封装axios.html#相关文章",a:"相关文章"},"99.0":{t:"# Git基本命令使用\r",p:"\r",l:"others/git/git.html",a:"git基本命令使用"},"99.1":{t:"账户配置\r",p:`
配置全局账户，对所有 Git 仓库有效

git config --global user.name 'Your Name'
git config --global user.email 'Your ...`,l:"others/git/git.html#账户配置",a:"账户配置"},"99.2":{t:"本地基本操作\r",p:"\r",l:"others/git/git.html#本地基本操作",a:"本地基本操作"},"99.3":{t:"初始化本地库\r",p:`git init

`,l:"others/git/git.html#初始化本地库",a:"初始化本地库"},"99.4":{t:"查看状态\r",p:`git status

`,l:"others/git/git.html#查看状态",a:"查看状态"},"99.5":{t:"添加暂存区 git add\r",p:`
将当前目录及其子目录下所有变更添加到暂存区

git add .


将本地库所有变更添加到暂存区

git add -A


指定文件添加暂存区

git add file1 file2 ...
 ...`,l:"others/git/git.html#添加暂存区-git-add",a:"添加暂存区-git-add"},"99.6":{t:"提交本地库 git commit\r",p:`
提交所有变更

git commit
# or
git commit -m '日志信息' -a


提交当前目录及其子目录的变更

git commit -m '日志信息' .


提交指定文件

 ...`,l:"others/git/git.html#提交本地库-git-commit",a:"提交本地库-git-commit"},"99.7":{t:"比较差异 git diff\r",p:`
比较工作区和暂存区的所有差异，只能查看旧文件的变更（包括修改和删除），不能查看新文件（因为新文件还为被 git 追踪）

git diff


比较指定文件工作区和暂存区的差异

git diff  ...`,l:"others/git/git.html#比较差异-git-diff",a:"比较差异-git-diff"},"99.8":{t:"查看日志信息 git log\r",p:`
查看简要日志信息

git reflog


查看详细日志信息

git log


查看极简日志信息

git log --oneline


查看最近 n 次的版本信息

git log -n
 ...`,l:"others/git/git.html#查看日志信息-git-log",a:"查看日志信息-git-log"},"99.9":{t:"分支命令\r",p:"\r",l:"others/git/git.html#分支命令",a:"分支命令"},"99.10":{t:"创建分支\r",p:`
基于当前分支创建分支

git branch 新分支


基于指定分支创建分支

git branch 新分支 已有分支


基于某个 commit 创建分支

git branch 新分支 com ...`,l:"others/git/git.html#创建分支",a:"创建分支"},"99.11":{t:"查看本地分支\r",p:`git branch -v

`,l:"others/git/git.html#查看本地分支",a:"查看本地分支"},"99.12":{t:"删除分支\r",p:`
安全删除本地分支

git branch -d 分支


强制删除本地分支

git branch -D 分支

`,l:"others/git/git.html#删除分支",a:"删除分支"},"99.13":{t:"切换分支\r",p:`git checkout 分支名

`,l:"others/git/git.html#切换分支",a:"切换分支"},"99.14":{t:"合并分支\r",p:`merge 和 rebase的区别有待学习实践 :worried:

将 A 分支合并到当前分支，且为 merge 创建 commit

git merge A


将 A 分支合并到 B 分支，且为 ...`,l:"others/git/git.html#合并分支",a:"合并分支"},"99.15":{t:"版本穿梭与回滚\r",p:`
工作区指定文件恢复成和暂存区一样

git checkout file1 file2 ...

# tips in the Git Bash
# use &quot;git restore &lt; ...`,l:"others/git/git.html#版本穿梭与回滚",a:"版本穿梭与回滚"},"99.16":{t:"修改 commit 记录\r",p:`
往最后一次 commit 追加记录，而不新建 commit - reference

git commit --amend


合并 commit 记录 - reference

git rebas ...`,l:"others/git/git.html#修改-commit-记录",a:"修改-commit-记录"},"99.17":{t:"远程仓库交互\r",p:"\r",l:"others/git/git.html#远程仓库交互",a:"远程仓库交互"},"99.18":{t:"git remote\r",p:`
查看所有远程仓库地址别名

git remote -v


为远程仓库起别名

git remote add 别名 地址


删除远程仓库别名

git remote remove 别名


修改别 ...`,l:"others/git/git.html#git-remote",a:"git-remote"},"99.19":{t:"git clone\r",p:`
克隆远程仓库到本地

git clone 地址


克隆远程仓库指定分支到本地

git clone -b 远程仓库分支名 地址

`,l:"others/git/git.html#git-clone",a:"git-clone"},"99.20":{t:"git pull\r",p:`
拉取远程分支，并与本地分支合并

git pull 别名 分支名

`,l:"others/git/git.html#git-pull",a:"git-pull"},"99.21":{t:"git push\r",p:`
推送本地指定分支到仓库指定分支

git push 别名 本地分支:远程分支


如果远程分支被省略，表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建 ...`,l:"others/git/git.html#git-push",a:"git-push"},"100.0":{t:"# git安装\r",p:"\r",l:"others/git/install.html",a:"git安装"},"100.1":{t:"**1.Git官网下载安装git客户端：https://git-scm.com/downloads/**\r",p:`\r
\r
\r`,l:"others/git/install.html#_1-git官网下载安装git客户端-https-git-scm-com-downloads",a:"_1-git官网下载安装git客户端-https-git-scm-com-downloads"},"100.2":{t:"**2.安装完成后，在空白处点鼠标右键选择“Git Bush Here” ，打开git bash命令窗口**\r",p:`\r
\r
\r`,l:"others/git/install.html#_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口",a:"_2-安装完成后-在空白处点鼠标右键选择-git-bush-here-打开git-bash命令窗口"},"100.3":{t:"**3.配置用户名和邮箱**\r",p:`git config —global user.name “xxx”
git config —global user.email “xxxx@xxx.com”
配置后结果：git config --l ...`,l:"others/git/install.html#_3-配置用户名和邮箱",a:"_3-配置用户名和邮箱"},"100.4":{t:"4.执行命令生成ssh pub_key\r",p:`ssh-keygen -t rsa -C &quot;XXXX@XXX.com&quot;

直接按三次回车，会生成 id_rsa.pub 文件，这个文件一般在C盘的.ssh目录下。
`,l:"others/git/install.html#_4-执行命令生成ssh-pub-key",a:"_4-执行命令生成ssh-pub-key"},"100.5":{t:"**5.打开生成后的id_rsa.pub文件，copy内容到git ssh个人设置**\r",p:`!image-20230222160826601
!image-20230222161109182
`,l:"others/git/install.html#_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置",a:"_5-打开生成后的id-rsa-pub文件-copy内容到git-ssh个人设置"},"100.6":{t:"**6.本地拉取代码**\r",p:`就可以克隆ssh地址了
`,l:"others/git/install.html#_6-本地拉取代码",a:"_6-本地拉取代码"},"100.7":{t:"TortoiseGit安装\r",p:`TortoiseGit安装和配置详细说明
`,l:"others/git/install.html#tortoisegit安装",a:"tortoisegit安装"},"101.0":{t:"# 基本类型\r",p:"\r",l:"others/TypeScript/basic.html",a:"基本类型"},"101.1":{t:"字符串类型\r",p:`// 普通声明
let a: string = '123'

// 也可以使用es6的字符串模板
let str: string = \`ddd\${a}\`

`,l:"others/TypeScript/basic.html#字符串类型",a:"字符串类型"},"101.2":{t:"数字类型\r",p:`// 支持十六进制、十进制、八进制和二进制。
let notANumber: number = NaN //NaN
let num: number = 123.321 //普通数字
let infin ...`,l:"others/TypeScript/basic.html#数字类型",a:"数字类型"},"101.3":{t:"布尔类型\r",p:`let b1: boolean = true //可以直接使用布尔值
let b2: boolean = false //也可以通过函数返回布尔值

let b2: boolean = Boolean ...`,l:"others/TypeScript/basic.html#布尔类型",a:"布尔类型"},"101.4":{t:"数组\r",p:`TypeScript 像 JavaScript 一样可以操作数组元素。 有两种方式可以定义数组。 第一种，可以在元素类型后面接上 []，表示由此类型元素组成的一个数组：
let list: numbe ...`,l:"others/TypeScript/basic.html#数组",a:"数组"},"101.5":{t:"元组 Tuple\r",p:`元组类型允许表示一个已知元素数量和类型的数组，各元素的类型不必相同。如果一个方法需要返回多个值，可以把这多个值作为元组返回，而不需要创建额外的类来表示。
比如：可以定义一对值分别为string和num ...`,l:"others/TypeScript/basic.html#元组-tuple",a:"元组-tuple"},"101.6":{t:"枚举\r",p:`enum类型是对 JavaScript 标准数据类型的一个补充。使用枚举类型可以为一组数值赋予友好的名字。
枚举的值可以是数字，也可以是字符串。

数字枚举

enum Types {
  Red = ...`,l:"others/TypeScript/basic.html#枚举",a:"枚举"},"101.7":{t:"Any 任意类型\r",p:`没有强制限定哪种类型，随时切换类型都可以 我们可以对 any 进行任何操作，不需要检查类型
let value: Any
value = true // OK
value = 42 // OK
val ...`,l:"others/TypeScript/basic.html#any-任意类型",a:"any-任意类型"},"101.8":{t:"Void\r",p:`可以用 void 表示没有任何返回值的函数
function voidFn(): void {
  console.log('test void')
  // return // 不能带有return ...`,l:"others/TypeScript/basic.html#void",a:"void"},"101.9":{t:"Null 和 Undefined\r",p:`let u: undefined = undefined //定义undefined
let n: null = null //定义null

默认情况下 null 和 undefined 是所有类型 ...`,l:"others/TypeScript/basic.html#null-和-undefined",a:"null-和-undefined"},"101.10":{t:"Never\r",p:`never 类型表示的是那些永不存在的值的类型。
// 返回never的函数必须存在无法达到的终点

// 因为必定抛出异常，所以 error 将不会有返回值
function error(messa ...`,l:"others/TypeScript/basic.html#never",a:"never"},"101.11":{t:"Never 与 Void 的差异\r",p:`//void类型只是没有返回值 但本身不会出错
function Void(): void {
  console.log()
}

//只会抛出异常没有返回值
function Never(): n ...`,l:"others/TypeScript/basic.html#never-与-void-的差异",a:"never-与-void-的差异"},"101.12":{t:"联合类型\r",p:`联合类型用|分隔，表示取值可以为多种类型中的一种
// a可以为数字或者布尔类型，不能为字符串类型，
// 因为定义的联合类型只有数字和布尔值并没有字符串
let a:num|boolean
a =  ...`,l:"others/TypeScript/basic.html#联合类型",a:"联合类型"},"101.13":{t:"交叉类型\r",p:`交叉类型就是跟联合类型相反，用&amp;操作符表示，交叉类型就是两个类型必须存在
interface People {
  age: number,
  height： number
}
interf ...`,l:"others/TypeScript/basic.html#交叉类型",a:"交叉类型"},"101.14":{t:"类型断言\r",p:"通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。 类型断言好比其它语言里的类型转换，但是不进行特殊的数据检查和解构。 它没有运行时的影响，只是在编译阶段起作用。 TypeScrip ...",l:"others/TypeScript/basic.html#类型断言",a:"类型断言"},"102.0":{t:"# 类\r",p:"ES6提供了更接近传统语言的写法，引入了Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。基本上，ES6的class可以看作只是一个语法糖，它的绝大部分功能，ES5都可以做到 ...",l:"others/TypeScript/class.html",a:"类"},"102.1":{t:"基本实例\r",p:`// 类的基本定义与使用
class Person{
  // 声明属性
    name:string
    age:number

    // 构造方法
    constructor(nam ...`,l:"others/TypeScript/class.html#基本实例",a:"基本实例"},"102.2":{t:"继承\r",p:`在TypeScript 里，我们可以使用常用的面向对象模式。 基于类的程序设计中一种最基本的模式是允许使用继承来扩展现有的类。
// 类的继承
class Animal {
  run (distan ...`,l:"others/TypeScript/class.html#继承",a:"继承"},"102.3":{t:"类的修饰符\r",p:`总共有三个 public private protected
`,l:"others/TypeScript/class.html#类的修饰符",a:"类的修饰符"},"102.4":{t:"默认为 public\r",p:`使用public修饰符 可以让你定义的变量 内部访问 也可以外部访问 如果不写默认就是public
`,l:"others/TypeScript/class.html#默认为-public",a:"默认为-public"},"102.5":{t:"理解 private\r",p:`使用private修饰符 代表定义的变量私有的只能在内部访问 不能在外部访问
`,l:"others/TypeScript/class.html#理解-private",a:"理解-private"},"102.6":{t:"理解 protected\r",p:`使用protected修饰符 代表定义的变量私有的只能在内部和继承的子类中访问 不能在外部访问
class Person{
    public name:string
    private age ...`,l:"others/TypeScript/class.html#理解-protected",a:"理解-protected"},"102.7":{t:"readonly 修饰符\r",p:`你可以使用 readonly 关键字将属性设置为只读的。 只读属性必须在声明时或构造函数里被初始化。
class Person {
  readonly name: string = 'abc'
   ...`,l:"others/TypeScript/class.html#readonly-修饰符",a:"readonly-修饰符"},"102.8":{t:"static 静态属性 和 静态方法\r",p:`我们用static 定义的属性 不可以通过this 去访问 只能通过类名去调用
class Person {
  public name: string;
  static age: number = ...`,l:"others/TypeScript/class.html#static-静态属性-和-静态方法",a:"static-静态属性-和-静态方法"},"102.9":{t:"interface 定义 类\r",p:`ts interface 定义类 使用关键字 implements 后面跟interface的名字多个用逗号隔开 继承还是用extends

interface PersonClass {
    g ...`,l:"others/TypeScript/class.html#interface-定义-类",a:"interface-定义-类"},"102.10":{t:"存储器\r",p:`TypeScript 支持通过 getters/setters 来截取对对象成员的访问。 它能帮助你有效的控制对对象成员的访问。
下面来看如何把一个简单的类改写成使用 get 和 set。 首先，我们 ...`,l:"others/TypeScript/class.html#存储器",a:"存储器"},"102.11":{t:"抽象类\r",p:`抽象类做为其它派生类的基类使用。 它们一般不会直接被实例化，只能实例化实现了所有抽象方法的子类。 不同于接口，抽象类可以包含成员的实现细节。
abstract: 用abstract关键字声明的类叫做抽 ...`,l:"others/TypeScript/class.html#抽象类",a:"抽象类"},"103.0":{t:"# 函数\r",p:`
函数涉及的类型实际上指的是：函数参数和返回值的类型

`,l:"others/TypeScript/function.html",a:"函数"},"103.1":{t:"函数的类型\r",p:`js的函数
// 命名函数
function add(x, y) {
  return x + y
}

// 匿名函数 箭头函数
let myAdd = (x, y) =&gt; {
  retur ...`,l:"others/TypeScript/function.html#函数的类型",a:"函数的类型"},"103.2":{t:"可选参数`?`\r",p:`通过?表示该参数为可选参数
function add(x: number, y?: number): number {
  return y ? x + y : x;
}


const fn = ( ...`,l:"others/TypeScript/function.html#可选参数",a:"可选参数"},"103.3":{t:"默认参数\r",p:`function add(x: number, y: number = 20): number {
  return x + y;
}
add(10)  // 30

`,l:"others/TypeScript/function.html#默认参数",a:"默认参数"},"103.4":{t:"剩余参数\r",p:"必要参数，默认参数和可选参数有个共同点：它们表示某一个参数。 有时，你想同时操作多个参数，或者你并不知道会有多少参数传递进来。 在 JavaScript 里，你可以使用 arguments 来访问所有 ...",l:"others/TypeScript/function.html#剩余参数",a:"剩余参数"},"103.5":{t:"函数重载\r",p:`重载是方法名字相同，而参数不同，返回类型可以相同也可以不同。
// 重载函数声明
function add (x: string, y: string): string
function add (x ...`,l:"others/TypeScript/function.html#函数重载",a:"函数重载"},"104.0":{t:"# 泛型\r",p:`
指在定义函数、接口或类的时候，不预先指定具体的类型，而在使用的时候再指定具体类型的一种特性。

`,l:"others/TypeScript/generic.html",a:"泛型"},"104.1":{t:"函数泛型\r",p:"\r",l:"others/TypeScript/generic.html#函数泛型",a:"函数泛型"},"104.2":{t:"给函数加上类型\r",p:`下面这是两个函数，除了类型的不同，实现的功能是一样的。
function num(a: number, b: number): Array&lt;number&gt; {
  return [a, b ...`,l:"others/TypeScript/generic.html#给函数加上类型",a:"给函数加上类型"},"104.3":{t:"使用泛型优化\r",p:`语法为函数名字后面跟一个&lt;参数名&gt; 参数名可以随便写 例如我这儿写了 T
当我们使用这个函数的时候把参数的类型传进去就可以了 （也就是动态类型）
function Add&lt;T&gt; ...`,l:"others/TypeScript/generic.html#使用泛型优化",a:"使用泛型优化"},"104.4":{t:"多个泛型参数的函数\r",p:`一个函数可以定义多个泛型参数
function swap&lt;K, V&gt;(a: K, b: V): [K, V] {
  return [a, b]
}
const result = swap ...`,l:"others/TypeScript/generic.html#多个泛型参数的函数",a:"多个泛型参数的函数"},"104.5":{t:"泛型接口\r",p:`在定义接口时, 为接口中的属性或方法定义泛型类型 
在使用接口时, 再指定具体的泛型类型
interface KeyValue&lt;T,U&gt; {
  key: T;
  value: U;
} ...`,l:"others/TypeScript/generic.html#泛型接口",a:"泛型接口"},"104.6":{t:"泛型类\r",p:`在定义类时, 为类中的属性或方法定义泛型类型 在创建类的实例时, 再指定特定的泛型类型
class clacArray&lt;T&gt;{
    private arr:T[] = [];

    ...`,l:"others/TypeScript/generic.html#泛型类",a:"泛型类"},"104.7":{t:"泛型约束\r",p:`我们期望在一个泛型的变量上面，获取其length参数，但是，有的数据类型是没有length属性的
// 没有泛型约束
function getLen&lt;T&gt;(arg:T) {
  retur ...`,l:"others/TypeScript/generic.html#泛型约束",a:"泛型约束"},"105.0":{t:"# 初识TypeScript\r",p:`
TypeScript中文网

`,l:"others/TypeScript/index.html",a:"初识typescript"},"105.1":{t:"TS是什么？\r",p:`TS：是TypeScript的简称，是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。
`,l:"others/TypeScript/index.html#ts是什么",a:"ts是什么"},"105.2":{t:"TS和JS的关系\r",p:`对比于JS，TS是JS的超集，简单的说就是在 JavaScript 的基础上加入了类型系统，让每个参数都有明确的意义，从而带来了更加智能的提示。
相对于JS而言，TS属于强类型语言，所以对于项目而言， ...`,l:"others/TypeScript/index.html#ts和js的关系",a:"ts和js的关系"},"105.3":{t:"TS和JS的区别\r",p:`
JavaScript 属于动态编程语言，而ts 属于静态编程语言。

js：边解释边执行，错误只有在运行的时候才能发现
ts：先编译再执行，在写的时候就会发现错误了（ts不能直接执行，需要先编译成  ...`,l:"others/TypeScript/index.html#ts和js的区别",a:"ts和js的区别"},"105.4":{t:"TypeScript的优缺点\r",p:"",l:"others/TypeScript/index.html#typescript的优缺点",a:"typescript的优缺点"},"105.5":{t:"优点\r",p:`
增强代码的可维护性，尤其在大型项目的时候效果显著
友好地在编辑器里提示错误，编译阶段就能检查类型发现大部分错误
支持最新的JavaScript新特特性
周边生态繁荣，vue3已全面支持 typesc ...`,l:"others/TypeScript/index.html#优点",a:"优点"},"105.6":{t:"缺点\r",p:`
需要一定的学习成本
和一些插件库的兼容并不是特别完美，如以前在 vue2 项目里使用 typescript就并不是那么顺畅
增加前期开发的成本，毕竟你需要写更多的代码（但是便于后期的维护）

`,l:"others/TypeScript/index.html#缺点",a:"缺点"},"105.7":{t:"安装\r",p:`# 安装 typescript
npm install -g typescript
//或者
yarn global add typescript

# 查看版本
tsc -v

# 编译
tsc i ...`,l:"others/TypeScript/index.html#安装",a:"安装"},"105.8":{t:"监视编译和在node下运行typescript\r",p:"",l:"others/TypeScript/index.html#监视编译和在node下运行typescript",a:"监视编译和在node下运行typescript"},"105.9":{t:"一、使用tsc -w进行随时热更新watch\r",p:`tsc -w

`,l:"others/TypeScript/index.html#一、使用tsc-w进行随时热更新watch",a:"一、使用tsc-w进行随时热更新watch"},"105.10":{t:"二、使用ts-node直接运行ts的node项目\r",p:`首先全局安装ts-node
npm install -g ts-node

直接进行ts-node 启动文件名
`,l:"others/TypeScript/index.html#二、使用ts-node直接运行ts的node项目",a:"二、使用ts-node直接运行ts的node项目"},"106.0":{t:"# 接口和对象类型\r",p:`
TypeScript 的核心原则之一是对值所具有的结构进行类型检查。我们使用接口（Interfaces）来定义对象的类型。接口是对象的状态(属性)和行为(方法)的抽象(描述)

`,l:"others/TypeScript/interface.html",a:"接口和对象类型"},"106.1":{t:"对象的类型\r",p:`在typescript中，我们定义对象的方式要用关键字interface（接口），我的理解是使用interface来定义一种约束，让数据的结构满足约束的格式。定义方式如下：
//这样写是会报错的 因为 ...`,l:"others/TypeScript/interface.html#对象的类型",a:"对象的类型"},"106.2":{t:"重名interface 会合并\r",p:`interface A{name:string}
interface A{age:number}

let a:A = {
    name:'zs',
    age:18
}

`,l:"others/TypeScript/interface.html#重名interface-会合并",a:"重名interface-会合并"},"106.3":{t:"继承\r",p:`interface A {
    name:stirng
}
interface B extends A {
    age:number
}

let obj:B = {
    age:18,
 ...`,l:"others/TypeScript/interface.html#继承",a:"继承"},"106.4":{t:"可选属性 使用`?`操作符\r",p:`可选属性的好处之一是可以对可能存在的属性进行预定义，好处之二是可以捕获引用了不存在的属性时的错误。
可选属性的含义是该属性可以不存在，带有可选属性的接口与普通的接口定义差不多，在可选属性名字定义的后面 ...`,l:"others/TypeScript/interface.html#可选属性-使用-操作符",a:"可选属性-使用-操作符"},"106.5":{t:"任意属性\r",p:`需要注意的是，一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集：
//在这个例子当中我们看到接口中并没有定义C但是并没有报错
//应为我们定义了[propName: string ...`,l:"others/TypeScript/interface.html#任意属性",a:"任意属性"},"106.6":{t:"只读属性 readonly\r",p:`readonly只读属性是不允许被赋值的，只能读取
//这样写是会报错的
//应为a是只读的不允许重新赋值
interface Person {
    b?: string,
    readonl ...`,l:"others/TypeScript/interface.html#只读属性-readonly",a:"只读属性-readonly"},"106.7":{t:"添加函数\r",p:`interface Person {
    cb:()=&gt;void
}
const person: Person = {
    cb:()=&gt;{
        console.log ...`,l:"others/TypeScript/interface.html#添加函数",a:"添加函数"},"107.0":{t:"# 对象类型\r",p:`这里所说的对象类型，就是我们常说的函数、{}、数组、类
`,l:"others/TypeScript/object.html",a:"对象类型"},"107.1":{t:"object,Object 和类型\r",p:`
object

object 类型用于表示所有的非原始类型，即我们不能把 number、string、boolean、symbol 等 原始类型赋值给 object。在严格模式下，null 和 un ...`,l:"others/TypeScript/object.html#",a:""},"108.0":{t:"# tsconfig.json 配置文件\r",p:`{
  &quot;compilerOptions&quot;: {
    /* 基本选项 */

    // 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5' ...`,l:"others/TypeScript/tsconfig.html",a:"tsconfig-json-配置文件"},"109.0":{t:"# 类型推论|类型别名\r",p:`\r
\r`,l:"others/TypeScript/type.html",a:"类型推论-类型别名"},"109.1":{t:"类型推论\r",p:`TypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。
/* 定义变量时赋值了, 推断为对应的类型 */
let n1 = 10 // number
// 相当于 let n1 ...`,l:"others/TypeScript/type.html#类型推论",a:"类型推论"},"109.2":{t:"类型别名\r",p:`type 关键字（可以给一个类型定义一个名字）多用于复合类型

定义类型别名

type s = string

let str:s = &quot;abcd&quot;

console.log(s ...`,l:"others/TypeScript/type.html#类型别名",a:"类型别名"},"110.0":{t:"# vue3 项目配置文档\r",p:"\r",l:"project/configuration.html",a:"vue3-项目配置文档"},"110.1":{t:"一、搭建后台管理系统模板\r",p:"\r",l:"project/configuration.html#一、搭建后台管理系统模板",a:"一、搭建后台管理系统模板"},"110.2":{t:"1.1 项目初始化\r",p:"搭建一个 vue3 版本的后台管理系统，一个项目要有统一的规范，需要使用 eslint+stylelint+prettier 来对我们的代码质量做检测和修复，需要使用 husky 来做 commit  ...",l:"project/configuration.html#_1-1-项目初始化",a:"_1-1-项目初始化"},"110.3":{t:"1.1.1 环境准备\r",p:`
node 16+
pnpm 8.3.1

`,l:"project/configuration.html#_1-1-1-环境准备",a:"_1-1-1-环境准备"},"110.4":{t:"1.1.2 初始化项目\r",p:`本项目使用 vite 进行构建，vite 官方中文文档参考：cn.vitejs.dev/guide/
pnpm:performant npm ，意味“高性能的 npm”。pnpm由 npm/yarn  ...`,l:"project/configuration.html#_1-1-2-初始化项目",a:"_1-1-2-初始化项目"},"110.5":{t:"1.2 项目配置\r",p:"\r",l:"project/configuration.html#_1-2-项目配置",a:"_1-2-项目配置"},"110.6":{t:"一、eslint 配置\r",p:`eslint 中文官网:http://eslint.cn/
ESLint 最初是由Nicholas C. Zakas 于 2013 年 6 月创建的开源项目。它的目标是提供一个插件化的javascri ...`,l:"project/configuration.html#一、eslint-配置",a:"一、eslint-配置"},"110.7":{t:"1.1.1 vue3 环境代码校验插件\r",p:`# 让所有与prettier规则存在冲突的Eslint rules失效，并使用prettier进行代码检查
&quot;eslint-config-prettier&quot;: &quot;^8.6 ...`,l:"project/configuration.html#_1-1-1-vue3-环境代码校验插件",a:"_1-1-1-vue3-环境代码校验插件"},"110.8":{t:"1.1.2 修改.eslintrc.cjs 配置文件\r",p:`// @see https://eslint.bootcss.com/docs/rules/

module.exports = {
  env: {
    browser: true,
    e ...`,l:"project/configuration.html#_1-1-2-修改-eslintrc-cjs-配置文件",a:"_1-1-2-修改-eslintrc-cjs-配置文件"},"110.9":{t:"2.5 集成 sass\r",p:"我们目前在组件内部已经可以使用 scss 样式,因为在配置 styleLint 工具的时候，项目当中已经安装过 sass sass-loader,因此我们再组件内可以使用 scss 语法！！！需要加上 ...",l:"project/configuration.html#_2-5-集成-sass",a:"_2-5-集成-sass"},"110.10":{t:"2.6 mock 数据\r",p:`安装依赖:https://www.npmjs.com/package/vite-plugin-mock
pnpm install -D vite-plugin-mock mockjs

在 vite. ...`,l:"project/configuration.html#_2-6-mock-数据",a:"_2-6-mock-数据"},"110.11":{t:"2.7 axios 二次封装\r",p:`在开发项目的时候避免不了与后端进行交互,因此我们需要使用 axios 插件实现发送网络请求。在开发项目的时候
我们经常会把 axios 进行二次封装。
目的:
1:使用请求拦截器，可以在请求拦截器中处 ...`,l:"project/configuration.html#_2-7-axios-二次封装",a:"_2-7-axios-二次封装"},"110.12":{t:"2.8 API 接口统一管理\r",p:`在开发项目的时候,接口可能很多需要统一管理。在 src 目录下去创建 api 文件夹去统一管理项目的接口；
比如:下面方式
//统一管理咱们项目用户相关的接口

import request from ...`,l:"project/configuration.html#_2-8-api-接口统一管理",a:"_2-8-api-接口统一管理"},"111.0":{t:"Nginx 部署刷新 404 问题\r",p:`location / {
root   C:\\Users....;
index  index.html index.htm;
try_files $uri $uri/ @Qrouter; // 加上这 ...`,l:"server/linux/nginx.html",a:"nginx-部署刷新-404-问题"},"111.1":{t:"Nginx部署项目\r",p:`1、 yarn build打包项目
2、 打开nginx.conf文件，配置对应的信息
3、 检查配置文件是否配置成功
nginx -t -c D:\\nginx-1.16.1\\conf\\nginx.c ...`,l:"server/linux/nginx.html#nginx部署项目",a:"nginx部署项目"},"112.0":{t:"# MySQL 数据库的常用命令\r",p:`MySQL 数据库的常用命令包括管理数据库和表的命令、数据操作命令以及授权和权限管理命令。下面列出了一些常用的 MySQL 命令：
`,l:"server/mysql/command.html",a:"mysql-数据库的常用命令"},"112.1":{t:"管理数据库和表的命令\r",p:`
CREATE DATABASE database_name;：创建一个新的数据库。
DROP DATABASE database_name;：删除一个数据库。
USE database_name;： ...`,l:"server/mysql/command.html#管理数据库和表的命令",a:"管理数据库和表的命令"},"112.2":{t:"数据操作命令\r",p:`
INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);：向表中插入数据。
SELECT column ...`,l:"server/mysql/command.html#数据操作命令",a:"数据操作命令"},"112.3":{t:"授权和权限管理命令\r",p:`
GRANT privileges ON database_name.table_name TO 'username'@'hostname';：授予用户特定数据库或表的权限。
REVOKE privi ...`,l:"server/mysql/command.html#授权和权限管理命令",a:"授权和权限管理命令"},"113.0":{t:"# MySQL 字段的数据类型\r",p:`MySQL 提供了多种数据类型，用于定义表中列（字段）的数据类型。每个数据类型都有特定的存储需求和可接受的值范围。以下是 MySQL 中常用的数据类型：
`,l:"server/mysql/dataType.html",a:"mysql-字段的数据类型"},"113.1":{t:"整数类型\r",p:`
TINYINT：一个非常小的整数，范围为-128 到 127（有符号）或 0 到 255（无符号）。
SMALLINT：较小的整数，范围为-32,768 到 32,767（有符号）或 0 到 65, ...`,l:"server/mysql/dataType.html#整数类型",a:"整数类型"},"113.2":{t:"浮点数类型\r",p:`
FLOAT：单精度浮点数，范围为-3.402823466E+38 到-1.175494351E-38、0 和 1.175494351E-38 到 3.402823466E+38。
DOUBLE：双精 ...`,l:"server/mysql/dataType.html#浮点数类型",a:"浮点数类型"},"113.3":{t:"字符串类型\r",p:`
CHAR：固定长度的字符串，最大长度为 255 个字符。
VARCHAR：可变长度的字符串，最大长度为 65535 个字符。
TEXT：用于存储较长文本数据的字符串类型，最大长度为 65535 个字 ...`,l:"server/mysql/dataType.html#字符串类型",a:"字符串类型"},"113.4":{t:"日期和时间类型\r",p:`
DATE：存储日期，格式为'YYYY-MM-DD'。
TIME：存储时间，格式为'HH:MM:SS'。
DATETIME：存储日期和时间，格式为'YYYY-MM-DD HH:MM:SS'。
TIME ...`,l:"server/mysql/dataType.html#日期和时间类型",a:"日期和时间类型"},"113.5":{t:"其他常用类型\r",p:`
BOOLEAN：存储布尔值（true 或 false）。
ENUM：存储枚举值，从一个预定义的值列表中选择一个值。
SET：存储一个或多个预定义的值。

::: tip
除了上述常见的数据类型，My ...`,l:"server/mysql/dataType.html#其他常用类型",a:"其他常用类型"},"114.0":{t:"数据库概述\r",p:`数据库是用于组织和存储大量结构化数据的集合。它是一种数据管理系统，允许用户定义、创建、操作和控制访问数据的方法。数据库的设计和使用旨在提供高效的数据存储、快速的数据检索和安全的数据管理。
数据库通常由 ...`,l:"server/mysql/index.html",a:"数据库概述"},"114.1":{t:"MySQL介绍\r",p:"MySQL是一种开源的关系型数据库管理系统，由瑞典公司MySQL AB开发并最终由Oracle Corporation收购。MySQL被广泛用于各种规模的应用程序和网站，因其易用性、性能和可靠性而受到 ...",l:"server/mysql/index.html#mysql介绍",a:"mysql介绍"},"115.0":{t:"# 安装Mysql",p:"",l:"server/mysql/install.html",a:"安装mysql"},"116.0":{t:"# MySQL 基本使用\r",p:`MySQL 的基本使用包括连接到 MySQL 服务器、创建数据库、创建表、插入数据、查询数据、更新数据和删除数据等操作。下面是 MySQL 的基本使用步骤：
`,l:"server/mysql/operation.html",a:"mysql-基本使用"},"116.1":{t:"1. 连接到 MySQL 服务器\r",p:`使用 MySQL 客户端工具（如命令行客户端或图形化客户端工具）连接到 MySQL 服务器。

命令行客户端：打开命令行终端，运行命令mysql -u username -p，其中username是您 ...`,l:"server/mysql/operation.html#_1-连接到-mysql-服务器",a:"_1-连接到-mysql-服务器"},"116.2":{t:"2. 创建数据库\r",p:`在 MySQL 中创建一个新的数据库，用于存储数据。
CREATE DATABASE database_name;

将database_name替换为您希望创建的数据库的名称。
`,l:"server/mysql/operation.html#_2-创建数据库",a:"_2-创建数据库"},"116.3":{t:"3. 选择数据库\r",p:`使用以下命令选择要在其中执行操作的数据库。
USE database_name;

将database_name替换为您要使用的数据库的名称。
`,l:"server/mysql/operation.html#_3-选择数据库",a:"_3-选择数据库"},"116.4":{t:"4. 创建表\r",p:`在所选的数据库中创建一个新的表，定义表的列和数据类型。
CREATE TABLE table_name (
  column1 datatype,
  column2 datatype,
  ...
 ...`,l:"server/mysql/operation.html#_4-创建表",a:"_4-创建表"},"116.5":{t:"5. 插入数据\r",p:`使用以下命令向表中插入数据。
INSERT INTO table_name (column1, column2, ...)
VALUES (value1, value2, ...);

将table_ ...`,l:"server/mysql/operation.html#_5-插入数据",a:"_5-插入数据"},"116.6":{t:"6. 查询数据\r",p:`使用 SELECT 语句从表中检索数据。
SELECT column1, column2, ...
FROM table_name
WHERE condition;

将column1、column2 ...`,l:"server/mysql/operation.html#_6-查询数据",a:"_6-查询数据"},"116.7":{t:"7. 更新数据\r",p:`使用 UPDATE 语句更新表中的数据。
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
 ...`,l:"server/mysql/operation.html#_7-更新数据",a:"_7-更新数据"},"116.8":{t:"8. 删除数据\r",p:`使用 DELETE 语句从表中删除数据。
DELETE FROM table_name
WHERE condition;

将table_name替换为要删除数据的表的名称，condition替换为删 ...`,l:"server/mysql/operation.html#_8-删除数据",a:"_8-删除数据"},"117.0":{t:"# 使用 node 做一个简单的爬虫\r",p:"\r",l:"server/nodejs/crawler.html",a:"使用-node-做一个简单的爬虫"},"117.1":{t:"1. 初始化项目\r",p:`npm init -y

`,l:"server/nodejs/crawler.html#_1-初始化项目",a:"_1-初始化项目"},"117.2":{t:"2. 安装插件 cheerio\r",p:`npm install cheerio

Cheerio 解析标记并提供用于遍历/操作结果数据结构的 API。它不会像网络浏览器那样解释结果。具体来说，它不会生成视觉渲染、应用 CSS、加载外部资源或 ...`,l:"server/nodejs/crawler.html#_2-安装插件-cheerio",a:"_2-安装插件-cheerio"},"117.3":{t:"3. 访问要爬取的网站\r",p:`
爬取豆瓣网 https://movie.douban.com/top250
!img
根据浏览器检查元素区，要爬取的内容
!img

`,l:"server/nodejs/crawler.html#_3-访问要爬取的网站",a:"_3-访问要爬取的网站"},"117.4":{t:"4。 创建 index.js 文件并编写代码\r",p:`// 引入模块
const https = require('https')
const cheerio = require('cheerio')
const fs = require('fs')

 ...`,l:"server/nodejs/crawler.html#_4。-创建-index-js-文件并编写代码",a:"_4。-创建-index-js-文件并编写代码"},"117.5":{t:"5. 运行脚本\r",p:`node index.js

`,l:"server/nodejs/crawler.html#_5-运行脚本",a:"_5-运行脚本"},"117.6":{t:"6. 爬取成功\r",p:`!img
这时会多出来一个名叫files.json的 json 文件
里面就是爬取出来的内容了
[
  {
    &quot;title&quot;: &quot;肖申克的救赎 / The Shaw ...`,l:"server/nodejs/crawler.html#_6-爬取成功",a:"_6-爬取成功"},"118.0":{t:"# Express\r",p:`官网传送门

基于 Node.js 平台，快速、开放、极简的 Web 开发框架

Express 是用于快速创建服务器的第三方模块。
`,l:"server/nodejs/Express.html",a:"express"},"118.1":{t:"Express 初体验\r",p:"\r",l:"server/nodejs/Express.html#express-初体验",a:"express-初体验"},"118.2":{t:"基本使用\r",p:`安装 Express：
npm install express

创建服务器，监听客户端请求，并返回内容：
const express = require('express')
// 创建 web 服 ...`,l:"server/nodejs/Express.html#基本使用",a:"基本使用"},"118.3":{t:"托管静态资源\r",p:`
通过 express.static() 方法可创建静态资源服务器，向外开放访问静态资源。
Express 在指定的静态目录中查找文件，并对外提供资源的访问路径，存放静态文件的目录名不会出现在 URL ...`,l:"server/nodejs/Express.html#托管静态资源",a:"托管静态资源"},"118.4":{t:"Express 路由\r",p:`创建路由模块：
// router.js

const express = require('express')
// 创建路由对象
const router = express.Router()

 ...`,l:"server/nodejs/Express.html#express-路由",a:"express-路由"},"118.5":{t:"Express 中间件\r",p:`
中间件是指流程的中间处理环节
服务器收到请求后，可先调用中间件进行预处理
中间件是一个函数，包含 req, res, next 三个参数，next() 参数把流转关系交给下一个中间件或路由

中间件 ...`,l:"server/nodejs/Express.html#express-中间件",a:"express-中间件"},"118.6":{t:"全局中间件\r",p:`
通过 app.use() 定义的中间件为全局中间件

const express = require('express')
const app = express()

// 定义第一个全局中间件
 ...`,l:"server/nodejs/Express.html#全局中间件",a:"全局中间件"},"118.7":{t:"局部中间件\r",p:`const express = require('express')
const app = express()

// 定义中间件函数
const mw1 = (req, res, next) =& ...`,l:"server/nodejs/Express.html#局部中间件",a:"局部中间件"},"118.8":{t:"中间件分类\r",p:`
应用级别的中间件


通过 app.use() 或 app.get() 或 app.post() ，绑定到 app 实例上的中间件


路由级别的中间件


绑定到 express.Router() ...`,l:"server/nodejs/Express.html#中间件分类",a:"中间件分类"},"118.9":{t:"CORS 跨域资源共享\r",p:"\r",l:"server/nodejs/Express.html#cors-跨域资源共享",a:"cors-跨域资源共享"},"118.10":{t:"cors 中间件解决跨域\r",p:`
安装中间件：npm install cors
导入中间件：const cors = require('cors')
配置中间件：app.use(cors())

`,l:"server/nodejs/Express.html#cors-中间件解决跨域",a:"cors-中间件解决跨域"},"118.11":{t:"CORS\r",p:`
CORS（Cross-Origin Resource Sharing，跨域资源共享）解决跨域，是通过 HTTP 响应头决定浏览器是否阻止前端 JS 代码跨域获取资源
浏览器的同源安全策略默认会阻止网 ...`,l:"server/nodejs/Express.html#cors",a:"cors"},"118.12":{t:"CORS 常见响应头\r",p:`
Access-Control-Allow-Origin：制定了允许访问资源的外域 URL

res.setHeader('Access-Control-Allow-Origin', 'http:// ...`,l:"server/nodejs/Express.html#cors-常见响应头",a:"cors-常见响应头"},"118.13":{t:"CORS 请求分类\r",p:"\r",l:"server/nodejs/Express.html#cors-请求分类",a:"cors-请求分类"},"118.14":{t:"简单请求\r",p:`
请求方式：GET、POST、HEAD 三者之一
HTTP 头部信息不超过以下几种字段：无自定义头部字段、Accept、Accept-Language、Content-Language、DPR、Dow ...`,l:"server/nodejs/Express.html#简单请求",a:"简单请求"},"118.15":{t:"预检请求\r",p:`
请求方式为 GET、POST、HEAD 之外的请求 Method 类型
请求头中包含自定义头部字段
向服务器发送了 application/json 格式的数据

在浏览器与服务器正式通信之前，浏览 ...`,l:"server/nodejs/Express.html#预检请求",a:"预检请求"},"119.0":{t:"# Nodejs 介绍\r",p:`官网传送门
`,l:"server/nodejs/index.html",a:"nodejs-介绍"},"119.1":{t:"初识 Nodejs\r",p:`
Node.js® is an open-source, cross-platform JavaScript runtime environment.
Node.js® 是一个基于 Chrome V8 ...`,l:"server/nodejs/index.html#初识-nodejs",a:"初识-nodejs"},"119.2":{t:"Nodejs 的特点\r",p:`
异步、非阻塞 IO 模型
事件循环
单线程
总结：轻量和高效
Node.js 的性能和效率非常高。

传统的 Java 语言是一个请求开启一个线程，当请求处理完毕后就关闭这个线程。而 Node.js ...`,l:"server/nodejs/index.html#nodejs-的特点",a:"nodejs-的特点"},"119.3":{t:"使用 Node.js 时的劣势\r",p:`
程序运行不稳定，可能会出现服务不可用的情况
程序运行效率较低，每秒的请求数维持在一个较低的水平

`,l:"server/nodejs/index.html#使用-node-js-时的劣势",a:"使用-node-js-时的劣势"},"120.0":{t:"# Nodejs内置模块\r",p:"\r",l:"server/nodejs/innerModule.html",a:"nodejs内置模块"},"120.1":{t:"fs 文件系统模块\r",p:`
fs 模块中所有的操作都有两种形式可供选择:同步和异步
同步文件系统会阻塞程序的执行，也就是除非操作完毕，否则不会向下执行代码
异步文件系统不会阻塞程序的执行，而是在操作完成时，通过回调函数将结果返 ...`,l:"server/nodejs/innerModule.html#fs-文件系统模块",a:"fs-文件系统模块"},"120.2":{t:"读取文件\r",p:"\r",l:"server/nodejs/innerModule.html#读取文件",a:"读取文件"},"120.3":{t:"简单文件读取\r",p:`语法格式：
fs.readFile(path[, options], callback)


path：文件路径
options：配置选项，若是字符串则指定编码格式

encoding：编码格式
fl ...`,l:"server/nodejs/innerModule.html#简单文件读取",a:"简单文件读取"},"120.4":{t:"流式文件读取\r",p:`
简单文件读取的方式会一次性读取文件内容到内存中，若文件较大，会占用过多内存影响系统性能，且读取速度慢
大文件适合用流式文件读取，它会分多次将文件读取到内存中

var fs = require('f ...`,l:"server/nodejs/innerModule.html#流式文件读取",a:"流式文件读取"},"120.5":{t:"写入文件\r",p:"\r",l:"server/nodejs/innerModule.html#写入文件",a:"写入文件"},"120.6":{t:"简单文件写入\r",p:`语法格式：
fs.writeFile(file, data[, options], callback)


file：文件路径
data：写入内容
options：配置选项，包含 encoding,  ...`,l:"server/nodejs/innerModule.html#简单文件写入",a:"简单文件写入"},"120.7":{t:"流式文件写入\r",p:`// 同步、异步、简单文件的写入都不适合大文件的写入，性能较差，容易导致内存溢出
var fs = require('fs')

// 创建一个可写流
var ws = fs.createWriteS ...`,l:"server/nodejs/innerModule.html#流式文件写入",a:"流式文件写入"},"120.8":{t:"Buffer 缓冲区\r",p:`
Buffer 缓冲区文档


Buffer 的结构与数组类似，操作方法也与数组类似
数组不能存储二进制文件，Buffer 是专门存储二进制数据的
Buffer 存储的是二进制数据，显示时以 16 进 ...`,l:"server/nodejs/innerModule.html#buffer-缓冲区",a:"buffer-缓冲区"},"120.9":{t:"路径动态拼接问题 `__dirname`\r",p:`
在使用 fs 模块操作文件时，如果提供的操作路径是以 ./ 或 ../ 开头的相对路径时，容易出现路径动态拼接错误的问题
原因：代码在运行的时候，会以执行 node 命令时所处的目录，动态拼接出被操 ...`,l:"server/nodejs/innerModule.html#路径动态拼接问题-dirname",a:"路径动态拼接问题-dirname"},"120.10":{t:"其它操作\r",p:`验证路径是否存在：

fs.exists(path, callback)
fs.existsSync(path)

获取文件信息：

fs.stat(path, callback)
fs.stat(p ...`,l:"server/nodejs/innerModule.html#其它操作",a:"其它操作"},"120.11":{t:"path 路径模块\r",p:`path 模块是 Node.js 官方提供的、用来处理路径的模块。它提供了一系列的方法和属性，用来满足用户对路径的处理需求。
`,l:"server/nodejs/innerModule.html#path-路径模块",a:"path-路径模块"},"120.12":{t:"路径拼接 `path.join()`\r",p:`const path = require('path')
const fs = require('fs')

// 注意 ../ 会抵消前面的路径
// ./ 会被忽略
const pathStr = ...`,l:"server/nodejs/innerModule.html#路径拼接-path-join",a:"路径拼接-path-join"},"120.13":{t:"获取路径中文件名 `path.basename()`\r",p:`使用 path.basename() 方法，可以获取路径中的最后一部分，常通过该方法获取路径中的文件名
path.basename(path[, ext])


path: 文件路径
ext: 文件扩 ...`,l:"server/nodejs/innerModule.html#获取路径中文件名-path-basename",a:"获取路径中文件名-path-basename"},"120.14":{t:"获取路径中文件扩展名 `path.extname()`\r",p:`const path = require('path')

const fpath = '/a/b/c/index.html'

const fext = path.extname(fpath)
co ...`,l:"server/nodejs/innerModule.html#获取路径中文件扩展名-path-extname",a:"获取路径中文件扩展名-path-extname"},"120.15":{t:"http 模块\r",p:`http 模块是 Node.js 官方提供的、用来创建 web 服务器的模块。
`,l:"server/nodejs/innerModule.html#http-模块",a:"http-模块"},"120.16":{t:"创建基本 Web 服务器\r",p:`const http = require('http')

// 创建 web 服务器实例
const server = http.createServer()

// 为服务器实例绑定 reques ...`,l:"server/nodejs/innerModule.html#创建基本-web-服务器",a:"创建基本-web-服务器"},"120.17":{t:"实现简陋路由效果\r",p:`const http = require('http')
const server = http.createServer()

server.on('request', (req, res) =&g ...`,l:"server/nodejs/innerModule.html#实现简陋路由效果",a:"实现简陋路由效果"},"121.0":{t:"# 模块化\r",p:"\r",l:"server/nodejs/module.html",a:"模块化"},"121.1":{t:"基本概念\r",p:"\r",l:"server/nodejs/module.html#基本概念",a:"基本概念"},"121.2":{t:"什么是模块化\r",p:`概念：

模块化是指解决一个复杂问题时，自顶向下逐层把系统划分为若干模块的过程，模块是可组合、分解和更换的单元。
模块化可提高代码的复用性和可维护性，实现按需加载。
模块的内部数据、实现是私有的, 只 ...`,l:"server/nodejs/module.html#什么是模块化",a:"什么是模块化"},"121.3":{t:"模块化的好处\r",p:`
避免命名空间的冲突
提高代码的复用性
提高维护性
更好的分离，实现按需加载

`,l:"server/nodejs/module.html#模块化的好处",a:"模块化的好处"},"121.4":{t:"Nodejs 中模块化\r",p:"\r",l:"server/nodejs/module.html#nodejs-中模块化",a:"nodejs-中模块化"},"121.5":{t:"Node.js 中模块的分类\r",p:`
内置模块
自定义模块
第三方模块

`,l:"server/nodejs/module.html#node-js-中模块的分类",a:"node-js-中模块的分类"},"121.6":{t:"Node.js 中的模块作用域\r",p:`
和函数作用域类似，在自定义模块中定义的变量、方法等成员，只能在当前模块内被访问，这种模块级别的访问限制，叫做模块作用域
防止全局变量污染

`,l:"server/nodejs/module.html#node-js-中的模块作用域",a:"node-js-中的模块作用域"},"121.7":{t:"模块作用域的成员\r",p:`
自定义模块中都有一个 module 对象，存储了和当前模块有关的信息
在自定义模块中，可以使用 module.exports 对象，将模块内的成员共享出去，供外界使用。导入自定义模块时，得到的就是  ...`,l:"server/nodejs/module.html#模块作用域的成员",a:"模块作用域的成员"},"121.8":{t:"CommonJS 模块化规范\r",p:`
每个模块内部，module 变量代表当前模块
module 变量是一个对象，module.exports 是对外的接口
加载某个模块即加载该模块的 module.exports 属性

`,l:"server/nodejs/module.html#commonjs-模块化规范",a:"commonjs-模块化规范"},"121.9":{t:"模块加载机制\r",p:`模块第一次加载后会被缓存，即多次调用 require() 不会导致模块的代码被执行多次，提高模块加载效率。
`,l:"server/nodejs/module.html#模块加载机制",a:"模块加载机制"},"121.10":{t:"内置模块加载\r",p:`内置模块加载优先级最高。
`,l:"server/nodejs/module.html#内置模块加载",a:"内置模块加载"},"121.11":{t:"自定义模块加载\r",p:`加载自定义模块时，路径要以 ./ 或 ../ 开头，否则会作为内置模块或第三方模块加载。
导入自定义模块时，若省略文件扩展名，则 Node.js 会按顺序尝试加载文件：

按确切的文件名加载
补全 . ...`,l:"server/nodejs/module.html#自定义模块加载",a:"自定义模块加载"},"121.12":{t:"第三方模块加载\r",p:`
若导入第三方模块， Node.js 会从当前模块的父目录开始，尝试从 /node_modules 文件夹中加载第三方模块。
如果没有找到对应的第三方模块，则移动到再上一层父目录中，进行加载，直到文件 ...`,l:"server/nodejs/module.html#第三方模块加载",a:"第三方模块加载"},"121.13":{t:"目录作为模块加载\r",p:`当把目录作为模块标识符进行加载的时候，有三种加载方式：

在被加载的目录下查找 package.json 的文件，并寻找 main 属性，作为 require() 加载的入口
如果没有 package ...`,l:"server/nodejs/module.html#目录作为模块加载",a:"目录作为模块加载"},"121.14":{t:"npm 与包\r",p:"\r",l:"server/nodejs/module.html#npm-与包",a:"npm-与包"},"121.15":{t:"包\r",p:`Node.js 中的第三方模块又叫做包
不同于 Node.js 中的内置模块与自定义模块，包是由第三方个人或团队开发出来的，免费供所有人使用。Node.js 中的包都是免费且开源的。

由于 Node ...`,l:"server/nodejs/module.html#包",a:"包"},"121.16":{t:"npm 安装\r",p:`在项目中安装包的命令
npm install 包的元整名称
或者
npm i 包的元整名称

现在也有其他的包管理工具，如 yarn、pnpm，
下载安装速度是比 npm 要快的
`,l:"server/nodejs/module.html#npm-安装",a:"npm-安装"},"121.17":{t:"通过切换源解决 npm 的下包速度慢的问题\r",p:`npm config get registry  # 查看当前包镜像源
npm config get registry=http:registry.npm.taobao.org/ # 切换源头
npm ...`,l:"server/nodejs/module.html#通过切换源解决-npm-的下包速度慢的问题",a:"通过切换源解决-npm-的下包速度慢的问题"},"121.18":{t:"开发包\r",p:`
注册 npm 账号
初始化包的基本结构

新建文件夹（包名），新建如下三个文件




package.json (包管理配置文件)
index.js (包的入口文件)
README.md (包的说 ...`,l:"server/nodejs/module.html#开发包",a:"开发包"},"121.19":{t:"模块的加载机制\r",p:`模块在第一次加载后会被缓存，多次调用 require()模块的代码只会被执行一次。不论是内置模块、用户自定义模块、还是第三方模块，他们都会优先从缓存中加载，从而提高模块的加载效率。
`,l:"server/nodejs/module.html#模块的加载机制",a:"模块的加载机制"},"121.20":{t:"内置模块的加载机制\r",p:`
内置模块的加载优先级最高

`,l:"server/nodejs/module.html#内置模块的加载机制",a:"内置模块的加载机制"},"121.21":{t:"自定义模块的加载机制\r",p:`
使用 require()加载自定义模块时，必须指定以./或../开头的路径标识符。在加载自定义模块时，如果没有指定./或../这样的路径标识符，则 node 会把它当作内置模块或第三方模块进行加载。 ...`,l:"server/nodejs/module.html#自定义模块的加载机制",a:"自定义模块的加载机制"},"121.22":{t:"第三方模块的加载机制\r",p:`
如果传递给 require()的模块标识符不是一个内置模块，也没有以./或../开头，则 Nodejs 会从当前模块的父目录开始，尝试从/node_modules 文件夹中加载第三方模块
如果没有找 ...`,l:"server/nodejs/module.html#第三方模块的加载机制",a:"第三方模块的加载机制"},"121.23":{t:"目录作为模块\r",p:`
当把目录作为模块标识符，传递给 require()进行加载的时候，有三种加载方式

a. 在被加载的目录下查找一个叫做 package.json 的文件，并寻找 main 属性值作为 require ...`,l:"server/nodejs/module.html#目录作为模块",a:"目录作为模块"},"122.0":{t:"# 数据库和身份认证\r",p:"\r",l:"server/nodejs/mysql.html",a:"数据库和身份认证"},"122.1":{t:"Node 操作 mysql\r",p:"\r",l:"server/nodejs/mysql.html#node-操作-mysql",a:"node-操作-mysql"},"122.2":{t:"配置 mysql 模块\r",p:`
安装 mysql 模块

npm install mysql


建立连接

const mysql = require('mysql')

const db = mysql.createPool( ...`,l:"server/nodejs/mysql.html#配置-mysql-模块",a:"配置-mysql-模块"},"122.3":{t:"操作 mysql 数据库\r",p:`
查询数据

db.query('select * from users', (err, results) =&gt; {
  ...
})


插入数据

// ? 表示占位符
const sql  ...`,l:"server/nodejs/mysql.html#操作-mysql-数据库",a:"操作-mysql-数据库"},"122.4":{t:"Web 开发模式\r",p:"\r",l:"server/nodejs/mysql.html#web-开发模式",a:"web-开发模式"},"122.5":{t:"服务端渲染\r",p:`服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接动态生成的。因此客户端不需要使用 Ajax 额外请求页面的数据。
app.get('/index.html', (req, res) = ...`,l:"server/nodejs/mysql.html#服务端渲染",a:"服务端渲染"},"122.6":{t:"前后端分离\r",p:`前后端分离的开发模式，依赖于 Ajax 技术的广泛应用。后端只负责提供 API 接口，前端使用 Ajax 调用接口。
优点：

开发体验好。前端专业页面开发，后端专注接口开发。
用户体验好。页面局部刷 ...`,l:"server/nodejs/mysql.html#前后端分离",a:"前后端分离"},"122.7":{t:"如何选择\r",p:`
企业级网站，主要功能是展示，没有复杂交互，且需要良好的 SEO，可考虑服务端渲染
后台管理项目，交互性强，无需考虑 SEO，可使用前后端分离
为同时兼顾首页渲染速度和前后端分离开发效率，可采用首屏服 ...`,l:"server/nodejs/mysql.html#如何选择",a:"如何选择"},"122.8":{t:"身份认证\r",p:"\r",l:"server/nodejs/mysql.html#身份认证",a:"身份认证"},"122.9":{t:"Session 认证机制\r",p:`服务端渲染推荐使用 Session 认证机制
`,l:"server/nodejs/mysql.html#session-认证机制",a:"session-认证机制"},"122.10":{t:"Session 工作原理\r",p:`!session
`,l:"server/nodejs/mysql.html#session-工作原理",a:"session-工作原理"},"122.11":{t:"Express 中使用 Session 认证\r",p:`
安装 express-session 中间件

npm install express-session


配置中间件

const session = require('express-sessi ...`,l:"server/nodejs/mysql.html#express-中使用-session-认证",a:"express-中使用-session-认证"},"122.12":{t:"JWT 认证机制\r",p:`前后端分离推荐使用 JWT（JSON Web Token）认证机制，是目前最流行的跨域认证解决方案
`,l:"server/nodejs/mysql.html#jwt-认证机制",a:"jwt-认证机制"},"122.13":{t:"JWT 工作原理\r",p:`Session 认证的局限性：

Session 认证机制需要配合 Cookie 才能实现。由于 Cookie 默认不支持跨域访问，所以，当涉及到前端跨域请求后端接口的时候，需要做很多额外的配置，才能 ...`,l:"server/nodejs/mysql.html#jwt-工作原理",a:"jwt-工作原理"},"122.14":{t:"Express 使用 JWT\r",p:`
安装


jsonwebtoken 用于生成 JWT 字符串
express-jwt 用于将 JWT 字符串解析还原成 JSON 对象

npm install jsonwebtoken expre ...`,l:"server/nodejs/mysql.html#express-使用-jwt",a:"express-使用-jwt"},"123.0":{t:"# npm 与 yarn 的命令对比\r",p:`下面是一个包含 npm 和 Yarn 命令对比的 Markdown 表格：



命令
npm
Yarn




初始化项目
npm init
yarn init


安装依赖项
npm instal ...`,l:"server/npm/command.html",a:"npm-与-yarn-的命令对比"},"124.0":{t:"# NPM：Node Package Manager（Node 包管理器）\r",p:"\r",l:"server/npm/index.html",a:"npm-node-package-manager-node-包管理器"},"124.1":{t:"什么是 npm？\r",p:`npm 是一个用于管理和共享 JavaScript 代码的工具。它是 Node.js 的默认包管理器，也是世界上最大的开源软件注册表。
npm 允许开发者轻松地安装、更新、卸载和共享 JavaScri ...`,l:"server/npm/index.html#什么是-npm",a:"什么是-npm"},"124.2":{t:"安装 npm\r",p:`npm 是随同 Node.js 一起安装的。当你安装 Node.js 时，npm 也会自动安装。
你可以通过在终端中运行以下命令来检查是否已安装 npm 并查看版本：
npm --version

如 ...`,l:"server/npm/index.html#安装-npm",a:"安装-npm"},"124.3":{t:"常用命令\r",p:`以下是一些常用的 npm 命令：

npm init：初始化一个新的 npm 项目，生成一个 package.json 文件。
npm install &lt;package-name&gt;：安装指 ...`,l:"server/npm/index.html#常用命令",a:"常用命令"},"124.4":{t:"package.json\r",p:`package.json 是每个 npm 项目的核心文件，其中包含了项目的配置信息、依赖项、脚本和其他元数据。
可以通过运行 npm init 命令来初始化一个新的项目，并生成 package.jso ...`,l:"server/npm/index.html#package-json",a:"package-json"},"124.5":{t:"使用依赖项\r",p:`使用 npm，你可以轻松地安装和管理项目的依赖项。在 package.json 文件的 dependencies 部分，你可以列出项目所需的包及其版本号。
当其他开发者获得你的项目时，他们可以使用 n ...`,l:"server/npm/index.html#使用依赖项",a:"使用依赖项"},"124.6":{t:"开发和发布包\r",p:`npm 不仅可以帮助你管理项目的依赖项，还可以帮助你开发和发布自己的包。
通过编写代码、创建 package.json 文件、定义脚本和使用 npm publish 命令，你可以将自己的包发布到 np ...`,l:"server/npm/index.html#开发和发布包",a:"开发和发布包"},"125.0":{t:"# 发布包到 npm 上\r",p:`本教程将向你展示如何发布自己的包到 npm 上。按照以下步骤进行操作：
`,l:"server/npm/publish.html",a:"发布包到-npm-上"},"125.1":{t:"步骤 1：注册 npm 账号\r",p:`如果你还没有 npm 账号，请访问 npm 官方网站（https://www.npmjs.com/）并注册一个账号。
`,l:"server/npm/publish.html#步骤-1-注册-npm-账号",a:"步骤-1-注册-npm-账号"},"125.2":{t:"步骤 2：初始化项目\r",p:`在你的项目目录中，打开终端，并执行以下命令来初始化项目：
npm init -y

`,l:"server/npm/publish.html#步骤-2-初始化项目",a:"步骤-2-初始化项目"},"125.3":{t:"步骤 3：编写代码\r",p:`在项目目录中，编写你的包的代码。可以创建一个或多个 JavaScript 文件，实现你的功能逻辑。
`,l:"server/npm/publish.html#步骤-3-编写代码",a:"步骤-3-编写代码"},"125.4":{t:"步骤 4：准备发布文件\r",p:`确保在你的项目中包含以下文件：

package.json：这个文件由 npm init 命令生成，并包含了你的包的基本信息。
README.md：这是你的包的说明文档，提供关于包的介绍、使用方法和示 ...`,l:"server/npm/publish.html#步骤-4-准备发布文件",a:"步骤-4-准备发布文件"},"125.5":{t:"步骤 5：发布包\r",p:`
使用终端登录到你的 npm 账号：

npm login

按照提示提供你的用户名、密码和邮箱。

执行以下命令发布你的包：

npm publish

这将会将你的包上传到 npm 仓库，并使其对 ...`,l:"server/npm/publish.html#步骤-5-发布包",a:"步骤-5-发布包"},"125.6":{t:"步骤 6：更新和维护\r",p:`如果你的包需要更新或有新的版本，你可以按照以下步骤进行更新和维护：


在你的项目中，修改代码并增加新的功能或修复 bug。


更新 package.json 文件中的版本号。


执行以下命令发布 ...`,l:"server/npm/publish.html#步骤-6-更新和维护",a:"步骤-6-更新和维护"},"125.7":{t:"步骤 7：使用你的包\r",p:`其他开发者可以使用以下命令来安装和使用你的包：
npm install &lt;package-name&gt;

将 &lt;package-name&gt; 替换为你的包的名称。
`,l:"server/npm/publish.html#步骤-7-使用你的包",a:"步骤-7-使用你的包"},"126.0":{t:"# yarn 的安装与使用\r",p:"\r",l:"server/npm/yarn.html",a:"yarn-的安装与使用"},"126.1":{t:"安装 Yarn\r",p:`在开始之前，请确保你已经安装了 Node.js。然后，可以按照以下步骤安装 Yarn：
通过包管理器安装 Yarn：
使用 npm（全局安装）： 打开终端并运行以下命令：
npm install -g ...`,l:"server/npm/yarn.html#安装-yarn",a:"安装-yarn"},"126.2":{t:"使用 Yarn\r",p:`安装 Yarn 后，你可以使用以下常用命令来管理依赖关系和执行其他操作：


初始化项目： 进入你的项目目录，并运行以下命令来初始化项目：
yarn init

这将引导你提供有关项目的一些信息，并生 ...`,l:"server/npm/yarn.html#使用-yarn",a:"使用-yarn"},"127.0":{t:"# 驴友攻略\r",p:`&lt;!--
`,l:"travel/index.html",a:"驴友攻略"},"127.1":{t:" ",p:"",l:"travel/index.html#",a:""},"127.2":{t:"常用工具 -->\r",p:"&lt;NavLinks v-for=&quot;{title,items, icon, isShow} in NAV_DATA&quot; :title='title' :icon='icon' : ...",l:"travel/index.html#常用工具",a:"常用工具"},"128.0":{t:"# 重庆\r",p:"&lt;img  src=&quot;./img/chongqing.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot; /&g ...",l:"travel/四川/重庆.html",a:"重庆"},"128.1":{t:"第一天 \r",p:`::: tip 路线
高铁:bullettrain_front:：  &lt;font color=&quot;#3eaf7c&quot;&gt;重庆北站&lt;/font&gt; 轨道交通10号线（ ...`,l:"travel/四川/重庆.html#第一天",a:"第一天"},"128.2":{t:"第二天\r",p:`::: tip 行程安排
解放碑 → 八一好吃街 → 山城步道 → 通远门 → 洪崖洞
:::
::: tip 相关事宜

解放碑

到了重庆后不得不去的一个地方，这里更像是一座城市的名片


八一好 ...`,l:"travel/四川/重庆.html#第二天",a:"第二天"},"128.3":{t:"第三天\r",p:`::: tip 行程安排
川美 → 交通茶馆 → 李子坝站 → 鹅岭贰厂 → 磁器口 → 鹅岭公园
:::
::: tip 相关事宜

川美（黄桷坪校区）

不确定是否还可以进去
涂鸦街，艺术感和设计 ...`,l:"travel/四川/重庆.html#第三天",a:"第三天"},"128.4":{t:"第四天\r",p:`::: tip 行程安排
重庆三峡博物馆 → 湖广会馆 → 重庆自然博物馆（较远）
:::
::: tip 相关事宜

重庆三峡博物馆

门票:euro:：免费 需要身份证
开放时间:alarm_cl ...`,l:"travel/四川/重庆.html#第四天",a:"第四天"},"128.5":{t:"特色美食\r",p:`::: tip 美食参考

马房湾66号江湖菜

八一好吃街

火锅

重庆土九格老火锅(耗儿鱼、麻辣牛肉、精品肥牛卷)
木货街老火锅（较场口店）


三角粑
李子坝梁山鸡
重庆小面
一只酸奶牛（重庆 ...`,l:"travel/四川/重庆.html#特色美食",a:"特色美食"},"129.0":{t:"# 广州\r",p:"&lt;!-- &lt;img  src=&quot;./img/guangzhou.png&quot; alt=&quot;drawing&quot; class=&quot;index-img&q ...",l:"travel/广东/广州.html",a:"广州"},"130.0":{t:"# 南京\r",p:"&lt;img  src=&quot;./img/nanjing.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  /&gt ...",l:"travel/江苏/南京.html",a:"南京"},"130.1":{t:"第一天 \r",p:`::: tip 路线
机场:airplane:：&lt;font color=&quot;#3eaf7c&quot;&gt;南京禄口机场&lt;/font&gt;  乘坐 s1 号线(南京南方向)7  ...`,l:"travel/江苏/南京.html#第一天",a:"第一天"},"130.2":{t:"第二天\r",p:`::: tip 行程安排
古鸡鸣寺 → 明城墙 → 玄武湖 → 总统府 → 新街口吃吃吃
:::
::: tip 路线

步行到 1 号线&lt;font color=&quot;#3eaf7c&qu ...`,l:"travel/江苏/南京.html#第二天",a:"第二天"},"130.3":{t:"第三天\r",p:`::: tip 行程安排
新街口继续吃 → 南京大屠 杀遇难同胞纪念馆&lt;font color=&quot;#3eaf7c&quot;&gt;(需提前预约)&lt;/font&gt;→ 夫子庙 → ...`,l:"travel/江苏/南京.html#第三天",a:"第三天"},"130.4":{t:"第四天\r",p:`::: tip 行程安排
德基广场 → 先锋书店 → 南京博物馆 →1912 酒吧街区
:::
::: tip 路线

步行至&lt;font color=&quot;#3eaf7c&quot;&gt ...`,l:"travel/江苏/南京.html#第四天",a:"第四天"},"130.5":{t:"第五天\r",p:`::: tip 行程安排
睡懒觉 → 红山森林动物园
:::
::: tip 路线
步行至&lt;font color=&quot;#3eaf7c&quot;&gt;张府园 &lt;/font&gt; ...`,l:"travel/江苏/南京.html#第五天",a:"第五天"},"131.0":{t:"# 上饶 \r",p:"&lt;img  src=&quot;./img/shangrao.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  /&g ...",l:"travel/江西/上饶.html",a:"上饶"},"131.1":{t:"第一天\r",p:`::: tip 行程安排
&lt;font color=&quot;#3eaf7c&quot;&gt;上饶高铁站&lt;/font&gt;右手边就是 &lt;font color=&quot;#3ea ...`,l:"travel/江西/上饶.html#第一天",a:"第一天"},"131.2":{t:"第二天\r",p:`::: tip 行程安排
禹皇顶方向 → 右行去巨蟒出山 → 东方女神 → 顺时针游览南清园景区 → 在大三清处走栈道游览万寿园
:::
`,l:"travel/江西/上饶.html#第二天",a:"第二天"},"131.3":{t:"第三天\r",p:`::: tip 行程安排
上午：禹皇顶方向 → 再左行去阳光海岸 → 玉京峰 → 三清宫 → 西海岸
下午：返回宾馆 → 南部索道下山 → 坐车到上饶车站 → 居住在附近
:::
`,l:"travel/江西/上饶.html#第三天",a:"第三天"},"131.4":{t:"第四天\r",p:`::: tip 行程安排
灵山工匠小镇槠溪老街(特色小镇，有小吃) → 万历时代广场(吃喝玩乐，可以看电影)
:::
::: tip 具体

新火车站步行到，在上饶站乘坐 16 路(夜珠垄路口方向)新 ...`,l:"travel/江西/上饶.html#第四天",a:"第四天"},"131.5":{t:"第五天\r",p:`::: tip 行程安排
上饶市博物馆(体验这种城市的文化)
:::
::: tip 具体
步行到新火车站，在上饶站乘坐 6 路(公交西站方向)新火车站上车 15 站到光大银行之后步行 730 米到达 ...`,l:"travel/江西/上饶.html#第五天",a:"第五天"},"132.0":{t:"# 南昌 \r",p:"&lt;img  src=&quot;./img/nanchang.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  sty ...",l:"travel/江西/南昌.html",a:"南昌"},"132.1":{t:"第一天\r",p:`::: tip 行程安排
当前位置 → 南昌 → 万寿宫（珠宝街） → 秋水广场 → 八一大桥
:::
::: tip 路线
居住:convenience_store:：新万达广场附近（位置较居中，附 ...`,l:"travel/江西/南昌.html#第一天",a:"第一天"},"132.2":{t:"第二天\r",p:`::: tip 行程安排
江西省博物馆 → 羊子巷 → 滕王阁游轮 → 新万达
:::
::: tip 路线

&lt;font color=&quot;#3eaf7c&quot;&gt;江西省博物馆 ...`,l:"travel/江西/南昌.html#第二天",a:"第二天"},"132.3":{t:"第三天\r",p:`::: tip 行程安排
第一种：八一起义纪念馆 → 绳金塔 → 699文化创意园 → 象湖公园（晚上） → 国贸（晚上）
第二种：八一起义纪念馆 → 动物园
第三种：八一起义纪念馆 → 国贸
::: ...`,l:"travel/江西/南昌.html#第三天",a:"第三天"},"132.4":{t:"注意事项\r",p:`::: tip 相关注意事项

携带物品

&lt;font color=&quot;#3eaf7c&quot;&gt;衣服&lt;/font&gt;（根据当时气温和天气而定）
&lt;font co ...`,l:"travel/江西/南昌.html#注意事项",a:"注意事项"},"133.0":{t:"# 景德镇\r",p:"&lt;img  src=&quot;./img/nanchang.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  sty ...",l:"travel/江西/景德镇.html",a:"景德镇"},"134.0":{t:"# 杭州\r",p:"&lt;img  src=&quot;./img/hangzhou.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  /&g ...",l:"travel/浙江/杭州.html",a:"杭州"},"134.1":{t:"第一天 \r",p:`::: tip 路线
机场:airplane:：&lt;font color=&quot;#3eaf7c&quot;&gt;地铁一号线（萧山国际机场C 口进）&lt;/font&gt;  往 &lt; ...`,l:"travel/浙江/杭州.html#第一天",a:"第一天"},"134.2":{t:"第二天\r",p:`::: tip 路线
西湖十景(西湖一圈全长 15km)，断桥--白堤--孤山--西冷印社--曲院风荷--苏堤--花港观鱼--雷峰塔--三潭印月--音乐喷泉
:::
::: tip 打卡景点
断桥，苏 ...`,l:"travel/浙江/杭州.html#第二天",a:"第二天"},"134.3":{t:"第三天\r",p:`::: tip 宋城，西溪湿地
介绍:speaker:：宋城古城的景色，以及情桥可以书写祝愿，以及古代表演，西湖湿地，属于湿地公园。
:::
::: tip 路线
宋城:flags:：步行81米到龙翔 ...`,l:"travel/浙江/杭州.html#第三天",a:"第三天"},"134.4":{t:"第四天\r",p:`::: tip 小河直街，大运河(文艺)
介绍:speaker:：宋城古城的景色，以及情桥可以书写祝愿，以及古代表演，西湖湿地，属于湿地公园。
:::
::: tip 路线
小河直街:flags:：一 ...`,l:"travel/浙江/杭州.html#第四天",a:"第四天"},"135.0":{t:"# 武汉\r",p:"&lt;img  src=&quot;./img/wuhan.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot; style=& ...",l:"travel/湖北/武汉.html",a:"武汉"},"135.1":{t:"第一天 \r",p:`::: tip 路线
高铁:bullettrain_front:：  &lt;font color=&quot;#3eaf7c&quot;&gt;武汉站&lt;/font&gt; 地铁 4 号线(柏林 ...`,l:"travel/湖北/武汉.html#第一天",a:"第一天"},"135.2":{t:"第二天\r",p:`::: tip 行程安排
武汉美术馆 → 吉庆街 → 黎黄陂路街头博物馆 → 古德寺庙 → 汉口江滩
:::
::: tip 路线

走路 500 米到达&lt;font color=&quot;#3 ...`,l:"travel/湖北/武汉.html#第二天",a:"第二天"},"135.3":{t:"第三天\r",p:`::: tip 行程安排
黄鹤楼 → 昙华林 → 晴川阁 → 武汉长江大桥
:::
::: tip 路线

走到&lt;font color=&quot;#3eaf7c&quot;&gt;江汉路&lt ...`,l:"travel/湖北/武汉.html#第三天",a:"第三天"},"135.4":{t:"第四天\r",p:`::: tip 行程安排
武大(需要在微信公众号：武汉大学预约) → 东湖
:::
::: tip 路线

步行到&lt;font color=&quot;#3eaf7c&quot;&gt;江汉路&l ...`,l:"travel/湖北/武汉.html#第四天",a:"第四天"},"135.5":{t:"第五天\r",p:`::: tip 行程安排
欢乐谷
:::
::: tip 路线
步行到&lt;font color=&quot;#3eaf7c&quot;&gt;江汉路&lt;/font&gt; 地铁站乘坐 2 号线 ...`,l:"travel/湖北/武汉.html#第五天",a:"第五天"},"136.0":{t:"# 长沙\r",p:"&lt;img  src=&quot;./img/changsha.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;/&gt; ...",l:"travel/湖南/长沙.html",a:"长沙"},"136.1":{t:"第一天\r",p:`::: tip 路线
高铁:bullettrain_front:： &lt;font color=&quot;#3eaf7c&quot;&gt;长沙南站（7 号口）进&lt;/font&gt; 地铁  ...`,l:"travel/湖南/长沙.html#第一天",a:"第一天"},"136.2":{t:"第二天\r",p:`::: tip 行程安排
橘子洲 → 五一广场 → 国金中心 IFS → 太平街 → 坡子街 → 虾小龙吃虾
:::
::: tip 相关事宜

橘子洲

简介：橘子洲是湘江中的一个冲击沙洲，四面环水 ...`,l:"travel/湖南/长沙.html#第二天",a:"第二天"},"136.3":{t:"第三天\r",p:`::: tip 行程安排
岳麓山 → 湖南大学 → 美食街 → 李自健美术馆 → 谢子龙影像艺术馆
:::
::: tip 相关事宜

岳麓山

路线：岳麓书院 → 岳麓山 → 爱晚亭 → 麓山寺 → ...`,l:"travel/湖南/长沙.html#第三天",a:"第三天"},"136.4":{t:"第四天\r",p:`::: tip 行程安排
湖南省博物馆 → 烈士公园 → 米粉街 → 扬帆夜市
:::
::: tip 相关事宜

湖南省博物馆

可以来看看镇馆之宝：马王堆汉墓出土的 2100 年前的西汉女尸~陈列 ...`,l:"travel/湖南/长沙.html#第四天",a:"第四天"},"136.5":{t:"特色美食\r",p:`::: tip 美食参考

粉

甘长顺(五一广场店) （百年历史粉面馆，本地人力荐地道长沙味儿，推荐招牌鸡丝火鸡蛋面）、馨砣粉店(书院路 339 号)、 津市刘聋子粉馆 、 夏记粉店 、公交新村粉店 ...`,l:"travel/湖南/长沙.html#特色美食",a:"特色美食"},"136.6":{t:"特色美食街区\r",p:`::: tip 美食参考

外地游客最多的-太平老街

天心区五一大道与太平交叉口
头吃到尾，大香肠、臭豆腐、炸炸炸（炸串）、奶茶、花甲粉应有尽有~还有一些网红店可以打卡~胡记炸炸炸、文和友老长沙油炸 ...`,l:"travel/湖南/长沙.html#特色美食街区",a:"特色美食街区"},"137.0":{t:"# 厦门\r",p:"&lt;img  src=&quot;./img/xiamen.svg&quot; alt=&quot;drawing&quot; class=&quot;index-img&quot;  /&gt; ...",l:"travel/福建/厦门.html",a:"厦门"},"137.1":{t:"第一天 \r",p:`::: tip 路线
高铁:bullettrain_front:：  &lt;font color=&quot;#3eaf7c&quot;&gt;厦门北站&lt;/font&gt; 乘坐快 1 线/  ...`,l:"travel/福建/厦门.html#第一天",a:"第一天"},"137.2":{t:"第二天\r",p:`::: tip 行程安排
植物园 → 胡里山炮台 → 曾厝垵 → 书法广场 → 白城沙滩 → 中山路
:::
::: tip 路线

步行到&lt;font color=&quot;#3eaf7c&q ...`,l:"travel/福建/厦门.html#第二天",a:"第二天"},"137.3":{t:"第三天\r",p:`::: tip 行程安排
鼓浪屿(微信公众号: 厦门轮渡有限公司)
:::
::: tip 路线

步行到&lt;font color=&quot;#3eaf7c&quot;&gt;火车站(湖东)&l ...`,l:"travel/福建/厦门.html#第三天",a:"第三天"},"137.4":{t:"第四天\r",p:`::: tip 行程安排
南普陀寺 → 厦门大学(u 厦大预约) → 猫街-沙坡尾 → 华侨博物馆(9.30-4.30) → 中华城
:::
::: tip 路线

步行到&lt;font color ...`,l:"travel/福建/厦门.html#第四天",a:"第四天"},"137.5":{t:"第五天\r",p:`::: tip 行程安排
睡懒觉 → 中山公园
:::
::: tip 路线

步行到&lt;font color=&quot;#3eaf7c&quot;&gt;梧村车站&lt;/font&gt;乘坐 ...`,l:"travel/福建/厦门.html#第五天",a:"第五天"},"138.0":{t:"# 初始 Canvas\r",p:"\r",l:"visual/canvas/base/初识Canvas.html",a:"初始-canvas"},"138.1":{t:"什么是 canvas？\r",p:`
Canvas 是 HTML5 中的一个元素，允许使用 JavaScript 脚本在矩形区域中绘制图像、动画和其他复杂的视觉效果。它提供了许多 API，允许控制绘图区域、颜色、线条、文本、图像等多种元 ...`,l:"visual/canvas/base/初识Canvas.html#什么是-canvas",a:"什么是-canvas"},"138.2":{t:"一. Canvas 的基础知识\r",p:"\r",l:"visual/canvas/base/初识Canvas.html#一-canvas-的基础知识",a:"一-canvas-的基础知识"},"138.3":{t:"1.1 坐标系统\r",p:"Canvas 使用直角坐标系，原点坐标为（0, 0），x 轴向右延伸，y 轴向下延伸。可以通过 Canvas API 访问 x 轴和 y 轴上的位置以及宽度和高度等信息，通过为图形或其他元素设置 x  ...",l:"visual/canvas/base/初识Canvas.html#_1-1-坐标系统",a:"_1-1-坐标系统"},"138.4":{t:"1.2 绘图上下文\r",p:"Canvas 可以绘制 SVG 和其他类型的矢量图形，但在大多数情况下，使用 Canvas 的绘图上下文进行绘制是最基本和有效的方法。Canvas API 提供了两种基本的绘图上下文，2D 和 Web ...",l:"visual/canvas/base/初识Canvas.html#_1-2-绘图上下文",a:"_1-2-绘图上下文"},"138.5":{t:"1.3 绘图元素\r",p:"Canvas 提供了多种绘图元素，包括路径和图形、文本、图像、矩形和其他形状等。绘图元素可以通过 Canvas API 进行控制，可以简单地绘制圆形、矩形、线条等图形，也可以绘制更高级的元素，如 3D ...",l:"visual/canvas/base/初识Canvas.html#_1-3-绘图元素",a:"_1-3-绘图元素"},"138.6":{t:"二. 使用 Canvas 创造交互式效果\r",p:`除了基本的绘图功能之外，Canvas 还可以创造交互式效果，用来展示和操控数据、陈述观点、以及制作各种绚丽的视觉展示等。
例如，您可以通过 Canvas 在一个网页上创造一个交互式地图，让用户点击地图 ...`,l:"visual/canvas/base/初识Canvas.html#二-使用-canvas-创造交互式效果",a:"二-使用-canvas-创造交互式效果"},"138.7":{t:"三. 使用 Canvas 创造动画\r",p:"由于 Canvas 非常适合处理像素级别的控制，利用 JavaScript 脚本使 Canvas 绘制出具有动态效果的图像和视觉艺术也显得非常合适。通过 Canvas API，您可以控制图形元素的位移 ...",l:"visual/canvas/base/初识Canvas.html#三-使用-canvas-创造动画",a:"三-使用-canvas-创造动画"},"138.8":{t:"四. Canvas 的局限性\r",p:"Canvas 虽然在 HTML5 中提供了许多优势，但也存在一些限制。例如，不同的浏览器可能解释 Canvas API 时存在差异，因此需要在开发过程中进行跨浏览器的测试。此外，在处理大量的图像和其他 ...",l:"visual/canvas/base/初识Canvas.html#四-canvas-的局限性",a:"四-canvas-的局限性"},"139.0":{t:"# Canvas 图像变换\r",p:`以下方法用于图像变换。

CanvasRenderingContext2D.rotate()：图像旋转
CanvasRenderingContext2D.scale()：图像缩放
CanvasRend ...`,l:"visual/canvas/base/图像变换.html",a:"canvas-图像变换"},"139.1":{t:"1.rotate()\r",p:`CanvasRenderingContext2D.rotate()方法用于图像旋转。它接受一个弧度值作为参数，表示顺时针旋转的度数。
context.rotate((45 * Math.PI) / 1 ...`,l:"visual/canvas/base/图像变换.html#_1-rotate",a:"_1-rotate"},"139.2":{t:"2.scale()\r",p:"CanvasRenderingContext2D.scale()方法用于缩放图像。它接受两个参数，分别是x轴方向的缩放因子和y轴方向的缩放因子。默认情况下，一个单位就是一个像素，缩放因子可以缩放单位， ...",l:"visual/canvas/base/图像变换.html#_2-scale",a:"_2-scale"},"139.3":{t:"3.translate()\r",p:`CanvasRenderingContext2D.translate()方法用于平移图像。它接受两个参数，分别是 x 轴和 y 轴移动的距离（单位像素）。
context.fillRect(0, 0, ...`,l:"visual/canvas/base/图像变换.html#_3-translate",a:"_3-translate"},"139.4":{t:"4.transform()\r",p:`CanvasRenderingContext2D.transform()方法接受一个变换矩阵的六个元素作为参数，完成缩放、旋转、移动和倾斜等变形。
它的使用格式如下。
context.transfor ...`,l:"visual/canvas/base/图像变换.html#_4-transform",a:"_4-transform"},"139.5":{t:"5.setTransform()\r",p:`CanvasRenderingContext2D.setTransform()方法取消前面的图形变换，将画布恢复到该方法指定的状态。该方法的参数与transform()方法完全一致。
context. ...`,l:"visual/canvas/base/图像变换.html#_5-settransform",a:"_5-settransform"},"140.0":{t:"# Canvas 图像合成\r",p:`
在默认情况之下，如果在 Canvas 之中将某个物体（源）绘制在另一个物体（目标）之上，那么浏览器就会简单地把源特体的图像叠放在目标物体图像上面。


在 Canvas 中，把图像源和目标图像，通过 ...`,l:"visual/canvas/base/图像合成.html",a:"canvas-图像合成"},"140.1":{t:"属性\r",p:`


source-over
默认。在目标图像上显示源图像。




source-atop
在目标图像顶部显示源图像。源图像位于目标图像之外的部分是不可见的。


source-in
在目标图像中显 ...`,l:"visual/canvas/base/图像合成.html#属性",a:"属性"},"141.0":{t:"# Canvas 使用\r",p:"\r",l:"visual/canvas/base/基本使用.html",a:"canvas-使用"},"141.1":{t:"使用\r",p:"&lt;canvas id=&quot;canvas&quot; width=&quot;600&quot; height=&quot;400&quot;&gt;您的浏览器不支持 Canvas&lt; ...",l:"visual/canvas/base/基本使用.html#使用",a:"使用"},"141.2":{t:"属性方法\r",p:`
strokeStyle 设置或返回描边颜色
fillStyle 设置或返回填充颜色
stroke() 描边已定义绘图（路径）
fill() 填充当前绘图（路径）
moveTo(x,y) 把路径移动到 ...`,l:"visual/canvas/base/基本使用.html#属性方法",a:"属性方法"},"142.0":{t:"# Canvas 样式控制\r",p:"\r",l:"visual/canvas/base/样式控制.html",a:"canvas-样式控制"},"142.1":{t:"1.线性\r",p:`以下的方法和属性控制线条的视觉特征。

CanvasRenderingContext2D.lineWidth：指定线条的宽度，默认为 1.0。
CanvasRenderingContext2D.lin ...`,l:"visual/canvas/base/样式控制.html#_1-线性",a:"_1-线性"},"142.2":{t:"2.渐变色\r",p:`以下方法用于设置渐变效果和图像填充效果。

CanvasRenderingContext2D.createLinearGradient()：定义线性渐变样式。
CanvasRenderingConte ...`,l:"visual/canvas/base/样式控制.html#_2-渐变色",a:"_2-渐变色"},"142.3":{t:"3.图像填充\r",p:`createPattern()方法定义一个图像填充样式，在指定方向上不断重复该图像，填充指定的区域。
context.createPattern(image, repetition)

该方法接受两个 ...`,l:"visual/canvas/base/样式控制.html#_3-图像填充",a:"_3-图像填充"},"142.4":{t:"4.阴影\r",p:`以下属性用于设置阴影。

CanvasRenderingContext2D.shadowBlur：阴影的模糊程度，默认为0。
CanvasRenderingContext2D.shadowColor： ...`,l:"visual/canvas/base/样式控制.html#_4-阴影",a:"_4-阴影"},"143.0":{t:"# Canvas 状态\r",p:`
save() 保存当前环境的状态。
restore() 返回之前保存过的路径状态和属性。

context.fillStyle = 'red'
context.fillRect(0, 0, 100, ...`,l:"visual/canvas/base/状态.html",a:"canvas-状态"},"144.0":{t:"# Canvas 绘制图形、图像、文字\r",p:"\r",l:"visual/canvas/base/绘制.html",a:"canvas-绘制图形、图像、文字"},"144.1":{t:"绘制图形\r",p:"\r",l:"visual/canvas/base/绘制.html#绘制图形",a:"绘制图形"},"144.2":{t:"绘制矩形\r",p:`//绘制矩形fillRect|strokeRect(位置x，位置y，宽度，高度)
context.strokeRect(150, 50, 100, 100) // 路径
context.fillRec ...`,l:"visual/canvas/base/绘制.html#绘制矩形",a:"绘制矩形"},"144.3":{t:"绘制圆弧\r",p:`
圆弧

// context.arc(圆心x,圆心y,半径,开始的角度,结束的角度)
// 顺时针false 逆时针true 默认值false
context.arc(300, 200, 50, 0 ...`,l:"visual/canvas/base/绘制.html#绘制圆弧",a:"绘制圆弧"},"144.4":{t:"绘制线段\r",p:`context.beginPath()
context.moveTo(100, 300)
context.lineTo(300, 300)
context.lineTo(200, 150)
conte ...`,l:"visual/canvas/base/绘制.html#绘制线段",a:"绘制线段"},"144.5":{t:"绘制图像\r",p:`
三种绘制图片的的方式

context.drawImage(image, dx, dy)
context.drawImage(image, dx, dy, dWidth, dHeight)
cont ...`,l:"visual/canvas/base/绘制.html#绘制图像",a:"绘制图像"},"144.6":{t:"绘制文本\r",p:`以下方法和属性用于绘制文本。

CanvasRenderingContext2D.fillText()：在指定位置绘制实心字符。
CanvasRenderingContext2D.strokeText ...`,l:"visual/canvas/base/绘制.html#绘制文本",a:"绘制文本"},"145.0":{t:"# Canvas 贝塞尔曲线\r",p:"\r",l:"visual/canvas/base/贝塞尔曲线.html",a:"canvas-贝塞尔曲线"},"145.1":{t:"绘制贝塞尔二次曲线\r",p:`
聊天框

context.moveTo(200, 300)
// quadraticCurveTo(控制点x,控制点y,终点x,终点y)
context.quadraticCurveTo(150,  ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔二次曲线",a:"绘制贝塞尔二次曲线"},"145.2":{t:"绘制贝塞尔三次曲线\r",p:`
爱心

context.moveTo(300, 120)
// bezierCurveTo(控制点1 x,控制点1 y,控制点2 x,控制点2 y,终点x,终点y)
context.bezierCu ...`,l:"visual/canvas/base/贝塞尔曲线.html#绘制贝塞尔三次曲线",a:"绘制贝塞尔三次曲线"},"146.0":{t:"# 刮刮乐\r",p:"\r",l:"visual/canvas/example/刮刮乐.html",a:"刮刮乐"},"146.1":{t:"示例\r",p:`&lt;Cbtn text='再来一次' @click='again' /&gt;
&lt;div style='height:400px'&gt;
&lt;Scratchcard v-if='sho ...`,l:"visual/canvas/example/刮刮乐.html#示例",a:"示例"},"146.2":{t:"代码\r",p:`&lt;div id=&quot;ggk&quot;&gt;谢谢惠顾&lt;/div&gt;
&lt;canvas id=&quot;myCanvas&quot; width=&quot;600&qu ...`,l:"visual/canvas/example/刮刮乐.html#代码",a:"代码"},"147.0":{t:"# 时钟\r",p:"\r",l:"visual/canvas/example/时钟.html",a:"时钟"},"147.1":{t:"示例\r",p:`&lt;Clock /&gt;
`,l:"visual/canvas/example/时钟.html#示例",a:"示例"},"147.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/时钟.html#代码",a:"代码"},"147.3":{t:"js 实现\r",p:`var canvas = document.getElementById('canvas')
var context = canvas.getContext('2d')
function render ...`,l:"visual/canvas/example/时钟.html#js-实现",a:"js-实现"},"147.4":{t:"vue3 实现\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/时钟.html#vue3-实现",a:"vue3-实现"},"148.0":{t:"# 梅花特效\r",p:`
参考视频教程

`,l:"visual/canvas/example/梅花特效.html",a:"梅花特效"},"148.1":{t:"示例\r",p:`&lt;Plum /&gt;
`,l:"visual/canvas/example/梅花特效.html#示例",a:"示例"},"148.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;
    &lt;canvas ref=&quot;canvas&quot; width=&quot;600&quot; height=&q ...`,l:"visual/canvas/example/梅花特效.html#代码",a:"代码"},"149.0":{t:"# 画板\r",p:"\r",l:"visual/canvas/example/画板.html",a:"画板"},"149.1":{t:"示例\r",p:`&lt;Draw /&gt;
`,l:"visual/canvas/example/画板.html#示例",a:"示例"},"149.2":{t:"代码\r",p:"\r",l:"visual/canvas/example/画板.html#代码",a:"代码"},"149.3":{t:"JS 实现\r",p:`&lt;button id=&quot;boldBtn&quot;&gt;粗线条&lt;/button&gt;
&lt;button id=&quot;thinBtn&quot;&gt;细线条&lt; ...`,l:"visual/canvas/example/画板.html#js-实现",a:"js-实现"},"149.4":{t:"Vue3 实现\r",p:`&lt;template&gt;
  &lt;div class=&quot;btns&quot;&gt;
    &lt;CBtn @click=&quot;boldBtn&quot; text=& ...`,l:"visual/canvas/example/画板.html#vue3-实现",a:"vue3-实现"},"150.0":{t:"<!-- # echarts -->\r",p:`该内容正在努力建设中 ......
`,l:"visual/echarts/index.html",a:"echarts"},"151.0":{t:"# PixiJs 事件交互\r",p:"\r",l:"visual/pixiJs/事件交互.html",a:"pixijs-事件交互"},"151.1":{t:"为精灵添加事件\r",p:`// 为精灵添加交互事件
sprite.interactive = true

// 精灵派加点击事件
sprite.on('click', (e) =&gt; {
  console.log(e,  ...`,l:"visual/pixiJs/事件交互.html#为精灵添加事件",a:"为精灵添加事件"},"151.2":{t:"为图形添加事件\r",p:`// 创建矩形
const rect = new PIXI.Graphics()
rect.beginFill(0xff0000)
rect.drawRect(300, 300, 150, 150)
 ...`,l:"visual/pixiJs/事件交互.html#为图形添加事件",a:"为图形添加事件"},"152.0":{t:"# 初识 PixiJs\r",p:`官方网站
`,l:"visual/pixiJs/初识PixiJs.html",a:"初识-pixijs"},"152.1":{t:"是什么\r",p:`
PixiJS 是一个基于 WebGL 和 Canvas 技术的快速、轻量级的 JavaScript 库，用于创建交互式 2D 图形和动画。它提供了简单易用的 API 和强大的渲染能力，使开发者能够轻 ...`,l:"visual/pixiJs/初识PixiJs.html#是什么",a:"是什么"},"152.2":{t:"特点\r",p:"\r",l:"visual/pixiJs/初识PixiJs.html#特点",a:"特点"},"152.3":{t:"1. 快速高效\r",p:`PixiJS 利用 WebGL 技术进行硬件加速渲染，能够处理大量的图形元素并实现流畅的动画效果。它还支持使用 Canvas 进行降级渲染，以确保在不支持 WebGL 的设备上也能正常运行。
`,l:"visual/pixiJs/初识PixiJs.html#_1-快速高效",a:"_1-快速高效"},"152.4":{t:"2. 简单易用\r",p:`PixiJS 提供了简洁而直观的 API，使开发者能够快速上手并高效地创建图形和动画。它具有一致的接口设计和详细的文档，方便开发者查阅和学习。
`,l:"visual/pixiJs/初识PixiJs.html#_2-简单易用",a:"_2-简单易用"},"152.5":{t:"3. 丰富的功能\r",p:`PixiJS 提供了一系列强大的功能，包括精灵(Sprite)、纹理(Texture)、滤镜(Filters)、事件处理等。开发者可以通过组合这些功能来创建复杂的交互式图形界面和游戏。
`,l:"visual/pixiJs/初识PixiJs.html#_3-丰富的功能",a:"_3-丰富的功能"},"152.6":{t:"4. 跨平台支持\r",p:`PixiJS 可以在现代浏览器上运行，并提供了针对移动设备的优化。它支持响应式设计，使开发者能够创建适应不同屏幕大小和分辨率的应用。
`,l:"visual/pixiJs/初识PixiJs.html#_4-跨平台支持",a:"_4-跨平台支持"},"152.7":{t:"用法示例\r",p:`下面是一个简单的 PixiJS 示例，展示了如何创建一个基本的场景并添加一个可交互的精灵：
// 创建一个场景
let app = new PIXI.Application({ width: 800, ...`,l:"visual/pixiJs/初识PixiJs.html#用法示例",a:"用法示例"},"153.0":{t:"# PixiJs 基本使用\r",p:"\r",l:"visual/pixiJs/基本使用.html",a:"pixijs-基本使用"},"153.1":{t:"使用\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/基本使用.html#使用",a:"使用"},"153.2":{t:"Graphics 类详解\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/基本使用.html#graphics-类详解",a:"graphics-类详解"},"154.0":{t:"# PixiJs 文字与遮罩\r",p:"\r",l:"visual/pixiJs/文字与遮罩.html",a:"pixijs-文字与遮罩"},"154.1":{t:"添加文字\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/文字与遮罩.html#添加文字",a:"添加文字"},"154.2":{t:"使用文字作为精灵的遮罩\r",p:`// 创建一个精灵
const sprite = PIXI.Sprite.from(
  'https://pic.rmb.bdstatic.com/05b0ea405c9e690ab51627853 ...`,l:"visual/pixiJs/文字与遮罩.html#使用文字作为精灵的遮罩",a:"使用文字作为精灵的遮罩"},"155.0":{t:"# 波纹涟漪效果\r",p:"\r",l:"visual/pixiJs/波纹涟漪效果.html",a:"波纹涟漪效果"},"155.1":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/波纹涟漪效果.html#代码",a:"代码"},"156.0":{t:"# PixiJs 滤镜特效\r",p:"\r",l:"visual/pixiJs/滤镜特效.html",a:"pixijs-滤镜特效"},"156.1":{t:"创建应用\r",p:`// 导入pixi
import * as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	wi ...`,l:"visual/pixiJs/滤镜特效.html#创建应用",a:"创建应用"},"156.2":{t:"添加滤镜\r",p:`// 创建模糊滤镜
const blurFilter = new PIXI.BlurFilter()
// 设置模糊滤镜的模糊程度
blurFilter.blur = 10
// 将模糊滤镜添加到精灵 ...`,l:"visual/pixiJs/滤镜特效.html#添加滤镜",a:"添加滤镜"},"156.3":{t:"使用 pixi-filters 库\r",p:`npm install pixi-filters

// 创建轮廓滤镜
const outlineFilter = new OutlineFilter(5, 0xffff00) // 轮廓宽度，颜色
 ...`,l:"visual/pixiJs/滤镜特效.html#使用-pixi-filters-库",a:"使用-pixi-filters-库"},"157.0":{t:"# PixiJs 精灵与动画\r",p:"\r",l:"visual/pixiJs/精灵与动画.html",a:"pixijs-精灵与动画"},"157.1":{t:"1.创建应用\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/精灵与动画.html#_1-创建应用",a:"_1-创建应用"},"157.2":{t:"2.创建纹理与精灵\r",p:`// 创建一个纹理
const texture = PIXI.Texture.from('./vite.svg')

// 创建一个精灵
const sprite = new PIXI.Sprite( ...`,l:"visual/pixiJs/精灵与动画.html#_2-创建纹理与精灵",a:"_2-创建纹理与精灵"},"157.3":{t:"3.设置属性\r",p:`// 锚点
sprite.anchor.set(0.5, 0.5)

// 设置位置
sprite.x = app.screen.width / 2
sprite.y = app.screen.hei ...`,l:"visual/pixiJs/精灵与动画.html#_3-设置属性",a:"_3-设置属性"},"157.4":{t:"4.实现动画\r",p:`// ticker 实现动画
app.ticker.add((delta) =&gt; {
  sprite.rotation += 0.01 delta
})

`,l:"visual/pixiJs/精灵与动画.html#_4-实现动画",a:"_4-实现动画"},"158.0":{t:"# PixiJs 绘制图形\r",p:"\r",l:"visual/pixiJs/绘制图形.html",a:"pixijs-绘制图形"},"158.1":{t:"绘制椭圆\r",p:`const ellipse = new PIXI.Graphics()
ellipse.beginFill(0x66ccff)
ellipse.drawEllipse(0, 0, 164, 64)
e ...`,l:"visual/pixiJs/绘制图形.html#绘制椭圆",a:"绘制椭圆"},"158.2":{t:"绘制多边形\r",p:`const polygon = new PIXI.Graphics()
polygon.beginFill(0x660000)
// 参数一个数组，数组中的每一个元素是一个点的坐标，每两个元素是一个点 ...`,l:"visual/pixiJs/绘制图形.html#绘制多边形",a:"绘制多边形"},"158.3":{t:"创建圆角矩形\r",p:`const roundedRectangle = new PIXI.Graphics()
roundedRectangle.beginFill(0x66ccff, 0.9)

// 绘制圆角矩形 x  ...`,l:"visual/pixiJs/绘制图形.html#创建圆角矩形",a:"创建圆角矩形"},"158.4":{t:"绘制圆弧\r",p:`const arc = new PIXI.Graphics()
arc.beginFill(0x660000)
// arc(x坐标,y坐标,半径,其实角度,结束角度,顺/逆时针)
arc.arc(0 ...`,l:"visual/pixiJs/绘制图形.html#绘制圆弧",a:"绘制圆弧"},"158.5":{t:"绘制线段\r",p:`const line = new PIXI.Graphics()
line.lineStyle(10, 0x660000, 0.6) // 宽度，颜色，透明度
line.moveTo(0, 0)
li ...`,l:"visual/pixiJs/绘制图形.html#绘制线段",a:"绘制线段"},"159.0":{t:"# 谷歌恐龙小游戏\r",p:"\r",l:"visual/pixiJs/谷歌恐龙小游戏.html",a:"谷歌恐龙小游戏"},"159.1":{t:"素材图片\r",p:`!谷歌恐龙小游戏素材
`,l:"visual/pixiJs/谷歌恐龙小游戏.html#素材图片",a:"素材图片"},"159.2":{t:"代码\r",p:`&lt;template&gt;
  &lt;div&gt;app&lt;/div&gt;
&lt;/template&gt;



`,l:"visual/pixiJs/谷歌恐龙小游戏.html#代码",a:"代码"},"160.0":{t:"# PixiJs 资源管理\r",p:`
PIXI.Assets用于加载资源
使用PIXI.Container创建容器，对多个资源分组，设置容器属性即可应用到容器内的精灵

`,l:"visual/pixiJs/资源管理.html",a:"pixijs-资源管理"},"160.1":{t:"单次添加资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#单次添加资源",a:"单次添加资源"},"160.2":{t:"一次添加多个资源\r",p:`// 导入pixi
import as PIXI from &quot;pixi.js&quot;;

// 创建应用
const app = new PIXI.Application({
	widt ...`,l:"visual/pixiJs/资源管理.html#一次添加多个资源",a:"一次添加多个资源"},"161.0":{t:"# SVG\r",p:"\r",l:"visual/svg/index.html",a:"svg"},"161.1":{t:"是什么\r",p:`
SVG 是 Scalable Vector Graphics 的缩写 意为可缩放矢量图形
SVG 是一个基于文本的开放网络标准，用来定义用于网络的矢量图形
SVG 图像在放大或改变尺寸的情况下其图形 ...`,l:"visual/svg/index.html#是什么",a:"是什么"},"161.2":{t:"基本图形\r",p:"\r",l:"visual/svg/index.html#基本图形",a:"基本图形"},"161.3":{t:"线条（line）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性 style 是看不出效果的 --&gt;
  &lt;line x1=&quot;50&quot; x2=&quot;50&quot; y1 ...`,l:"visual/svg/index.html#线条-line",a:"线条-line"},"161.4":{t:"矩形（rect）\r",p:`&lt;svg&gt;
  &lt;rect x=&quot;400&quot; y=&quot;200&quot; width=&quot;150&quot; height=&quot;50&quo ...`,l:"visual/svg/index.html#矩形-rect",a:"矩形-rect"},"161.5":{t:"圆形（circle）\r",p:`&lt;svg&gt;
  &lt;circle cx=&quot;370&quot; cy=&quot;95&quot; r=&quot;50&quot; style=&quot;stroke:gr ...`,l:"visual/svg/index.html#圆形-circle",a:"圆形-circle"},"161.6":{t:"椭圆（cllipse）\r",p:`&lt;svg&gt;
  &lt;ellipse cx=&quot;100&quot; cy=&quot;100&quot; rx=&quot;100&quot; ry=&quot;50&quot; ...`,l:"visual/svg/index.html#椭圆-cllipse",a:"椭圆-cllipse"},"161.7":{t:"多边形（polygon）\r",p:`&lt;svg&gt;
  &lt;!-- 不设置样式属性style是看不出效果的 并且polygon默认为填充需要把fill属性设置为none --&gt;
  &lt;polygon
    po ...`,l:"visual/svg/index.html#多边形-polygon",a:"多边形-polygon"},"161.8":{t:"折线（polyline）\r",p:`&lt;svg&gt;
  &lt;polyline points=&quot;300 300,50 100,120 300,200,30&quot; fill-opacity=&quot;0&quo ...`,l:"visual/svg/index.html#折线-polyline",a:"折线-polyline"},"161.9":{t:"路径（path）\r",p:`&lt;svg&gt;
  &lt;path
    fill-opacity=&quot;0&quot;
    stroke=&quot;skyblue&quot;
    d=&quot;
   ...`,l:"visual/svg/index.html#路径-path",a:"路径-path"},"162.0":{t:"# 初识 ThreeJs\r",p:`
Three.js 学习指南
Three.js 中文官方文档

Three.js 是一种用于在 Web 浏览器中创建交互式 3D 图形的 JavaScript 库。它允许开发人员在 Web 应用程序中 ...`,l:"visual/threejs/base/index.html",a:"初识-threejs"},"163.0":{t:"# 渲染场景和物体\r",p:`\r
\r
\r`,l:"visual/threejs/base/渲染场景和物体.html",a:"渲染场景和物体"},"163.1":{t:"渲染第一个场景和物体\r",p:"\r",l:"visual/threejs/base/渲染场景和物体.html#渲染第一个场景和物体",a:"渲染第一个场景和物体"},"163.2":{t:"示例\r",p:`&lt;Scene1 /&gt;
`,l:"visual/threejs/base/渲染场景和物体.html#示例",a:"示例"},"163.3":{t:"代码\r",p:`:::code-group
&lt;&lt;&lt; @/visual/threejs/components/Scene1.vue[完整代码]
:::
`,l:"visual/threejs/base/渲染场景和物体.html#代码",a:"代码"},"163.4":{t:"轨道控制器查看物体\r",p:"\r",l:"visual/threejs/base/渲染场景和物体.html#轨道控制器查看物体",a:"轨道控制器查看物体"},"163.5":{t:"示例\r",p:`&lt;Scene2 /&gt;
`,l:"visual/threejs/base/渲染场景和物体.html#示例",a:"示例"},"163.6":{t:"导入轨道控制器\r",p:`import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'

`,l:"visual/threejs/base/渲染场景和物体.html#导入轨道控制器",a:"导入轨道控制器"},"163.7":{t:"创建轨道控制器\r",p:`// 创建轨道控制器
const controls = new OrbitControls(camera, renderer.domElement)

`,l:"visual/threejs/base/渲染场景和物体.html#创建轨道控制器",a:"创建轨道控制器"},"163.8":{t:"每一帧根据控制器更新画面\r",p:`function render() {
  //如果后期需要控制器带有阻尼效果，或者自动旋转等效果，就需要加入controls.update()
  controls.update()
  rende ...`,l:"visual/threejs/base/渲染场景和物体.html#每一帧根据控制器更新画面",a:"每一帧根据控制器更新画面"},"163.9":{t:"代码\r",p:`:::code-group
&lt;&lt;&lt; @/visual/threejs/components/Scene2.vue#snippet{js}[示例]
&lt;&lt;&lt; @/vis ...`,l:"visual/threejs/base/渲染场景和物体.html#代码",a:"代码"},"163.10":{t:"坐标轴辅助器\r",p:"\r",l:"visual/threejs/base/渲染场景和物体.html#坐标轴辅助器",a:"坐标轴辅助器"},"163.11":{t:"示例\r",p:`&lt;Scene /&gt;
`,l:"visual/threejs/base/渲染场景和物体.html#示例",a:"示例"},"163.12":{t:"代码\r",p:`:::code-group
&lt;&lt;&lt; @/visual/threejs/components/Scene.vue#snippet{js}[示例]
&lt;&lt;&lt; @/visu ...`,l:"visual/threejs/base/渲染场景和物体.html#代码",a:"代码"},"164.0":{t:"# 物体的缩放、位移和旋转\r",p:`\r
\r
\r`,l:"visual/threejs/base/缩放、位移和旋转.html",a:"物体的缩放、位移和旋转"},"164.1":{t:"缩放\r",p:`//例如设置x轴放大3倍、y轴方向放大2倍、z轴方向不变
cube.scale.set(3, 2, 1)
//单独设置某个轴的缩放
cube.scale.x = 3

`,l:"visual/threejs/base/缩放、位移和旋转.html#缩放",a:"缩放"},"164.2":{t:"位移\r",p:`cube.position.set(1, 2, 3)

//单独设置某个轴的位移
cube.position.x = 3

`,l:"visual/threejs/base/缩放、位移和旋转.html#位移",a:"位移"},"164.3":{t:"旋转\r",p:`//直接设置旋转属性，例如围绕x轴旋转90度
cube.rotation.x = -Math.PI / 4

//围绕x轴旋转45度
cube.rotation.set(-Math.PI / 4, 0 ...`,l:"visual/threejs/base/缩放、位移和旋转.html#旋转",a:"旋转"},"164.4":{t:"效果\r",p:`&lt;transForm /&gt;
`,l:"visual/threejs/base/缩放、位移和旋转.html#效果",a:"效果"},"164.5":{t:"代码\r",p:`:::code-group
&lt;&lt;&lt; @/visual/threejs/components/transForm.vue{45-58,77-87 vue:line-numbers}[完 ...`,l:"visual/threejs/base/缩放、位移和旋转.html#代码",a:"代码"},"165.0":{t:"# VitePress 从 0 开始搭建个人网站\r",p:`
xiaosu blog 从无到有的过程
VitePress 官方网站
VitePress 中文网

`,l:"vitepress.html",a:"vitepress-从-0-开始搭建个人网站"},"165.1":{t:"一、 创建项目\r",p:`

在 gitbub 上新建项目，建议勾选 Add a README file


新建文件夹 blog
可以使用 npm，yarn，pnpm


`,l:"vitepress.html#一、-创建项目",a:"一、-创建项目"},"165.2":{t:"初始化项目\r",p:`npm init -y


安装 vitepress

yarn add --dev vitepress vue


package.json 添加 script

&quot;scripts&quo ...`,l:"vitepress.html#初始化项目",a:"初始化项目"},"165.3":{t:"npx 创建项目\r",p:`npx create-vitepress my-site

cd my-site
npm install  或 yarn install
npm run dev  或 yarn dev

`,l:"vitepress.html#npx-创建项目",a:"npx-创建项目"},"165.4":{t:"本地运行\r",p:`
运行

yarn docs:dev


打包

yarn docs:build

!img
`,l:"vitepress.html#本地运行",a:"本地运行"},"165.5":{t:"二、 基本配置\r",p:"\r",l:"vitepress.html#二、-基本配置",a:"二、-基本配置"},"165.6":{t:"目录结构\r",p:"在目录下新建 docs 文件夹，在其中新建.vitepress 文件夹和 config.js 文件，config.js 文件就是我们的配置文件，新建一个 index.html 作为我们的主页，在新建一 ...",l:"vitepress.html#目录结构",a:"目录结构"},"165.7":{t:"1. 配置首页\r",p:`vitepress 支持用户使用 yaml 配置页面的内容，在 docs/index.html 写下如下内容，更多配置请查看
---
layout: home

title: 选项卡标题
titleT ...`,l:"vitepress.html#_1-配置首页",a:"_1-配置首页"},"165.8":{t:"2. 配置网站\r",p:"\r",l:"vitepress.html#_2-配置网站",a:"_2-配置网站"},"165.9":{t:"配置导航栏部分\r",p:`在 config.js 中可以开始我们的配置，先写上如下内容，这是网站的标题和描述，标题会在浏览器标签上展示
export default defineConfig({
  base: '/docs/ ...`,l:"vitepress.html#配置导航栏部分",a:"配置导航栏部分"},"165.10":{t:"配置侧边栏部分\r",p:`themeConfig: {
  // ...省略前面的内容
  // 侧边栏
  sidebar: {
    &quot;/articles/other&quot;: [
      {
     ...`,l:"vitepress.html#配置侧边栏部分",a:"配置侧边栏部分"},"165.11":{t:"三、 部署到 github.io\r",p:`新建脚本文件 deploy.sh，与 docs 文件夹处于同一级
#!/usr/bin/env sh

# 确保脚本抛出遇到的错误
set -e

# 生成静态文件
yarn docs:build

 ...`,l:"vitepress.html#三、-部署到-github-io",a:"三、-部署到-github-io"}},n={previewLength:100,buttonLabel:"搜索",placeholder:"请输入关键词",allow:[],ignore:[]},r={INDEX_DATA:t,PREVIEW_LOOKUP:e,Options:n};export{r as default};
